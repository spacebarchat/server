{
    "openapi": "3.1.0",
    "info": {
        "title": "Spacebar Server",
        "description": "Spacebar is a Discord.com server implementation and extension, with the goal of complete feature parity with Discord.com, all while adding some additional goodies, security, privacy, and configuration options.",
        "license": {
            "name": "AGPLV3",
            "url": "https://www.gnu.org/licenses/agpl-3.0.en.html"
        },
        "version": "1.0.0"
    },
    "externalDocs": {
        "description": "Spacebar Docs",
        "url": "https://docs.spacebar.chat"
    },
    "servers": [
        {
            "url": "https://old.server.spacebar.chat/api/",
            "description": "Official Spacebar Instance"
        }
    ],
    "components": {
        "securitySchemes": {
            "bearer": {
                "type": "http",
                "scheme": "bearer",
                "description": "Bearer/Bot prefixes are not required.",
                "bearerFormat": "JWT",
                "in": "header"
            }
        },
        "schemas": {
            "ApplicationCommandOption": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ApplicationCommandOptionType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "choices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationCommandOptionChoice"
                        }
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationCommandOption"
                        }
                    }
                },
                "required": [
                    "description",
                    "name",
                    "type"
                ]
            },
            "ApplicationCommandOptionType": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8
                ]
            },
            "ApplicationCommandOptionChoice": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "value": {
                        "type": [
                            "string",
                            "integer"
                        ]
                    }
                },
                "required": [
                    "name",
                    "value"
                ]
            },
            "ApplicationCommandIndexPermissions": {
                "type": "object",
                "properties": {
                    "user": {
                        "type": "boolean"
                    },
                    "roles": {
                        "$ref": "#/components/schemas/Record<string,boolean>"
                    },
                    "channels": {
                        "$ref": "#/components/schemas/Record<string,boolean>"
                    }
                }
            },
            "ApplicationIntegrationType": {
                "type": "number",
                "enum": [
                    0,
                    1
                ]
            },
            "InteractionContextType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2
                ]
            },
            "ApplicationCommandSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "number"
                    },
                    "application_id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "guild_id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_localizations": {
                        "$ref": "#/components/schemas/Record<string,string>"
                    },
                    "name_localized": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "description_localizations": {
                        "$ref": "#/components/schemas/Record<string,string>"
                    },
                    "description_localized": {
                        "type": "string",
                        "nullable": true
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationCommandOption"
                        }
                    },
                    "default_member_permissions": {
                        "type": "string",
                        "nullable": true
                    },
                    "dm_permission": {
                        "type": "boolean"
                    },
                    "permissions": {
                        "$ref": "#/components/schemas/ApplicationCommandIndexPermissions"
                    },
                    "nsfw": {
                        "type": "boolean"
                    },
                    "integration_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationIntegrationType"
                        }
                    },
                    "global_popularity_rank": {
                        "type": "integer"
                    },
                    "contexts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InteractionContextType"
                        }
                    },
                    "version": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "handler": {
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "number"
                    }
                },
                "required": [
                    "application_id",
                    "default_member_permissions",
                    "description",
                    "name",
                    "version"
                ]
            },
            "ApplicationCommandType": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3,
                    4
                ]
            },
            "InteractionData": {
                "type": "object",
                "properties": {
                    "application_command": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadAttachmentRequestSchema"
                        }
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationCommandOption"
                        }
                    },
                    "type": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "required": [
                    "application_command",
                    "attachments",
                    "id",
                    "name",
                    "options",
                    "type",
                    "version"
                ]
            },
            "UploadAttachmentRequestSchema": {
                "type": "object",
                "properties": {
                    "files": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadAttachmentRequest"
                        }
                    }
                },
                "required": [
                    "files"
                ]
            },
            "UploadAttachmentRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "filename": {
                        "type": "string"
                    },
                    "file_size": {
                        "type": "integer"
                    },
                    "is_clip": {
                        "type": "boolean"
                    },
                    "original_content_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "file_size",
                    "filename"
                ]
            },
            "InteractionSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/ApplicationCommandType"
                    },
                    "application_id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "guild_id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "channel_id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "message_id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "message_flags": {
                        "type": "integer"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "data": {
                        "$ref": "#/components/schemas/InteractionData"
                    },
                    "files": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                        }
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "analytics_location": {
                        "type": "string"
                    },
                    "section_name": {
                        "type": "string"
                    },
                    "source": {
                        "type": "string"
                    }
                },
                "required": [
                    "application_id",
                    "channel_id",
                    "data",
                    "type"
                ]
            },
            "InteractionCallbackType": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12
                ]
            },
            "MessageCreateSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "integer"
                    },
                    "content": {
                        "type": "string"
                    },
                    "mobile_network_type": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "tts": {
                        "type": "boolean"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "embeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Embed"
                        }
                    },
                    "embed": {
                        "$ref": "#/components/schemas/Embed"
                    },
                    "allowed_mentions": {
                        "type": "object",
                        "properties": {
                            "parse": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "users": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "replied_user": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    },
                    "message_reference": {
                        "type": "object",
                        "properties": {
                            "message_id": {
                                "type": "string"
                            },
                            "channel_id": {
                                "type": "string"
                            },
                            "guild_id": {
                                "type": "string"
                            },
                            "fail_if_not_exists": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message_id"
                        ]
                    },
                    "payload_json": {
                        "type": "string"
                    },
                    "file": {
                        "type": "object",
                        "properties": {
                            "filename": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "filename"
                        ]
                    },
                    "attachments": {
                        "description": "TODO: we should create an interface for attachments\nTODO: OpenWAAO<-->attachment-style metadata conversion",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "filename": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "filename",
                                        "id"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "filename": {
                                            "type": "string"
                                        },
                                        "uploaded_filename": {
                                            "type": "string"
                                        },
                                        "original_content_type": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "filename",
                                        "uploaded_filename"
                                    ]
                                }
                            ]
                        }
                    },
                    "sticker_ids": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "components": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ActionRowComponent"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "poll": {
                        "$ref": "#/components/schemas/PollCreationSchema"
                    },
                    "enforce_nonce": {
                        "type": "boolean"
                    },
                    "applied_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thread_name": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string"
                    }
                }
            },
            "Embed": {
                "type": "object",
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "article",
                            "gifv",
                            "image",
                            "link",
                            "rich",
                            "video"
                        ],
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "color": {
                        "type": "integer"
                    },
                    "footer": {
                        "type": "object",
                        "properties": {
                            "text": {
                                "type": "string"
                            },
                            "icon_url": {
                                "type": "string"
                            },
                            "proxy_icon_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "text"
                        ]
                    },
                    "image": {
                        "$ref": "#/components/schemas/EmbedImage"
                    },
                    "thumbnail": {
                        "$ref": "#/components/schemas/EmbedImage"
                    },
                    "video": {
                        "$ref": "#/components/schemas/EmbedImage"
                    },
                    "provider": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "author": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "url": {
                                "type": "string"
                            },
                            "icon_url": {
                                "type": "string"
                            },
                            "proxy_icon_url": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "fields": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "type": "string"
                                },
                                "value": {
                                    "type": "string"
                                },
                                "inline": {
                                    "type": "boolean"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name",
                                "value"
                            ]
                        }
                    }
                }
            },
            "EmbedImage": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "proxy_url": {
                        "type": "string"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "width": {
                        "type": "integer"
                    }
                }
            },
            "ActionRowComponent": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/MessageComponentType.ActionRow"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "$ref": "#/components/schemas/ButtonComponent"
                                },
                                {
                                    "$ref": "#/components/schemas/SelectMenuComponent"
                                },
                                {
                                    "$ref": "#/components/schemas/StringSelectMenuComponent"
                                },
                                {
                                    "$ref": "#/components/schemas/TextInputComponent"
                                }
                            ]
                        }
                    }
                },
                "required": [
                    "components",
                    "type"
                ]
            },
            "MessageComponentType.ActionRow": {
                "type": "number",
                "const": 1
            },
            "ButtonComponent": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/MessageComponentType.Button"
                    },
                    "style": {
                        "$ref": "#/components/schemas/ButtonStyle"
                    },
                    "label": {
                        "type": "string"
                    },
                    "emoji": {
                        "$ref": "#/components/schemas/PartialEmoji"
                    },
                    "custom_id": {
                        "type": "string"
                    },
                    "sku_id": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "disabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "style",
                    "type"
                ]
            },
            "MessageComponentType.Button": {
                "type": "number",
                "const": 2
            },
            "ButtonStyle": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6
                ]
            },
            "PartialEmoji": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "animated": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "SelectMenuComponent": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            3,
                            5,
                            6,
                            7,
                            8
                        ],
                        "type": "number"
                    },
                    "custom_id": {
                        "type": "string"
                    },
                    "channel_types": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "placeholder": {
                        "type": "string"
                    },
                    "default_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectMenuDefaultOption"
                        }
                    },
                    "min_values": {
                        "type": "integer"
                    },
                    "max_values": {
                        "type": "integer"
                    },
                    "disabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "custom_id",
                    "type"
                ]
            },
            "SelectMenuDefaultOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            "channel",
                            "role",
                            "user"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "type"
                ]
            },
            "StringSelectMenuComponent": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/MessageComponentType.StringSelect"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectMenuOption"
                        }
                    },
                    "custom_id": {
                        "type": "string"
                    },
                    "channel_types": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "placeholder": {
                        "type": "string"
                    },
                    "default_values": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SelectMenuDefaultOption"
                        }
                    },
                    "min_values": {
                        "type": "integer"
                    },
                    "max_values": {
                        "type": "integer"
                    },
                    "disabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "custom_id",
                    "options",
                    "type"
                ]
            },
            "MessageComponentType.StringSelect": {
                "type": "number",
                "const": 3
            },
            "SelectMenuOption": {
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string"
                    },
                    "value": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "emoji": {
                        "$ref": "#/components/schemas/PartialEmoji"
                    },
                    "default": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "label",
                    "value"
                ]
            },
            "TextInputComponent": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/MessageComponentType.TextInput"
                    },
                    "custom_id": {
                        "type": "string"
                    },
                    "style": {
                        "$ref": "#/components/schemas/TextInputStyle"
                    },
                    "label": {
                        "type": "string"
                    },
                    "min_length": {
                        "type": "integer"
                    },
                    "max_length": {
                        "type": "integer"
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "value": {
                        "type": "string"
                    },
                    "placeholder": {
                        "type": "string"
                    }
                },
                "required": [
                    "custom_id",
                    "label",
                    "style",
                    "type"
                ]
            },
            "MessageComponentType.TextInput": {
                "type": "number",
                "const": 4
            },
            "TextInputStyle": {
                "type": "number",
                "enum": [
                    1,
                    2
                ]
            },
            "PollCreationSchema": {
                "type": "object",
                "properties": {
                    "question": {
                        "$ref": "#/components/schemas/PollMedia"
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PollAnswer"
                        }
                    },
                    "duration": {
                        "type": "integer"
                    },
                    "allow_multiselect": {
                        "type": "boolean"
                    },
                    "layout_type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "answers",
                    "question"
                ]
            },
            "PollMedia": {
                "type": "object",
                "properties": {
                    "text": {
                        "type": "string"
                    },
                    "emoji": {
                        "$ref": "#/components/schemas/PartialEmoji"
                    }
                }
            },
            "PollAnswer": {
                "type": "object",
                "properties": {
                    "answer_id": {
                        "type": "string"
                    },
                    "poll_media": {
                        "$ref": "#/components/schemas/PollMedia"
                    }
                },
                "required": [
                    "poll_media"
                ]
            },
            "InteractionCallbackSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/InteractionCallbackType"
                    },
                    "data": {
                        "$ref": "#/components/schemas/MessageCreateSchema"
                    }
                },
                "required": [
                    "data",
                    "type"
                ]
            },
            "ConnectedAccountCommonOAuthTokenResponse": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "token_type": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "integer"
                    }
                },
                "required": [
                    "access_token",
                    "scope",
                    "token_type"
                ]
            },
            "ClientResponse": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                    },
                    "headers": {}
                },
                "required": [
                    "body",
                    "headers",
                    "statusCode"
                ]
            },
            "HeaderBag": {
                "type": "object"
            },
            "HttpResponse": {
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "headers": {
                        "$ref": "#/components/schemas/HeaderBag"
                    },
                    "body": {}
                },
                "required": [
                    "headers",
                    "statusCode"
                ]
            },
            "StreamingBlobSchema": {
                "type": "integer",
                "const": 42
            },
            "StringSchema": {
                "description": "Includes string and enum Smithy types.",
                "type": "integer",
                "const": 0
            },
            "TimestampDefaultSchema": {
                "description": "Smithy type timestamp, in JS as native Date object.",
                "type": "integer",
                "const": 4
            },
            "TimestampDateTimeSchema": {
                "type": "integer",
                "const": 5
            },
            "TimestampHttpDateSchema": {
                "type": "integer",
                "const": 6
            },
            "TimestampEpochSecondsSchema": {
                "type": "integer",
                "const": 7
            },
            "SchemaTraits": {
                "description": "Traits attached to schema objects.\n\nWhen this is a number, it refers to a pre-allocated\ntrait combination that is equivalent to one of the\nobject type's variations.",
                "anyOf": [
                    {
                        "description": "See https://smithy.io/2.0/trait-index.html for individual definitions.",
                        "type": "object",
                        "additionalProperties": {},
                        "properties": {
                            "idempotent": {
                                "const": 1,
                                "type": "number"
                            },
                            "idempotencyToken": {
                                "const": 1,
                                "type": "number"
                            },
                            "sensitive": {
                                "const": 1,
                                "type": "number"
                            },
                            "sparse": {
                                "const": 1,
                                "type": "number"
                            },
                            "httpLabel": {
                                "const": 1,
                                "type": "number"
                            },
                            "httpHeader": {
                                "type": "string"
                            },
                            "httpQuery": {
                                "type": "string"
                            },
                            "httpPrefixHeaders": {
                                "type": "string"
                            },
                            "httpQueryParams": {
                                "const": 1,
                                "type": "number"
                            },
                            "httpPayload": {
                                "const": 1,
                                "type": "number"
                            },
                            "http": {
                                "description": "[method, path, statusCode]",
                                "type": "array",
                                "items": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "integer"
                                    }
                                ],
                                "minItems": 3,
                                "maxItems": 3
                            },
                            "httpResponseCode": {
                                "const": 1,
                                "type": "number"
                            },
                            "endpoint": {
                                "description": "[hostPrefix]",
                                "type": "array",
                                "items": [
                                    {
                                        "type": "string"
                                    }
                                ],
                                "minItems": 1,
                                "maxItems": 1
                            },
                            "xmlAttribute": {
                                "const": 1,
                                "type": "number"
                            },
                            "xmlName": {
                                "type": "string"
                            },
                            "xmlNamespace": {
                                "description": "[prefix, uri]",
                                "type": "array",
                                "items": [
                                    {
                                        "type": "string"
                                    },
                                    {
                                        "type": "string"
                                    }
                                ],
                                "minItems": 2,
                                "maxItems": 2
                            },
                            "xmlFlattened": {
                                "const": 1,
                                "type": "number"
                            },
                            "jsonName": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            },
                            "error": {
                                "enum": [
                                    "client",
                                    "server"
                                ],
                                "type": "string"
                            },
                            "streaming": {
                                "const": 1,
                                "type": "number"
                            },
                            "eventHeader": {
                                "const": 1,
                                "type": "number"
                            },
                            "eventPayload": {
                                "const": 1,
                                "type": "number"
                            }
                        }
                    },
                    {
                        "type": "integer"
                    }
                ]
            },
            "StaticSimpleSchema": {
                "type": "array",
                "items": [
                    {
                        "type": "integer",
                        "const": 0
                    },
                    {
                        "type": "string"
                    },
                    {
                        "type": "string"
                    },
                    {
                        "$ref": "#/components/schemas/SchemaTraits"
                    },
                    {
                        "$ref": "#/components/schemas/$SchemaRef"
                    }
                ],
                "minItems": 5,
                "maxItems": 5
            },
            "NormalizedSchema": {
                "description": "Normalization wrapper for various schema data objects.",
                "type": "object"
            },
            "StaticSchema": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/StaticSimpleSchema"
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": 1
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            }
                        ],
                        "minItems": 5,
                        "maxItems": 5
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": 2
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            }
                        ],
                        "minItems": 6,
                        "maxItems": 6
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": 3
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/$SchemaRef"
                                }
                            }
                        ],
                        "minItems": 6,
                        "maxItems": 6
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": -3
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/$SchemaRef"
                                }
                            }
                        ],
                        "minItems": 6,
                        "maxItems": 6
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": 9
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            }
                        ],
                        "minItems": 6,
                        "maxItems": 6
                    }
                ]
            },
            "StaticListSchema": {
                "$ref": "#/components/schemas/StaticListSchema"
            },
            "StaticMapSchema": {
                "$ref": "#/components/schemas/StaticMapSchema"
            },
            "StaticStructureSchema": {
                "$ref": "#/components/schemas/StaticStructureSchema"
            },
            "StaticErrorSchema": {
                "$ref": "#/components/schemas/StaticErrorSchema"
            },
            "StaticOperationSchema": {
                "$ref": "#/components/schemas/StaticOperationSchema"
            },
            "SimpleSchema": {
                "description": "Although numeric values exist for most simple schema, this class is used for cases where traits are\nattached to those schema, since a single number cannot easily represent both a schema and its traits.",
                "type": "integer"
            },
            "UnitSchema": {
                "description": "Signal value for the Smithy void value. Typically used for\noperation input and outputs.",
                "type": "string",
                "const": "unit"
            },
            "TraitsSchema": {
                "description": "A schema that has traits.",
                "type": "object",
                "properties": {
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "traits": {
                        "$ref": "#/components/schemas/SchemaTraits"
                    }
                },
                "required": [
                    "name",
                    "namespace",
                    "traits"
                ]
            },
            "SchemaRef": {
                "description": "A schema \"reference\" is either a schema or a function that\nprovides a schema. This is useful for lazy loading, and to allow\ncode generation to define schema out of dependency order.",
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/StaticSimpleSchema"
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": 1
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            }
                        ],
                        "minItems": 5,
                        "maxItems": 5
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": 2
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            }
                        ],
                        "minItems": 6,
                        "maxItems": 6
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": 3
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/$SchemaRef"
                                }
                            }
                        ],
                        "minItems": 6,
                        "maxItems": 6
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": -3
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/$SchemaRef"
                                }
                            }
                        ],
                        "minItems": 6,
                        "maxItems": 6
                    },
                    {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer",
                                "const": 9
                            },
                            {
                                "type": "string"
                            },
                            {
                                "type": "string"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            },
                            {
                                "$ref": "#/components/schemas/$SchemaRef"
                            }
                        ],
                        "minItems": 6,
                        "maxItems": 6
                    },
                    {
                        "$ref": "#/components/schemas/NormalizedSchema"
                    },
                    {
                        "$ref": "#/components/schemas/TraitsSchema"
                    },
                    {
                        "$ref": "#/components/schemas/ListSchema"
                    },
                    {
                        "$ref": "#/components/schemas/MapSchema"
                    },
                    {
                        "$ref": "#/components/schemas/StructureSchema"
                    },
                    {
                        "description": "Indicates the schema is a member of a parent Structure schema.\nIt may also have a set of member traits distinct from its target shape's traits.",
                        "type": "array",
                        "items": [
                            {
                                "$ref": "#/components/schemas/SchemaRef"
                            },
                            {
                                "$ref": "#/components/schemas/SchemaTraits"
                            }
                        ],
                        "minItems": 2,
                        "maxItems": 2
                    },
                    {
                        "$ref": "#/components/schemas/OperationSchema"
                    },
                    {
                        "type": "object",
                        "additionalProperties": false
                    },
                    {
                        "const": "unit",
                        "type": "string"
                    },
                    {
                        "type": "integer"
                    }
                ]
            },
            "ListSchema": {
                "description": "Schema for the list aggregate type.",
                "type": "object",
                "properties": {
                    "valueSchema": {
                        "$ref": "#/components/schemas/SchemaRef"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "traits": {
                        "$ref": "#/components/schemas/SchemaTraits"
                    }
                },
                "required": [
                    "name",
                    "namespace",
                    "traits",
                    "valueSchema"
                ]
            },
            "MapSchema": {
                "description": "Schema for the map aggregate type.",
                "type": "object",
                "properties": {
                    "keySchema": {
                        "$ref": "#/components/schemas/SchemaRef"
                    },
                    "valueSchema": {
                        "$ref": "#/components/schemas/SchemaRef"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "traits": {
                        "$ref": "#/components/schemas/SchemaTraits"
                    }
                },
                "required": [
                    "keySchema",
                    "name",
                    "namespace",
                    "traits",
                    "valueSchema"
                ]
            },
            "StructureSchema": {
                "description": "Schema for the structure aggregate type.",
                "type": "object",
                "properties": {
                    "memberNames": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "memberList": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SchemaRef"
                        }
                    },
                    "members": {
                        "$ref": "#/components/schemas/Record<string,[SchemaRef,SchemaTraits]>"
                    },
                    "namespace": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "traits": {
                        "$ref": "#/components/schemas/SchemaTraits"
                    }
                },
                "required": [
                    "memberList",
                    "memberNames",
                    "name",
                    "namespace",
                    "traits"
                ]
            },
            "MemberSchema": {
                "$ref": "#/components/schemas/MemberSchema",
                "description": "Indicates the schema is a member of a parent Structure schema.\nIt may also have a set of member traits distinct from its target shape's traits."
            },
            "OperationSchema": {
                "$ref": "#/components/schemas/OperationSchema",
                "description": "Schema for an operation."
            },
            "ResolvedHttpResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "string"
                    },
                    "statusCode": {
                        "type": "integer"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "headers": {
                        "$ref": "#/components/schemas/HeaderBag"
                    }
                },
                "required": [
                    "body",
                    "headers",
                    "statusCode"
                ]
            },
            "MetricDataResult": {
                "description": "<p>The result of a single metric data query.</p>",
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "<p>The query identifier.</p>",
                        "type": "string"
                    },
                    "Timestamps": {
                        "description": "<p>A list of timestamps for the metric data results.</p>",
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    "Values": {
                        "description": "<p>A list of values (cumulative / sum) for the metric data results.</p>",
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "MetricDataError": {
                "description": "<p>An error corresponding to the unsuccessful processing of a single metric data query.</p>",
                "type": "object",
                "properties": {
                    "Id": {
                        "description": "<p>The query identifier.</p>",
                        "type": "string"
                    },
                    "Code": {
                        "description": "<p>The query error code. Can be one of:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>INTERNAL_FAILURE</code> – Amazon SES has failed to process one of the queries.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ACCESS_DENIED</code> – You have insufficient access to retrieve metrics\n                    based on the given query.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "ACCESS_DENIED",
                            "INTERNAL_FAILURE"
                        ],
                        "type": "string"
                    },
                    "Message": {
                        "description": "<p>The error message associated with the current query error.</p>",
                        "type": "string"
                    }
                }
            },
            "BatchGetMetricDataResponse": {
                "description": "<p>Represents the result of processing your metric data batch request</p>",
                "type": "object",
                "properties": {
                    "Results": {
                        "description": "<p>A list of successfully retrieved <code>MetricDataResult</code>.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricDataResult"
                        }
                    },
                    "Errors": {
                        "description": "<p>A list of <code>MetricDataError</code> encountered while processing your metric data batch request.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MetricDataError"
                        }
                    }
                }
            },
            "CancelExportJobResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object"
            },
            "CreateConfigurationSetResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object"
            },
            "CreateConfigurationSetEventDestinationResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object"
            },
            "CreateContactResponse": {
                "type": "object"
            },
            "CreateContactListResponse": {
                "type": "object"
            },
            "CreateCustomVerificationEmailTemplateResponse": {
                "description": "<p>If the action is successful, the service sends back an HTTP 200 response with an empty\n            HTTP body.</p>",
                "type": "object"
            },
            "CreateDedicatedIpPoolResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object"
            },
            "CreateDeliverabilityTestReportResponse": {
                "description": "<p>Information about the predictive inbox placement test that you created.</p>",
                "type": "object",
                "properties": {
                    "ReportId": {
                        "description": "<p>A unique string that identifies the predictive inbox placement test.</p>",
                        "type": "string"
                    },
                    "DeliverabilityTestStatus": {
                        "description": "<p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test\n            is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the\n            test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use\n            the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>",
                        "enum": [
                            "COMPLETED",
                            "IN_PROGRESS"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "DeliverabilityTestStatus",
                    "ReportId"
                ]
            },
            "DkimAttributes": {
                "description": "<p>An object that contains information about the DKIM authentication status for an email\n            identity.</p>\n         <p>Amazon SES determines the authentication status by searching for specific records in the\n            DNS configuration for the domain. If you used <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\">Easy DKIM</a> to set up DKIM\n            authentication, Amazon SES tries to find three unique CNAME records in the DNS configuration\n            for your domain. If you provided a public key to perform DKIM authentication, Amazon SES\n            tries to find a TXT record that uses the selector that you specified. The value of the\n            TXT record must be a public key that's paired with the private key that you specified in\n            the process of creating the identity</p>",
                "type": "object",
                "properties": {
                    "SigningEnabled": {
                        "description": "<p>If the value is <code>true</code>, then the messages that you send from the identity\n            are signed using DKIM. If the value is <code>false</code>, then the messages that you\n            send from the identity aren't DKIM-signed.</p>",
                        "type": "boolean"
                    },
                    "Status": {
                        "description": "<p>Describes whether or not Amazon SES has successfully located the DKIM records in the DNS\n            records for the domain. The status can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PENDING</code> – The verification process was initiated, but Amazon SES\n                    hasn't yet detected the DKIM records in the DNS configuration for the\n                    domain.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCESS</code> – The verification process completed\n                    successfully.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAILED</code> – The verification process failed. This typically\n                    occurs when Amazon SES fails to find the DKIM records in the DNS configuration of the\n                    domain.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES\n                    from determining the DKIM authentication status of the domain.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NOT_STARTED</code> – The DKIM verification process hasn't been\n                    initiated for the domain.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "FAILED",
                            "NOT_STARTED",
                            "PENDING",
                            "SUCCESS",
                            "TEMPORARY_FAILURE"
                        ],
                        "type": "string"
                    },
                    "Tokens": {
                        "description": "<p>If you used <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\">Easy DKIM</a> to configure DKIM authentication for the domain, then this object\n            contains a set of unique strings that you use to create a set of CNAME records that you\n            add to the DNS configuration for your domain. When Amazon SES detects these records in the\n            DNS configuration for your domain, the DKIM authentication process is complete.</p>\n         <p>If you configured DKIM authentication for the domain by providing your own\n            public-private key pair, then this object contains the selector for the public\n            key.</p>\n         <p>Regardless of the DKIM authentication method you use, Amazon SES searches for the\n            appropriate records in the DNS configuration of the domain for up to 72 hours.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "SigningAttributesOrigin": {
                        "description": "<p>A string that indicates how DKIM was configured for the identity. These are the\n            possible values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>AWS_SES</code> – Indicates that DKIM was configured for the\n                    identity by using <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/easy-dkim.html\">Easy DKIM</a>.</p>\n            </li>\n            <li>\n               <p>\n                  <code>EXTERNAL</code> – Indicates that DKIM was configured for the\n                    identity by using Bring Your Own DKIM (BYODKIM).</p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AF_SOUTH_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Africa (Cape Town) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_EU_NORTH_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Europe (Stockholm) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AP_SOUTH_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Asia Pacific (Mumbai) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AP_SOUTH_2</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Asia Pacific (Hyderabad) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_EU_WEST_3</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Europe (Paris) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_EU_WEST_2</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Europe (London) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_EU_SOUTH_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Europe (Milan) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_EU_WEST_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Europe (Ireland) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AP_NORTHEAST_3</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Asia Pacific (Osaka) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AP_NORTHEAST_2</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Asia Pacific (Seoul) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_ME_CENTRAL_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Middle East (UAE) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_ME_SOUTH_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Middle East (Bahrain) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AP_NORTHEAST_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Asia Pacific (Tokyo) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_IL_CENTRAL_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Israel (Tel Aviv) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_SA_EAST_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in South America (São Paulo) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_CA_CENTRAL_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Canada (Central) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AP_SOUTHEAST_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Asia Pacific (Singapore) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AP_SOUTHEAST_2</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Asia Pacific (Sydney) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_AP_SOUTHEAST_3</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Asia Pacific (Jakarta) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_EU_CENTRAL_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Europe (Frankfurt) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_EU_CENTRAL_2</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in Europe (Zurich) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_US_EAST_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in US East (N. Virginia) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_US_EAST_2</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in US East (Ohio) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_US_WEST_1</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in US West (N. California) region using Deterministic Easy-DKIM\n                    (DEED).\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>AWS_SES_US_WEST_2</code> – Indicates that DKIM was configured for the identity by\n                    replicating signing attributes from a parent identity in US West (Oregon) region using Deterministic Easy-DKIM (DEED).\n                </p>\n            </li>\n         </ul>",
                        "enum": [
                            "AWS_SES",
                            "AWS_SES_AF_SOUTH_1",
                            "AWS_SES_AP_NORTHEAST_1",
                            "AWS_SES_AP_NORTHEAST_2",
                            "AWS_SES_AP_NORTHEAST_3",
                            "AWS_SES_AP_SOUTHEAST_1",
                            "AWS_SES_AP_SOUTHEAST_2",
                            "AWS_SES_AP_SOUTHEAST_3",
                            "AWS_SES_AP_SOUTH_1",
                            "AWS_SES_AP_SOUTH_2",
                            "AWS_SES_CA_CENTRAL_1",
                            "AWS_SES_EU_CENTRAL_1",
                            "AWS_SES_EU_CENTRAL_2",
                            "AWS_SES_EU_NORTH_1",
                            "AWS_SES_EU_SOUTH_1",
                            "AWS_SES_EU_WEST_1",
                            "AWS_SES_EU_WEST_2",
                            "AWS_SES_EU_WEST_3",
                            "AWS_SES_IL_CENTRAL_1",
                            "AWS_SES_ME_CENTRAL_1",
                            "AWS_SES_ME_SOUTH_1",
                            "AWS_SES_SA_EAST_1",
                            "AWS_SES_US_EAST_1",
                            "AWS_SES_US_EAST_2",
                            "AWS_SES_US_WEST_1",
                            "AWS_SES_US_WEST_2",
                            "EXTERNAL"
                        ],
                        "type": "string"
                    },
                    "NextSigningKeyLength": {
                        "description": "<p>[Easy DKIM] The key length of the future DKIM key pair to be generated. This can be\n            changed at most once per day.</p>",
                        "enum": [
                            "RSA_1024_BIT",
                            "RSA_2048_BIT"
                        ],
                        "type": "string"
                    },
                    "CurrentSigningKeyLength": {
                        "description": "<p>[Easy DKIM] The key length of the DKIM key pair in use.</p>",
                        "enum": [
                            "RSA_1024_BIT",
                            "RSA_2048_BIT"
                        ],
                        "type": "string"
                    },
                    "LastKeyGenerationTimestamp": {
                        "description": "<p>[Easy DKIM] The last time a key pair was generated for this identity.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "CreateEmailIdentityResponse": {
                "description": "<p>If the email identity is a domain, this object contains information about the DKIM\n            verification status for the domain.</p>\n         <p>If the email identity is an email address, this object is empty. </p>",
                "type": "object",
                "properties": {
                    "IdentityType": {
                        "description": "<p>The email identity type. Note: the <code>MANAGED_DOMAIN</code> identity type is not\n            supported.</p>",
                        "enum": [
                            "DOMAIN",
                            "EMAIL_ADDRESS",
                            "MANAGED_DOMAIN"
                        ],
                        "type": "string"
                    },
                    "VerifiedForSendingStatus": {
                        "description": "<p>Specifies whether or not the identity is verified. You can only send email from\n            verified email addresses or domains. For more information about verifying identities,\n            see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html\">Amazon Pinpoint User Guide</a>.</p>",
                        "type": "boolean"
                    },
                    "DkimAttributes": {
                        "description": "<p>An object that contains information about the DKIM attributes for the identity.</p>",
                        "$ref": "#/components/schemas/DkimAttributes"
                    }
                }
            },
            "CreateEmailIdentityPolicyResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object"
            },
            "CreateEmailTemplateResponse": {
                "description": "<p>If the action is successful, the service sends back an HTTP 200 response with an empty\n            HTTP body.</p>",
                "type": "object"
            },
            "CreateExportJobResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object",
                "properties": {
                    "JobId": {
                        "description": "<p>A string that represents the export job ID.</p>",
                        "type": "string"
                    }
                }
            },
            "CreateImportJobResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object",
                "properties": {
                    "JobId": {
                        "description": "<p>A string that represents the import job ID.</p>",
                        "type": "string"
                    }
                }
            },
            "CreateMultiRegionEndpointResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object",
                "properties": {
                    "Status": {
                        "description": "<p>A status of the multi-region endpoint (global-endpoint) right after the create request.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CREATING</code> – The resource is being provisioned.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READY</code> – The resource is ready to use.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAILED</code> – The resource failed to be provisioned.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DELETING</code> – The resource is being deleted as requested.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "CREATING",
                            "DELETING",
                            "FAILED",
                            "READY"
                        ],
                        "type": "string"
                    },
                    "EndpointId": {
                        "description": "<p>The ID of the multi-region endpoint (global-endpoint).</p>",
                        "type": "string"
                    }
                }
            },
            "Tag": {
                "description": "<p>An object that defines the tags that are associated with a resource.\n                A <i>tag</i> is a label that you optionally define and associate with\n            a resource. Tags can help you categorize and manage resources in different ways, such as\n            by purpose, owner, environment, or other criteria. A resource can have as many as 50\n            tags.</p>\n         <p>Each tag consists of a required <i>tag key</i> and an\n                associated <i>tag value</i>, both of which you define. A tag key is a\n            general label that acts as a category for a more specific tag value. A tag value acts as\n            a descriptor within a tag key. A tag key can contain as many as 128 characters. A tag\n            value can contain as many as 256 characters. The characters can be Unicode letters,\n            digits, white space, or one of the following symbols: _ . : / = + -. The following\n            additional restrictions apply to tags:</p>\n         <ul>\n            <li>\n               <p>Tag keys and values are case sensitive.</p>\n            </li>\n            <li>\n               <p>For each associated resource, each tag key must be unique and it can have only\n                    one value.</p>\n            </li>\n            <li>\n               <p>The <code>aws:</code> prefix is reserved for use by Amazon Web Services; you can’t use it in\n                    any tag keys or values that you define. In addition, you can't edit or remove\n                    tag keys or values that use this prefix. Tags that use this prefix don’t count\n                    against the limit of 50 tags per resource.</p>\n            </li>\n            <li>\n               <p>You can associate tags with public or shared resources, but the tags are\n                    available only for your Amazon Web Services account, not any other accounts that share the\n                    resource. In addition, the tags are available only for resources that are\n                    located in the specified Amazon Web Services Region for your Amazon Web Services account.</p>\n            </li>\n         </ul>",
                "type": "object",
                "properties": {
                    "Key": {
                        "description": "<p>One part of a key-value pair that defines a tag. The maximum length of a tag key is\n            128 characters. The minimum length is 1 character.</p>",
                        "type": "string"
                    },
                    "Value": {
                        "description": "<p>The optional part of a key-value pair that defines a tag. The maximum length of a tag\n            value is 256 characters. The minimum length is 0 characters. If you don't want a\n            resource to have a specific tag value, don't specify a value for this parameter. If you\n            don't specify a value, Amazon SES sets the value to an empty string.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "Key",
                    "Value"
                ]
            },
            "CreateTenantResponse": {
                "description": "<p>Information about a newly created tenant.</p>",
                "type": "object",
                "properties": {
                    "TenantName": {
                        "description": "<p>The name of the tenant.</p>",
                        "type": "string"
                    },
                    "TenantId": {
                        "description": "<p>A unique identifier for the tenant.</p>",
                        "type": "string"
                    },
                    "TenantArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the tenant.</p>",
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The date and time when the tenant was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "Tags": {
                        "description": "<p>An array of objects that define the tags (keys and values) associated with the tenant.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    },
                    "SendingStatus": {
                        "description": "<p>The status of email sending capability for the tenant.</p>",
                        "enum": [
                            "DISABLED",
                            "ENABLED",
                            "REINSTATED"
                        ],
                        "type": "string"
                    }
                }
            },
            "CreateTenantResourceAssociationResponse": {
                "description": "<p>If the action is successful, the service sends back an HTTP 200 response with an empty\n            HTTP body.</p>",
                "type": "object"
            },
            "SendQuota": {
                "description": "<p>An object that contains information about the per-day and per-second sending limits\n            for your Amazon SES account in the current Amazon Web Services Region.</p>",
                "type": "object",
                "properties": {
                    "Max24HourSend": {
                        "description": "<p>The maximum number of emails that you can send in the current Amazon Web Services Region over a\n            24-hour period. A value of -1 signifies an unlimited quota. (This value is also referred\n            to as your <i>sending quota</i>.)</p>",
                        "type": "integer"
                    },
                    "MaxSendRate": {
                        "description": "<p>The maximum number of emails that you can send per second in the current Amazon Web Services Region.\n            This value is also called your <i>maximum sending rate</i> or your\n                <i>maximum TPS (transactions per second) rate</i>.</p>",
                        "type": "integer"
                    },
                    "SentLast24Hours": {
                        "description": "<p>The number of emails sent from your Amazon SES account in the current Amazon Web Services Region over the\n            past 24 hours.</p>",
                        "type": "integer"
                    }
                }
            },
            "SuppressionAttributes": {
                "description": "<p>An object that contains information about the email address suppression preferences\n            for your account in the current Amazon Web Services Region.</p>",
                "type": "object",
                "properties": {
                    "SuppressedReasons": {
                        "description": "<p>A list that contains the reasons that email addresses will be automatically added to\n            the suppression list for your account. This list can contain any or all of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression\n                    list for your account when a message sent to that address results in a\n                    complaint.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BOUNCE</code> – Amazon SES adds an email address to the suppression\n                    list for your account when a message sent to that address results in a hard\n                    bounce.</p>\n            </li>\n         </ul>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SuppressionListReason"
                        }
                    }
                }
            },
            "SuppressionListReason": {
                "enum": [
                    "BOUNCE",
                    "COMPLAINT"
                ],
                "type": "string"
            },
            "AccountDetails": {
                "description": "<p>An object that contains information about your account details.</p>",
                "type": "object",
                "properties": {
                    "MailType": {
                        "description": "<p>The type of email your account is sending. The mail type can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>MARKETING</code> – Most of your sending traffic is to keep your\n                    customers informed of your latest offering.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TRANSACTIONAL</code> – Most of your sending traffic is to\n                    communicate during a transaction with a customer.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "MARKETING",
                            "TRANSACTIONAL"
                        ],
                        "type": "string"
                    },
                    "WebsiteURL": {
                        "description": "<p>The URL of your website. This information helps us better understand the type of\n            content that you plan to send.</p>",
                        "type": "string"
                    },
                    "ContactLanguage": {
                        "description": "<p>The language you would prefer for the case. The contact language can be one of\n                <code>ENGLISH</code> or <code>JAPANESE</code>.</p>",
                        "enum": [
                            "EN",
                            "JA"
                        ],
                        "type": "string"
                    },
                    "UseCaseDescription": {
                        "description": "<p>A description of the types of email that you plan to send.</p>",
                        "type": "string"
                    },
                    "AdditionalContactEmailAddresses": {
                        "description": "<p>Additional email addresses where updates are sent about your account review\n            process.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "ReviewDetails": {
                        "description": "<p>Information about the review of the latest details you submitted.</p>",
                        "$ref": "#/components/schemas/ReviewDetails"
                    }
                }
            },
            "ReviewDetails": {
                "description": "<p>An object that contains information about your account details review.</p>",
                "type": "object",
                "properties": {
                    "Status": {
                        "description": "<p>The status of the latest review of your account. The status can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PENDING</code> – We have received your appeal and are in the\n                    process of reviewing it.</p>\n            </li>\n            <li>\n               <p>\n                  <code>GRANTED</code> – Your appeal has been reviewed and your production\n                    access has been granted.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DENIED</code> – Your appeal has been reviewed and your production\n                    access has been denied.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAILED</code> – An internal error occurred and we didn't receive\n                    your appeal. You can submit your appeal again.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DENIED",
                            "FAILED",
                            "GRANTED",
                            "PENDING"
                        ],
                        "type": "string"
                    },
                    "CaseId": {
                        "description": "<p>The associated support center case ID (if any).</p>",
                        "type": "string"
                    }
                }
            },
            "VdmAttributes": {
                "description": "<p>The VDM attributes that apply to your Amazon SES account.</p>",
                "type": "object",
                "properties": {
                    "VdmEnabled": {
                        "description": "<p>Specifies the status of your VDM configuration. Can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code> – Amazon SES enables VDM for your account.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> – Amazon SES disables VDM for your account.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DISABLED",
                            "ENABLED"
                        ],
                        "type": "string"
                    },
                    "DashboardAttributes": {
                        "description": "<p>Specifies additional settings for your VDM configuration as applicable to the\n            Dashboard.</p>",
                        "$ref": "#/components/schemas/DashboardAttributes"
                    },
                    "GuardianAttributes": {
                        "description": "<p>Specifies additional settings for your VDM configuration as applicable to the\n            Guardian.</p>",
                        "$ref": "#/components/schemas/GuardianAttributes"
                    }
                },
                "required": [
                    "VdmEnabled"
                ]
            },
            "DashboardAttributes": {
                "description": "<p>An object containing additional settings for your VDM configuration as applicable to\n            the Dashboard.</p>",
                "type": "object",
                "properties": {
                    "EngagementMetrics": {
                        "description": "<p>Specifies the status of your VDM engagement metrics collection. Can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code> – Amazon SES enables engagement metrics for your\n                    account.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> – Amazon SES disables engagement metrics for your\n                    account.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DISABLED",
                            "ENABLED"
                        ],
                        "type": "string"
                    }
                }
            },
            "GuardianAttributes": {
                "description": "<p>An object containing additional settings for your VDM configuration as applicable to\n            the Guardian.</p>",
                "type": "object",
                "properties": {
                    "OptimizedSharedDelivery": {
                        "description": "<p>Specifies the status of your VDM optimized shared delivery. Can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code> – Amazon SES enables optimized shared delivery for your\n                    account.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> – Amazon SES disables optimized shared delivery for\n                    your account.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DISABLED",
                            "ENABLED"
                        ],
                        "type": "string"
                    }
                }
            },
            "GetAccountResponse": {
                "description": "<p>A list of details about the email-sending capabilities of your Amazon SES account in the\n            current Amazon Web Services Region.</p>",
                "type": "object",
                "properties": {
                    "DedicatedIpAutoWarmupEnabled": {
                        "description": "<p>Indicates whether or not the automatic warm-up feature is enabled for dedicated IP\n            addresses that are associated with your account.</p>",
                        "type": "boolean"
                    },
                    "EnforcementStatus": {
                        "description": "<p>The reputation status of your Amazon SES account. The status can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>HEALTHY</code> – There are no reputation-related issues that\n                    currently impact your account.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PROBATION</code> – We've identified potential issues with your\n                    Amazon SES account. We're placing your account under review while you work on\n                    correcting these issues.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SHUTDOWN</code> – Your account's ability to send email is\n                    currently paused because of an issue with the email sent from your account. When\n                    you correct the issue, you can contact us and request that your account's\n                    ability to send email is resumed.</p>\n            </li>\n         </ul>",
                        "type": "string"
                    },
                    "ProductionAccessEnabled": {
                        "description": "<p>Indicates whether or not your account has production access in the current Amazon Web Services\n            Region.</p>\n         <p>If the value is <code>false</code>, then your account is in the\n                <i>sandbox</i>. When your account is in the sandbox, you can only send\n            email to verified identities.\n            </p>\n         <p>If the value is <code>true</code>, then your account has production access. When your\n            account has production access, you can send email to any address. The sending quota and\n            maximum sending rate for your account vary based on your specific use case.</p>",
                        "type": "boolean"
                    },
                    "SendQuota": {
                        "description": "<p>An object that contains information about the per-day and per-second sending limits\n            for your Amazon SES account in the current Amazon Web Services Region.</p>",
                        "$ref": "#/components/schemas/SendQuota"
                    },
                    "SendingEnabled": {
                        "description": "<p>Indicates whether or not email sending is enabled for your Amazon SES account in the\n            current Amazon Web Services Region.</p>",
                        "type": "boolean"
                    },
                    "SuppressionAttributes": {
                        "description": "<p>An object that contains information about the email address suppression preferences\n            for your account in the current Amazon Web Services Region.</p>",
                        "$ref": "#/components/schemas/SuppressionAttributes"
                    },
                    "Details": {
                        "description": "<p>An object that defines your account details.</p>",
                        "$ref": "#/components/schemas/AccountDetails"
                    },
                    "VdmAttributes": {
                        "description": "<p>The VDM attributes that apply to your Amazon SES account.</p>",
                        "$ref": "#/components/schemas/VdmAttributes"
                    }
                }
            },
            "GetBlacklistReportsResponse": {
                "description": "<p>An object that contains information about blacklist events.</p>",
                "type": "object",
                "properties": {
                    "BlacklistReport": {
                        "description": "<p>An object that contains information about a blacklist that one of your dedicated IP\n            addresses appears on.</p>",
                        "$ref": "#/components/schemas/Record<string,BlacklistEntry[]>"
                    }
                },
                "required": [
                    "BlacklistReport"
                ]
            },
            "TrackingOptions": {
                "description": "<p>An object that defines the tracking options for a configuration set. When you use the\n            Amazon SES API v2 to send an email, it contains an invisible image that's used to track when\n            recipients open your email. If your email contains links, those links are changed\n            slightly in order to track when recipients click them.</p>\n         <p>These images and links include references to a domain operated by Amazon Web Services. You can\n            optionally configure the Amazon SES to use a domain that you operate for these images and\n            links.</p>",
                "type": "object",
                "properties": {
                    "CustomRedirectDomain": {
                        "description": "<p>The domain to use for tracking open and click events.</p>",
                        "type": "string"
                    },
                    "HttpsPolicy": {
                        "description": "<p>The https policy to use for tracking open and click events.</p>",
                        "enum": [
                            "OPTIONAL",
                            "REQUIRE",
                            "REQUIRE_OPEN_ONLY"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "CustomRedirectDomain"
                ]
            },
            "DeliveryOptions": {
                "description": "<p>Used to associate a configuration set with a dedicated IP pool.</p>",
                "type": "object",
                "properties": {
                    "TlsPolicy": {
                        "description": "<p>Specifies whether messages that use the configuration set are required to use\n            Transport Layer Security (TLS). If the value is <code>Require</code>, messages are only\n            delivered if a TLS connection can be established. If the value is <code>Optional</code>,\n            messages can be delivered in plain text if a TLS connection can't be established.</p>",
                        "enum": [
                            "OPTIONAL",
                            "REQUIRE"
                        ],
                        "type": "string"
                    },
                    "SendingPoolName": {
                        "description": "<p>The name of the dedicated IP pool to associate with the configuration set.</p>",
                        "type": "string"
                    },
                    "MaxDeliverySeconds": {
                        "description": "<p>The maximum amount of time, in seconds, that Amazon SES API v2 will attempt delivery of email.\n            If specified, the value must greater than or equal to 300 seconds (5 minutes)\n            and less than or equal to 50400 seconds (840 minutes).\n        </p>",
                        "type": "integer"
                    }
                }
            },
            "ReputationOptions": {
                "description": "<p>Enable or disable collection of reputation metrics for emails that you send using this\n            configuration set in the current Amazon Web Services Region. </p>",
                "type": "object",
                "properties": {
                    "ReputationMetricsEnabled": {
                        "description": "<p>If <code>true</code>, tracking of reputation metrics is enabled for the configuration\n            set. If <code>false</code>, tracking of reputation metrics is disabled for the\n            configuration set.</p>",
                        "type": "boolean"
                    },
                    "LastFreshStart": {
                        "description": "<p>The date and time (in Unix time) when the reputation metrics were last given a fresh\n            start. When your account is given a fresh start, your reputation metrics are calculated\n            starting from the date of the fresh start.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "SendingOptions": {
                "description": "<p>Used to enable or disable email sending for messages that use this configuration set\n            in the current Amazon Web Services Region.</p>",
                "type": "object",
                "properties": {
                    "SendingEnabled": {
                        "description": "<p>If <code>true</code>, email sending is enabled for the configuration set. If\n                <code>false</code>, email sending is disabled for the configuration set.</p>",
                        "type": "boolean"
                    }
                }
            },
            "SuppressionOptions": {
                "description": "<p>An object that contains information about the suppression list preferences for your\n            account.</p>",
                "type": "object",
                "properties": {
                    "SuppressedReasons": {
                        "description": "<p>A list that contains the reasons that email addresses are automatically added to the\n            suppression list for your account. This list can contain any or all of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>COMPLAINT</code> – Amazon SES adds an email address to the suppression\n                    list for your account when a message sent to that address results in a\n                    complaint.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BOUNCE</code> – Amazon SES adds an email address to the suppression\n                    list for your account when a message sent to that address results in a hard\n                    bounce.</p>\n            </li>\n         </ul>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SuppressionListReason"
                        }
                    }
                }
            },
            "VdmOptions": {
                "description": "<p>An object that defines the VDM settings that apply to emails that you send using the\n            configuration set.</p>",
                "type": "object",
                "properties": {
                    "DashboardOptions": {
                        "description": "<p>Specifies additional settings for your VDM configuration as applicable to the\n            Dashboard.</p>",
                        "$ref": "#/components/schemas/DashboardOptions"
                    },
                    "GuardianOptions": {
                        "description": "<p>Specifies additional settings for your VDM configuration as applicable to the\n            Guardian.</p>",
                        "$ref": "#/components/schemas/GuardianOptions"
                    }
                }
            },
            "DashboardOptions": {
                "description": "<p>An object containing additional settings for your VDM configuration as applicable to\n            the Dashboard.</p>",
                "type": "object",
                "properties": {
                    "EngagementMetrics": {
                        "description": "<p>Specifies the status of your VDM engagement metrics collection. Can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code> – Amazon SES enables engagement metrics for the\n                    configuration set.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> – Amazon SES disables engagement metrics for the\n                    configuration set.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DISABLED",
                            "ENABLED"
                        ],
                        "type": "string"
                    }
                }
            },
            "GuardianOptions": {
                "description": "<p>An object containing additional settings for your VDM configuration as applicable to\n            the Guardian.</p>",
                "type": "object",
                "properties": {
                    "OptimizedSharedDelivery": {
                        "description": "<p>Specifies the status of your VDM optimized shared delivery. Can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code> – Amazon SES enables optimized shared delivery for the\n                    configuration set.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> – Amazon SES disables optimized shared delivery for the\n                    configuration set.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DISABLED",
                            "ENABLED"
                        ],
                        "type": "string"
                    }
                }
            },
            "ArchivingOptions": {
                "description": "<p>Used to associate a configuration set with a MailManager archive.</p>",
                "type": "object",
                "properties": {
                    "ArchiveArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the MailManager archive where the Amazon SES API v2 will archive sent\n        emails.</p>",
                        "type": "string"
                    }
                }
            },
            "GetConfigurationSetResponse": {
                "description": "<p>Information about a configuration set.</p>",
                "type": "object",
                "properties": {
                    "ConfigurationSetName": {
                        "description": "<p>The name of the configuration set.</p>",
                        "type": "string"
                    },
                    "TrackingOptions": {
                        "description": "<p>An object that defines the open and click tracking options for emails that you send\n            using the configuration set.</p>",
                        "$ref": "#/components/schemas/TrackingOptions"
                    },
                    "DeliveryOptions": {
                        "description": "<p>An object that defines the dedicated IP pool that is used to send emails that you send\n            using the configuration set.</p>",
                        "$ref": "#/components/schemas/DeliveryOptions"
                    },
                    "ReputationOptions": {
                        "description": "<p>An object that defines whether or not Amazon SES collects reputation metrics for the emails\n            that you send that use the configuration set.</p>",
                        "$ref": "#/components/schemas/ReputationOptions"
                    },
                    "SendingOptions": {
                        "description": "<p>An object that defines whether or not Amazon SES can send email that you send using the\n            configuration set.</p>",
                        "$ref": "#/components/schemas/SendingOptions"
                    },
                    "Tags": {
                        "description": "<p>An array of objects that define the tags (keys and values) that are associated with\n            the configuration set.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    },
                    "SuppressionOptions": {
                        "description": "<p>An object that contains information about the suppression list preferences for your\n            account.</p>",
                        "$ref": "#/components/schemas/SuppressionOptions"
                    },
                    "VdmOptions": {
                        "description": "<p>An object that contains information about the VDM preferences for your configuration\n            set.</p>",
                        "$ref": "#/components/schemas/VdmOptions"
                    },
                    "ArchivingOptions": {
                        "description": "<p>An object that defines the MailManager archive where sent emails are archived that you send\n            using the configuration set.</p>",
                        "$ref": "#/components/schemas/ArchivingOptions"
                    }
                }
            },
            "EventDestination": {
                "description": "<p>In the Amazon SES API v2, <i>events</i> include message sends, deliveries, opens,\n            clicks, bounces, complaints and delivery delays. <i>Event destinations</i>\n            are places that you can send information about these events to. For example, you can\n            send event data to Amazon SNS to receive notifications when you receive bounces or\n            complaints, or you can use Amazon Kinesis Data Firehose to stream data to Amazon S3 for long-term storage.</p>",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "<p>A name that identifies the event destination.</p>",
                        "type": "string"
                    },
                    "Enabled": {
                        "description": "<p>If <code>true</code>, the event destination is enabled. When the event destination is\n            enabled, the specified event types are sent to the destinations in this\n                <code>EventDestinationDefinition</code>.</p>\n         <p>If <code>false</code>, the event destination is disabled. When the event destination\n            is disabled, events aren't sent to the specified destinations.</p>",
                        "type": "boolean"
                    },
                    "MatchingEventTypes": {
                        "description": "<p>The types of events that Amazon SES sends to the specified event destinations.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>SEND</code> - The send request was successful and SES will\n                    attempt to deliver the message to the recipient’s mail server. (If account-level\n                    or global suppression is being used, SES will still count it as a send,\n                    but delivery is suppressed.)</p>\n            </li>\n            <li>\n               <p>\n                  <code>REJECT</code> - SES accepted the email, but determined that it\n                    contained a virus and didn’t attempt to deliver it to the recipient’s mail\n                    server.</p>\n            </li>\n            <li>\n               <p>\n                  <code>BOUNCE</code> - (<i>Hard bounce</i>) The recipient's\n                    mail server permanently rejected the email. (<i>Soft bounces</i>\n                    are only included when SES fails to deliver the email after retrying for\n                    a period of time.)</p>\n            </li>\n            <li>\n               <p>\n                  <code>COMPLAINT</code> - The email was successfully delivered to the\n                    recipient’s mail server, but the recipient marked it as spam.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DELIVERY</code> - SES successfully delivered the email to the\n                    recipient's mail server.</p>\n            </li>\n            <li>\n               <p>\n                  <code>OPEN</code> - The recipient received the message and opened it in their\n                    email client.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CLICK</code> - The recipient clicked one or more links in the\n                    email.</p>\n            </li>\n            <li>\n               <p>\n                  <code>RENDERING_FAILURE</code> - The email wasn't sent because of a\n                    template rendering issue. This event type can occur when template data is\n                    missing, or when there is a mismatch between template parameters and data. (This\n                    event type only occurs when you send email using the <a href=\"https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_SendEmail.html\">\n                     <code>SendEmail</code>\n                  </a> or <a href=\"https://docs.aws.amazon.com/ses/latest/APIReference-V2/API_SendBulkEmail.html\">\n                     <code>SendBulkEmail</code>\n                  </a> API operations.) </p>\n            </li>\n            <li>\n               <p>\n                  <code>DELIVERY_DELAY</code> - The email couldn't be delivered to the\n                    recipient’s mail server because a temporary issue occurred. Delivery delays can\n                    occur, for example, when the recipient's inbox is full, or when the\n                    receiving email server experiences a transient issue.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUBSCRIPTION</code> - The email was successfully delivered, but the\n                    recipient updated their subscription preferences by clicking on an\n                        <i>unsubscribe</i> link as part of your <a href=\"https://docs.aws.amazon.com/ses/latest/dg/sending-email-subscription-management.html\">subscription\n                        management</a>.</p>\n            </li>\n         </ul>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventType"
                        }
                    },
                    "KinesisFirehoseDestination": {
                        "description": "<p>An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to\n            stream data to other services, such as Amazon S3 and Amazon Redshift.</p>",
                        "$ref": "#/components/schemas/KinesisFirehoseDestination"
                    },
                    "CloudWatchDestination": {
                        "description": "<p>An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to\n            monitor and gain insights on your email sending metrics.</p>",
                        "$ref": "#/components/schemas/CloudWatchDestination"
                    },
                    "SnsDestination": {
                        "description": "<p>An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to\n            send notifications when certain email events occur.</p>",
                        "$ref": "#/components/schemas/SnsDestination"
                    },
                    "EventBridgeDestination": {
                        "description": "<p>An object that defines an Amazon EventBridge destination for email events. You can use Amazon EventBridge to\n            send notifications when certain email events occur.</p>",
                        "$ref": "#/components/schemas/EventBridgeDestination"
                    },
                    "PinpointDestination": {
                        "description": "<p>An object that defines an Amazon Pinpoint project destination for email events. You can send\n            email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging\n            dashboards that are built in to Amazon Pinpoint. For more information, see <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html\">Transactional\n                Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.</p>",
                        "$ref": "#/components/schemas/PinpointDestination"
                    }
                },
                "required": [
                    "MatchingEventTypes",
                    "Name"
                ]
            },
            "EventType": {
                "enum": [
                    "BOUNCE",
                    "CLICK",
                    "COMPLAINT",
                    "DELIVERY",
                    "DELIVERY_DELAY",
                    "OPEN",
                    "REJECT",
                    "RENDERING_FAILURE",
                    "SEND",
                    "SUBSCRIPTION"
                ],
                "type": "string"
            },
            "KinesisFirehoseDestination": {
                "description": "<p>An object that defines an Amazon Kinesis Data Firehose destination for email events. You can use Amazon Kinesis Data Firehose to\n            stream data to other services, such as Amazon S3 and Amazon Redshift.</p>",
                "type": "object",
                "properties": {
                    "IamRoleArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the IAM role that the Amazon SES API v2 uses to send email\n            events to the Amazon Kinesis Data Firehose stream.</p>",
                        "type": "string"
                    },
                    "DeliveryStreamArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the Amazon Kinesis Data Firehose stream that the Amazon SES API v2 sends email\n            events to.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "DeliveryStreamArn",
                    "IamRoleArn"
                ]
            },
            "CloudWatchDestination": {
                "description": "<p>An object that defines an Amazon CloudWatch destination for email events. You can use Amazon CloudWatch to\n            monitor and gain insights on your email sending metrics.</p>",
                "type": "object",
                "properties": {
                    "DimensionConfigurations": {
                        "description": "<p>An array of objects that define the dimensions to use when you send email events to\n            Amazon CloudWatch.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CloudWatchDimensionConfiguration"
                        }
                    }
                },
                "required": [
                    "DimensionConfigurations"
                ]
            },
            "CloudWatchDimensionConfiguration": {
                "description": "<p>An object that defines the dimension configuration to use when you send email events\n            to Amazon CloudWatch.</p>",
                "type": "object",
                "properties": {
                    "DimensionName": {
                        "description": "<p>The name of an Amazon CloudWatch dimension associated with an email sending metric. The name has to\n            meet the following criteria:</p>\n         <ul>\n            <li>\n               <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9),\n                    underscores (_), or dashes (-).</p>\n            </li>\n            <li>\n               <p>It can contain no more than 256 characters.</p>\n            </li>\n         </ul>",
                        "type": "string"
                    },
                    "DimensionValueSource": {
                        "description": "<p>The location where the Amazon SES API v2 finds the value of a dimension to publish to Amazon CloudWatch. To\n            use the message tags that you specify using an <code>X-SES-MESSAGE-TAGS</code> header or\n            a parameter to the <code>SendEmail</code> or <code>SendRawEmail</code> API, choose\n                <code>messageTag</code>. To use your own email headers, choose\n                <code>emailHeader</code>. To use link tags, choose <code>linkTags</code>.</p>",
                        "enum": [
                            "EMAIL_HEADER",
                            "LINK_TAG",
                            "MESSAGE_TAG"
                        ],
                        "type": "string"
                    },
                    "DefaultDimensionValue": {
                        "description": "<p>The default value of the dimension that is published to Amazon CloudWatch if you don't provide the\n            value of the dimension when you send an email. This value has to meet the following\n            criteria:</p>\n         <ul>\n            <li>\n               <p>Can only contain ASCII letters (a–z, A–Z), numbers (0–9),\n                    underscores (_), or dashes (-), at signs (@), and periods (.).</p>\n            </li>\n            <li>\n               <p>It can contain no more than 256 characters.</p>\n            </li>\n         </ul>",
                        "type": "string"
                    }
                },
                "required": [
                    "DefaultDimensionValue",
                    "DimensionName",
                    "DimensionValueSource"
                ]
            },
            "SnsDestination": {
                "description": "<p>An object that defines an Amazon SNS destination for email events. You can use Amazon SNS to\n            send notifications when certain email events occur.</p>",
                "type": "object",
                "properties": {
                    "TopicArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the Amazon SNS topic to publish email events to. For\n            more information about Amazon SNS topics, see the <a href=\"https://docs.aws.amazon.com/sns/latest/dg/CreateTopic.html\">Amazon SNS Developer Guide</a>.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "TopicArn"
                ]
            },
            "EventBridgeDestination": {
                "description": "<p>An object that defines an Amazon EventBridge destination for email events. You can use Amazon EventBridge to\n            send notifications when certain email events occur.</p>",
                "type": "object",
                "properties": {
                    "EventBusArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the Amazon EventBridge bus to publish email events to. Only the default bus is supported. </p>",
                        "type": "string"
                    }
                },
                "required": [
                    "EventBusArn"
                ]
            },
            "PinpointDestination": {
                "description": "<p>An object that defines an Amazon Pinpoint project destination for email events. You can send\n            email event data to a Amazon Pinpoint project to view metrics using the Transactional Messaging\n            dashboards that are built in to Amazon Pinpoint. For more information, see <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/analytics-transactional-messages.html\">Transactional\n                Messaging Charts</a> in the <i>Amazon Pinpoint User Guide</i>.</p>",
                "type": "object",
                "properties": {
                    "ApplicationArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the Amazon Pinpoint project to send email events to.</p>",
                        "type": "string"
                    }
                }
            },
            "GetConfigurationSetEventDestinationsResponse": {
                "description": "<p>Information about an event destination for a configuration set.</p>",
                "type": "object",
                "properties": {
                    "EventDestinations": {
                        "description": "<p>An array that includes all of the events destinations that have been configured for\n            the configuration set.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventDestination"
                        }
                    }
                }
            },
            "TopicPreference": {
                "description": "<p>The contact's preference for being opted-in to or opted-out of a topic.</p>",
                "type": "object",
                "properties": {
                    "TopicName": {
                        "description": "<p>The name of the topic.</p>",
                        "type": "string"
                    },
                    "SubscriptionStatus": {
                        "description": "<p>The contact's subscription status to a topic which is either <code>OPT_IN</code> or\n                <code>OPT_OUT</code>.</p>",
                        "enum": [
                            "OPT_IN",
                            "OPT_OUT"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "SubscriptionStatus",
                    "TopicName"
                ]
            },
            "GetContactResponse": {
                "type": "object",
                "properties": {
                    "ContactListName": {
                        "description": "<p>The name of the contact list to which the contact belongs.</p>",
                        "type": "string"
                    },
                    "EmailAddress": {
                        "description": "<p>The contact's email address.</p>",
                        "type": "string"
                    },
                    "TopicPreferences": {
                        "description": "<p>The contact's preference for being opted-in to or opted-out of a topic.></p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopicPreference"
                        }
                    },
                    "TopicDefaultPreferences": {
                        "description": "<p>The default topic preferences applied to the contact.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopicPreference"
                        }
                    },
                    "UnsubscribeAll": {
                        "description": "<p>A boolean value status noting if the contact is unsubscribed from all contact list\n            topics.</p>",
                        "type": "boolean"
                    },
                    "AttributesData": {
                        "description": "<p>The attribute data attached to a contact.</p>",
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>A timestamp noting when the contact was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastUpdatedTimestamp": {
                        "description": "<p>A timestamp noting the last time the contact's information was updated.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "Topic": {
                "description": "<p>An interest group, theme, or label within a list. Lists can have multiple\n            topics.</p>",
                "type": "object",
                "properties": {
                    "TopicName": {
                        "description": "<p>The name of the topic.</p>",
                        "type": "string"
                    },
                    "DisplayName": {
                        "description": "<p>The name of the topic the contact will see.</p>",
                        "type": "string"
                    },
                    "Description": {
                        "description": "<p>A description of what the topic is about, which the contact will see.</p>",
                        "type": "string"
                    },
                    "DefaultSubscriptionStatus": {
                        "description": "<p>The default subscription status to be applied to a contact if the contact has not\n            noted their preference for subscribing to a topic.</p>",
                        "enum": [
                            "OPT_IN",
                            "OPT_OUT"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "DefaultSubscriptionStatus",
                    "DisplayName",
                    "TopicName"
                ]
            },
            "GetContactListResponse": {
                "type": "object",
                "properties": {
                    "ContactListName": {
                        "description": "<p>The name of the contact list.</p>",
                        "type": "string"
                    },
                    "Topics": {
                        "description": "<p>An interest group, theme, or label within a list. A contact list can have multiple\n            topics.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Topic"
                        }
                    },
                    "Description": {
                        "description": "<p>A description of what the contact list is about.</p>",
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>A timestamp noting when the contact list was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastUpdatedTimestamp": {
                        "description": "<p>A timestamp noting the last time the contact list was updated.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "Tags": {
                        "description": "<p>The tags associated with a contact list.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    }
                }
            },
            "GetCustomVerificationEmailTemplateResponse": {
                "description": "<p>The following elements are returned by the service.</p>",
                "type": "object",
                "properties": {
                    "TemplateName": {
                        "description": "<p>The name of the custom verification email template.</p>",
                        "type": "string"
                    },
                    "FromEmailAddress": {
                        "description": "<p>The email address that the custom verification email is sent from.</p>",
                        "type": "string"
                    },
                    "TemplateSubject": {
                        "description": "<p>The subject line of the custom verification email.</p>",
                        "type": "string"
                    },
                    "TemplateContent": {
                        "description": "<p>The content of the custom verification email.</p>",
                        "type": "string"
                    },
                    "SuccessRedirectionURL": {
                        "description": "<p>The URL that the recipient of the verification email is sent to if his or her address\n            is successfully verified.</p>",
                        "type": "string"
                    },
                    "FailureRedirectionURL": {
                        "description": "<p>The URL that the recipient of the verification email is sent to if his or her address\n            is not successfully verified.</p>",
                        "type": "string"
                    }
                }
            },
            "DedicatedIp": {
                "description": "<p>Contains information about a dedicated IP address that is associated with your Amazon SES\n            account.</p>\n         <p>To learn more about requesting dedicated IP addresses, see <a href=\"https://docs.aws.amazon.com/ses/latest/DeveloperGuide/dedicated-ip-case.html\">Requesting and Relinquishing\n                Dedicated IP Addresses</a> in the <i>Amazon SES Developer\n            Guide</i>.</p>",
                "type": "object",
                "properties": {
                    "Ip": {
                        "description": "<p>An IPv4 address.</p>",
                        "type": "string"
                    },
                    "WarmupStatus": {
                        "description": "<p>The warm-up status of a dedicated IP address. The status can have one of the following\n            values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>IN_PROGRESS</code> – The IP address isn't ready to use because the\n                    dedicated IP warm-up process is ongoing.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DONE</code> – The dedicated IP warm-up process is complete, and\n                    the IP address is ready to use.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NOT_APPLICABLE</code> – The warm-up status doesn't apply to this IP address.\n                    This status is used for IP addresses in managed dedicated IP pools, where Amazon SES automatically\n                    handles the warm-up process.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DONE",
                            "IN_PROGRESS",
                            "NOT_APPLICABLE"
                        ],
                        "type": "string"
                    },
                    "WarmupPercentage": {
                        "description": "<p>Indicates the progress of your dedicated IP warm-up:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>0-100</code> – For standard dedicated IP addresses, this shows the warm-up completion percentage. A value of 100 means the IP address is fully warmed up and ready for use.</p>\n            </li>\n            <li>\n               <p>\n                  <code>-1</code> – Appears for IP addresses in managed dedicated pools where Amazon SES automatically handles the warm-up process, making the percentage not applicable.</p>\n            </li>\n         </ul>",
                        "type": "integer"
                    },
                    "PoolName": {
                        "description": "<p>The name of the dedicated IP pool that the IP address is associated with.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "Ip",
                    "WarmupPercentage",
                    "WarmupStatus"
                ]
            },
            "GetDedicatedIpResponse": {
                "description": "<p>Information about a dedicated IP address.</p>",
                "type": "object",
                "properties": {
                    "DedicatedIp": {
                        "description": "<p>An object that contains information about a dedicated IP address.</p>",
                        "$ref": "#/components/schemas/DedicatedIp"
                    }
                }
            },
            "DedicatedIpPool": {
                "description": "<p>Contains information about a dedicated IP pool.</p>",
                "type": "object",
                "properties": {
                    "PoolName": {
                        "description": "<p>The name of the dedicated IP pool.</p>",
                        "type": "string"
                    },
                    "ScalingMode": {
                        "description": "<p>The type of the dedicated IP pool.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>STANDARD</code> – A dedicated IP pool where you can\n                    control which IPs are part of the pool.</p>\n            </li>\n            <li>\n               <p>\n                  <code>MANAGED</code> – A dedicated IP pool where the reputation and\n                    number of IPs are automatically managed by Amazon SES.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "MANAGED",
                            "STANDARD"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "PoolName",
                    "ScalingMode"
                ]
            },
            "GetDedicatedIpPoolResponse": {
                "description": "<p>The following element is returned by the service.</p>",
                "type": "object",
                "properties": {
                    "DedicatedIpPool": {
                        "description": "<p>An object that contains information about a dedicated IP pool.</p>",
                        "$ref": "#/components/schemas/DedicatedIpPool"
                    }
                }
            },
            "GetDedicatedIpsResponse": {
                "description": "<p>Information about the dedicated IP addresses that are associated with your Amazon Web Services\n            account.</p>",
                "type": "object",
                "properties": {
                    "DedicatedIps": {
                        "description": "<p>A list of dedicated IP addresses that are associated with your Amazon Web Services account.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DedicatedIp"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional dedicated IP addresses to list. To\n            view additional addresses, issue another request to <code>GetDedicatedIps</code>,\n            passing this token in the <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "DomainDeliverabilityTrackingOption": {
                "description": "<p>An object that contains information about the Deliverability dashboard subscription for a\n            verified domain that you use to send email and currently has an active Deliverability dashboard\n            subscription. If a Deliverability dashboard subscription is active for a domain, you gain access\n            to reputation, inbox placement, and other metrics for the domain.</p>",
                "type": "object",
                "properties": {
                    "Domain": {
                        "description": "<p>A verified domain that’s associated with your Amazon Web Services account and currently has an\n            active Deliverability dashboard subscription.</p>",
                        "type": "string"
                    },
                    "SubscriptionStartDate": {
                        "description": "<p>The date when you enabled the Deliverability dashboard for the\n            domain.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "InboxPlacementTrackingOption": {
                        "description": "<p>An object that contains information about the inbox placement data settings for the\n            domain.</p>",
                        "$ref": "#/components/schemas/InboxPlacementTrackingOption"
                    }
                }
            },
            "InboxPlacementTrackingOption": {
                "description": "<p>An object that contains information about the inbox placement data settings for a\n            verified domain that’s associated with your Amazon Web Services account. This data is available only\n            if you enabled the Deliverability dashboard for the domain.</p>",
                "type": "object",
                "properties": {
                    "Global": {
                        "description": "<p>Specifies whether inbox placement data is being tracked for the domain.</p>",
                        "type": "boolean"
                    },
                    "TrackedIsps": {
                        "description": "<p>An array of strings, one for each major email provider that the inbox placement data\n            applies to.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "GetDeliverabilityDashboardOptionsResponse": {
                "description": "<p>An object that shows the status of the Deliverability dashboard.</p>",
                "type": "object",
                "properties": {
                    "DashboardEnabled": {
                        "description": "<p>Specifies whether the Deliverability dashboard is enabled. If this value is <code>true</code>,\n            the dashboard is enabled.</p>",
                        "type": "boolean"
                    },
                    "SubscriptionExpiryDate": {
                        "description": "<p>The date  when your current subscription to the Deliverability dashboard\n            is scheduled to expire, if your subscription is scheduled to expire at the end of the\n            current calendar month. This value is null if you have an active subscription that isn’t\n            due to expire at the end of the month.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "AccountStatus": {
                        "description": "<p>The current status of your Deliverability dashboard subscription. If this value is\n                <code>PENDING_EXPIRATION</code>, your subscription is scheduled to expire at the end\n            of the current calendar month.</p>",
                        "enum": [
                            "ACTIVE",
                            "DISABLED",
                            "PENDING_EXPIRATION"
                        ],
                        "type": "string"
                    },
                    "ActiveSubscribedDomains": {
                        "description": "<p>An array of objects, one for each verified domain that you use to send email and\n            currently has an active Deliverability dashboard subscription that isn’t scheduled to expire at\n            the end of the current calendar month.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DomainDeliverabilityTrackingOption"
                        }
                    },
                    "PendingExpirationSubscribedDomains": {
                        "description": "<p>An array of objects, one for each verified domain that you use to send email and\n            currently has an active Deliverability dashboard subscription that's scheduled to expire at the\n            end of the current calendar month.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DomainDeliverabilityTrackingOption"
                        }
                    }
                },
                "required": [
                    "DashboardEnabled"
                ]
            },
            "DeliverabilityTestReport": {
                "description": "<p>An object that contains metadata related to a predictive inbox placement test.</p>",
                "type": "object",
                "properties": {
                    "ReportId": {
                        "description": "<p>A unique string that identifies the predictive inbox placement test.</p>",
                        "type": "string"
                    },
                    "ReportName": {
                        "description": "<p>A name that helps you identify a predictive inbox placement test report.</p>",
                        "type": "string"
                    },
                    "Subject": {
                        "description": "<p>The subject line for an email that you submitted in a predictive inbox placement test.</p>",
                        "type": "string"
                    },
                    "FromEmailAddress": {
                        "description": "<p>The sender address that you specified for the predictive inbox placement test.</p>",
                        "type": "string"
                    },
                    "CreateDate": {
                        "description": "<p>The date and time when the predictive inbox placement test was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "DeliverabilityTestStatus": {
                        "description": "<p>The status of the predictive inbox placement test. If the status is <code>IN_PROGRESS</code>, then the predictive inbox placement test\n            is currently running. Predictive inbox placement tests are usually complete within 24 hours of creating the\n            test. If the status is <code>COMPLETE</code>, then the test is finished, and you can use\n            the <code>GetDeliverabilityTestReport</code> to view the results of the test.</p>",
                        "enum": [
                            "COMPLETED",
                            "IN_PROGRESS"
                        ],
                        "type": "string"
                    }
                }
            },
            "PlacementStatistics": {
                "description": "<p>An object that contains inbox placement data for an email provider.</p>",
                "type": "object",
                "properties": {
                    "InboxPercentage": {
                        "description": "<p>The percentage of emails that arrived in recipients' inboxes during the predictive inbox placement test.</p>",
                        "type": "integer"
                    },
                    "SpamPercentage": {
                        "description": "<p>The percentage of emails that arrived in recipients' spam or junk mail folders during\n            the predictive inbox placement test.</p>",
                        "type": "integer"
                    },
                    "MissingPercentage": {
                        "description": "<p>The percentage of emails that didn't arrive in recipients' inboxes at all during the\n            predictive inbox placement test.</p>",
                        "type": "integer"
                    },
                    "SpfPercentage": {
                        "description": "<p>The percentage of emails that were authenticated by using Sender Policy Framework\n            (SPF) during the predictive inbox placement test.</p>",
                        "type": "integer"
                    },
                    "DkimPercentage": {
                        "description": "<p>The percentage of emails that were authenticated by using DomainKeys Identified Mail\n            (DKIM) during the predictive inbox placement test.</p>",
                        "type": "integer"
                    }
                }
            },
            "IspPlacement": {
                "description": "<p>An object that describes how email sent during the predictive inbox placement test was handled by a certain\n            email provider.</p>",
                "type": "object",
                "properties": {
                    "IspName": {
                        "description": "<p>The name of the email provider that the inbox placement data applies to.</p>",
                        "type": "string"
                    },
                    "PlacementStatistics": {
                        "description": "<p>An object that contains inbox placement metrics for a specific email provider.</p>",
                        "$ref": "#/components/schemas/PlacementStatistics"
                    }
                }
            },
            "GetDeliverabilityTestReportResponse": {
                "description": "<p>The results of the predictive inbox placement test.</p>",
                "type": "object",
                "properties": {
                    "DeliverabilityTestReport": {
                        "description": "<p>An object that contains the results of the predictive inbox placement test.</p>",
                        "$ref": "#/components/schemas/DeliverabilityTestReport"
                    },
                    "OverallPlacement": {
                        "description": "<p>An object that specifies how many test messages that were sent during the predictive inbox placement test were\n            delivered to recipients' inboxes, how many were sent to recipients' spam folders, and\n            how many weren't delivered.</p>",
                        "$ref": "#/components/schemas/PlacementStatistics"
                    },
                    "IspPlacements": {
                        "description": "<p>An object that describes how the test email was handled by several email providers,\n            including Gmail, Hotmail, Yahoo, AOL, and others.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IspPlacement"
                        }
                    },
                    "Message": {
                        "description": "<p>An object that contains the message that you sent when you performed this\n            predictive inbox placement test.</p>",
                        "type": "string"
                    },
                    "Tags": {
                        "description": "<p>An array of objects that define the tags (keys and values) that are associated with\n            the predictive inbox placement test.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    }
                },
                "required": [
                    "DeliverabilityTestReport",
                    "IspPlacements",
                    "OverallPlacement"
                ]
            },
            "DomainDeliverabilityCampaign": {
                "description": "<p>An object that contains the deliverability data for a specific campaign. This data is\n            available for a campaign only if the campaign sent email by using a domain that the\n            Deliverability dashboard is enabled for (<code>PutDeliverabilityDashboardOption</code>\n            operation).</p>",
                "type": "object",
                "properties": {
                    "CampaignId": {
                        "description": "<p>The unique identifier for the campaign. The Deliverability dashboard automatically generates\n            and assigns this identifier to a campaign.</p>",
                        "type": "string"
                    },
                    "ImageUrl": {
                        "description": "<p>The URL of an image that contains a snapshot of the email message that was\n            sent.</p>",
                        "type": "string"
                    },
                    "Subject": {
                        "description": "<p>The subject line, or title, of the email message.</p>",
                        "type": "string"
                    },
                    "FromAddress": {
                        "description": "<p>The verified email address that the email message was sent from.</p>",
                        "type": "string"
                    },
                    "SendingIps": {
                        "description": "<p>The IP addresses that were used to send the email message.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "FirstSeenDateTime": {
                        "description": "<p>The first time when the email message was delivered to any\n            recipient's inbox. This value can help you determine how long it took for a campaign to\n            deliver an email message.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastSeenDateTime": {
                        "description": "<p>The last time when the email message was delivered to any\n            recipient's inbox. This value can help you determine how long it took for a campaign to\n            deliver an email message.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "InboxCount": {
                        "description": "<p>The number of email messages that were delivered to recipients’ inboxes.</p>",
                        "type": "integer"
                    },
                    "SpamCount": {
                        "description": "<p>The number of email messages that were delivered to recipients' spam or junk mail\n            folders.</p>",
                        "type": "integer"
                    },
                    "ReadRate": {
                        "description": "<p>The percentage of email messages that were opened by recipients. Due to technical\n            limitations, this value only includes recipients who opened the message by using an\n            email client that supports images.</p>",
                        "type": "integer"
                    },
                    "DeleteRate": {
                        "description": "<p>The percentage of email messages that were deleted by recipients, without being opened\n            first. Due to technical limitations, this value only includes recipients who opened the\n            message by using an email client that supports images.</p>",
                        "type": "integer"
                    },
                    "ReadDeleteRate": {
                        "description": "<p>The percentage of email messages that were opened and then deleted by recipients. Due\n            to technical limitations, this value only includes recipients who opened the message by\n            using an email client that supports images.</p>",
                        "type": "integer"
                    },
                    "ProjectedVolume": {
                        "description": "<p>The projected number of recipients that the email message was sent to.</p>",
                        "type": "integer"
                    },
                    "Esps": {
                        "description": "<p>The major email providers who handled the email message.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "GetDomainDeliverabilityCampaignResponse": {
                "description": "<p>An object that contains all the deliverability data for a specific campaign. This data\n            is available for a campaign only if the campaign sent email by using a domain that the\n            Deliverability dashboard is enabled for.</p>",
                "type": "object",
                "properties": {
                    "DomainDeliverabilityCampaign": {
                        "description": "<p>An object that contains the deliverability data for the campaign.</p>",
                        "$ref": "#/components/schemas/DomainDeliverabilityCampaign"
                    }
                },
                "required": [
                    "DomainDeliverabilityCampaign"
                ]
            },
            "OverallVolume": {
                "description": "<p>An object that contains information about email that was sent from the selected\n            domain.</p>",
                "type": "object",
                "properties": {
                    "VolumeStatistics": {
                        "description": "<p>An object that contains information about the numbers of messages that arrived in\n            recipients' inboxes and junk mail folders.</p>",
                        "$ref": "#/components/schemas/VolumeStatistics"
                    },
                    "ReadRatePercent": {
                        "description": "<p>The percentage of emails that were sent from the domain that were read by their\n            recipients.</p>",
                        "type": "integer"
                    },
                    "DomainIspPlacements": {
                        "description": "<p>An object that contains inbox and junk mail placement metrics for individual email\n            providers.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DomainIspPlacement"
                        }
                    }
                }
            },
            "VolumeStatistics": {
                "description": "<p>An object that contains information about the amount of email that was delivered to\n            recipients.</p>",
                "type": "object",
                "properties": {
                    "InboxRawCount": {
                        "description": "<p>The total number of emails that arrived in recipients' inboxes.</p>",
                        "type": "integer"
                    },
                    "SpamRawCount": {
                        "description": "<p>The total number of emails that arrived in recipients' spam or junk mail\n            folders.</p>",
                        "type": "integer"
                    },
                    "ProjectedInbox": {
                        "description": "<p>An estimate of the percentage of emails sent from the current domain that will arrive\n            in recipients' inboxes.</p>",
                        "type": "integer"
                    },
                    "ProjectedSpam": {
                        "description": "<p>An estimate of the percentage of emails sent from the current domain that will arrive\n            in recipients' spam or junk mail folders.</p>",
                        "type": "integer"
                    }
                }
            },
            "DomainIspPlacement": {
                "description": "<p>An object that contains inbox placement data for email sent from one of your email\n            domains to a specific email provider.</p>",
                "type": "object",
                "properties": {
                    "IspName": {
                        "description": "<p>The name of the email provider that the inbox placement data applies to.</p>",
                        "type": "string"
                    },
                    "InboxRawCount": {
                        "description": "<p>The total number of messages that were sent from the selected domain to the specified\n            email provider that arrived in recipients' inboxes.</p>",
                        "type": "integer"
                    },
                    "SpamRawCount": {
                        "description": "<p>The total number of messages that were sent from the selected domain to the specified\n            email provider that arrived in recipients' spam or junk mail folders.</p>",
                        "type": "integer"
                    },
                    "InboxPercentage": {
                        "description": "<p>The percentage of messages that were sent from the selected domain to the specified\n            email provider that arrived in recipients' inboxes.</p>",
                        "type": "integer"
                    },
                    "SpamPercentage": {
                        "description": "<p>The percentage of messages that were sent from the selected domain to the specified\n            email provider that arrived in recipients' spam or junk mail folders.</p>",
                        "type": "integer"
                    }
                }
            },
            "DailyVolume": {
                "description": "<p>An object that contains information about the volume of email sent on each day of the\n            analysis period.</p>",
                "type": "object",
                "properties": {
                    "StartDate": {
                        "description": "<p>The date that the DailyVolume metrics apply to, in Unix time.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "VolumeStatistics": {
                        "description": "<p>An object that contains inbox placement metrics for a specific day in the analysis\n            period.</p>",
                        "$ref": "#/components/schemas/VolumeStatistics"
                    },
                    "DomainIspPlacements": {
                        "description": "<p>An object that contains inbox placement metrics for a specified day in the analysis\n            period, broken out by the recipient's email provider.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DomainIspPlacement"
                        }
                    }
                }
            },
            "GetDomainStatisticsReportResponse": {
                "description": "<p>An object that includes statistics that are related to the domain that you\n            specified.</p>",
                "type": "object",
                "properties": {
                    "OverallVolume": {
                        "description": "<p>An object that contains deliverability metrics for the domain that you specified. The\n            data in this object is a summary of all of the data that was collected from the\n                <code>StartDate</code> to the <code>EndDate</code>.</p>",
                        "$ref": "#/components/schemas/OverallVolume"
                    },
                    "DailyVolumes": {
                        "description": "<p>An object that contains deliverability metrics for the domain that you specified. This\n            object contains data for each day, starting on the <code>StartDate</code> and ending on\n            the <code>EndDate</code>.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DailyVolume"
                        }
                    }
                },
                "required": [
                    "DailyVolumes",
                    "OverallVolume"
                ]
            },
            "MailFromAttributes": {
                "description": "<p>A list of attributes that are associated with a MAIL FROM domain.</p>",
                "type": "object",
                "properties": {
                    "MailFromDomain": {
                        "description": "<p>The name of a domain that an email identity uses as a custom MAIL FROM domain.</p>",
                        "type": "string"
                    },
                    "MailFromDomainStatus": {
                        "description": "<p>The status of the MAIL FROM domain. This status can have the following values:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PENDING</code> – Amazon SES hasn't started searching for the MX record\n                    yet.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCESS</code> – Amazon SES detected the required MX record for the\n                    MAIL FROM domain.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAILED</code> – Amazon SES can't find the required MX record, or the\n                    record no longer exists.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TEMPORARY_FAILURE</code> – A temporary issue occurred, which\n                    prevented Amazon SES from determining the status of the MAIL FROM domain.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "FAILED",
                            "PENDING",
                            "SUCCESS",
                            "TEMPORARY_FAILURE"
                        ],
                        "type": "string"
                    },
                    "BehaviorOnMxFailure": {
                        "description": "<p>The action to take if the required MX record can't be found when you send an email.\n            When you set this value to <code>USE_DEFAULT_VALUE</code>, the mail is sent using\n                <i>amazonses.com</i> as the MAIL FROM domain. When you set this value\n            to <code>REJECT_MESSAGE</code>, the Amazon SES API v2 returns a\n                <code>MailFromDomainNotVerified</code> error, and doesn't attempt to deliver the\n            email.</p>\n         <p>These behaviors are taken when the custom MAIL FROM domain configuration is in the\n                <code>Pending</code>, <code>Failed</code>, and <code>TemporaryFailure</code>\n            states.</p>",
                        "enum": [
                            "REJECT_MESSAGE",
                            "USE_DEFAULT_VALUE"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "BehaviorOnMxFailure",
                    "MailFromDomain",
                    "MailFromDomainStatus"
                ]
            },
            "VerificationInfo": {
                "description": "<p>An object that contains additional information about the verification status for the\n            identity.</p>",
                "type": "object",
                "properties": {
                    "LastCheckedTimestamp": {
                        "description": "<p>The last time a verification attempt was made for this identity.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastSuccessTimestamp": {
                        "description": "<p>The last time a successful verification was made for this identity.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "ErrorType": {
                        "description": "<p>Provides the reason for the failure describing why Amazon SES was not able to successfully\n            verify the identity. Below are the possible values: </p>\n         <ul>\n            <li>\n               <p>\n                  <code>INVALID_VALUE</code> – Amazon SES was able to find the record, but the\n                    value contained within the record was invalid. Ensure you have published the\n                    correct values for the record.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TYPE_NOT_FOUND</code> – The queried hostname exists but does not\n                    have the requested type of DNS record. Ensure that you have published the\n                    correct type of DNS record.</p>\n            </li>\n            <li>\n               <p>\n                  <code>HOST_NOT_FOUND</code> – The queried hostname does not exist or was\n                    not reachable at the time of the request. Ensure that you have published the\n                    required DNS record(s). </p>\n            </li>\n            <li>\n               <p>\n                  <code>SERVICE_ERROR</code> – A temporary issue is preventing Amazon SES from\n                    determining the verification status of the domain.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DNS_SERVER_ERROR</code> – The DNS server encountered an issue and\n                    was unable to complete the request.</p>\n            </li>\n            <li>\n               <p>\n                  <code>REPLICATION_ACCESS_DENIED</code> – The verification failed because the user does not\n                    have the required permissions to replicate the DKIM key from the primary region. Ensure you have the\n                    necessary permissions in both primary and replica regions.\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>REPLICATION_PRIMARY_NOT_FOUND</code> – The verification failed because no corresponding\n                    identity was found in the specified primary region. Ensure the identity exists in the primary region\n                    before attempting replication.\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>REPLICATION_PRIMARY_BYO_DKIM_NOT_SUPPORTED</code> – The verification failed because the\n                    identity in the primary region is configured with Bring Your Own DKIM (BYODKIM). DKIM key\n                    replication is only supported for identities using Easy DKIM.\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>REPLICATION_REPLICA_AS_PRIMARY_NOT_SUPPORTED</code> – The verification failed because\n                    the specified primary identity is a replica of another identity, and multi-level replication is not\n                    supported; the primary identity must be a non-replica identity.\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>REPLICATION_PRIMARY_INVALID_REGION</code> – The verification failed due to an invalid\n                    primary region specified. Ensure you provide a valid Amazon Web Services region where Amazon SES is available and different\n                    from the replica region.\n                </p>\n            </li>\n         </ul>",
                        "enum": [
                            "DNS_SERVER_ERROR",
                            "HOST_NOT_FOUND",
                            "INVALID_VALUE",
                            "REPLICATION_ACCESS_DENIED",
                            "REPLICATION_PRIMARY_BYO_DKIM_NOT_SUPPORTED",
                            "REPLICATION_PRIMARY_INVALID_REGION",
                            "REPLICATION_PRIMARY_NOT_FOUND",
                            "REPLICATION_REPLICA_AS_PRIMARY_NOT_SUPPORTED",
                            "SERVICE_ERROR",
                            "TYPE_NOT_FOUND"
                        ],
                        "type": "string"
                    },
                    "SOARecord": {
                        "description": "<p>An object that contains information about the start of authority (SOA) record\n            associated with the identity.</p>",
                        "$ref": "#/components/schemas/SOARecord"
                    }
                }
            },
            "SOARecord": {
                "description": "<p>An object that contains information about the start of authority (SOA) record\n            associated with the identity.</p>",
                "type": "object",
                "properties": {
                    "PrimaryNameServer": {
                        "description": "<p>Primary name server specified in the SOA record.</p>",
                        "type": "string"
                    },
                    "AdminEmail": {
                        "description": "<p>Administrative contact email from the SOA record.</p>",
                        "type": "string"
                    },
                    "SerialNumber": {
                        "description": "<p>Serial number from the SOA record.</p>",
                        "type": "integer"
                    }
                }
            },
            "GetEmailIdentityResponse": {
                "description": "<p>Details about an email identity.</p>",
                "type": "object",
                "properties": {
                    "IdentityType": {
                        "description": "<p>The email identity type. Note: the <code>MANAGED_DOMAIN</code> identity type is not\n            supported.</p>",
                        "enum": [
                            "DOMAIN",
                            "EMAIL_ADDRESS",
                            "MANAGED_DOMAIN"
                        ],
                        "type": "string"
                    },
                    "FeedbackForwardingStatus": {
                        "description": "<p>The feedback forwarding configuration for the identity.</p>\n         <p>If the value is <code>true</code>, you receive email notifications when bounce or\n            complaint events occur. These notifications are sent to the address that you specified\n            in the <code>Return-Path</code> header of the original email.</p>\n         <p>You're required to have a method of tracking bounces and complaints. If you haven't\n            set up another mechanism for receiving bounce or complaint notifications (for example,\n            by setting up an event destination), you receive an email notification when these events\n            occur (even if this setting is disabled).</p>",
                        "type": "boolean"
                    },
                    "VerifiedForSendingStatus": {
                        "description": "<p>Specifies whether or not the identity is verified. You can only send email from\n            verified email addresses or domains. For more information about verifying identities,\n            see the <a href=\"https://docs.aws.amazon.com/pinpoint/latest/userguide/channels-email-manage-verify.html\">Amazon Pinpoint User Guide</a>.</p>",
                        "type": "boolean"
                    },
                    "DkimAttributes": {
                        "description": "<p>An object that contains information about the DKIM attributes for the identity.</p>",
                        "$ref": "#/components/schemas/DkimAttributes"
                    },
                    "MailFromAttributes": {
                        "description": "<p>An object that contains information about the Mail-From attributes for the email\n            identity.</p>",
                        "$ref": "#/components/schemas/MailFromAttributes"
                    },
                    "Policies": {
                        "description": "<p>A map of policy names to policies.</p>",
                        "$ref": "#/components/schemas/Record<string,string>"
                    },
                    "Tags": {
                        "description": "<p>An array of objects that define the tags (keys and values) that are associated with\n            the email identity.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    },
                    "ConfigurationSetName": {
                        "description": "<p>The configuration set used by default when sending from this identity.</p>",
                        "type": "string"
                    },
                    "VerificationStatus": {
                        "description": "<p>The verification status of the identity. The status can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PENDING</code> – The verification process was initiated, but Amazon SES\n                    hasn't yet been able to verify the identity.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCESS</code> – The verification process completed\n                    successfully.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAILED</code> – The verification process failed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES\n                    from determining the verification status of the identity.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NOT_STARTED</code> – The verification process hasn't been\n                    initiated for the identity.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "FAILED",
                            "NOT_STARTED",
                            "PENDING",
                            "SUCCESS",
                            "TEMPORARY_FAILURE"
                        ],
                        "type": "string"
                    },
                    "VerificationInfo": {
                        "description": "<p>An object that contains additional information about the verification status for the\n            identity.</p>",
                        "$ref": "#/components/schemas/VerificationInfo"
                    }
                }
            },
            "GetEmailIdentityPoliciesResponse": {
                "description": "<p>Identity policies associated with email identity.</p>",
                "type": "object",
                "properties": {
                    "Policies": {
                        "description": "<p>A map of policy names to policies.</p>",
                        "$ref": "#/components/schemas/Record<string,string>"
                    }
                }
            },
            "EmailTemplateContent": {
                "description": "<p>The content of the email, composed of a subject line, an HTML part, and a text-only\n            part.</p>",
                "type": "object",
                "properties": {
                    "Subject": {
                        "description": "<p>The subject line of the email.</p>",
                        "type": "string"
                    },
                    "Text": {
                        "description": "<p>The email body that will be visible to recipients whose email clients do not display\n            HTML.</p>",
                        "type": "string"
                    },
                    "Html": {
                        "description": "<p>The HTML body of the email.</p>",
                        "type": "string"
                    }
                }
            },
            "GetEmailTemplateResponse": {
                "description": "<p>The following element is returned by the service.</p>",
                "type": "object",
                "properties": {
                    "TemplateName": {
                        "description": "<p>The name of the template.</p>",
                        "type": "string"
                    },
                    "TemplateContent": {
                        "description": "<p>The content of the email template, composed of a subject line, an HTML part, and a\n            text-only part.</p>",
                        "$ref": "#/components/schemas/EmailTemplateContent"
                    }
                },
                "required": [
                    "TemplateContent",
                    "TemplateName"
                ]
            },
            "ExportDestination": {
                "description": "<p>An object that contains details about the destination of the export job.</p>",
                "type": "object",
                "properties": {
                    "DataFormat": {
                        "description": "<p>The data format of the final export job file, can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CSV</code> - A comma-separated values file.</p>\n            </li>\n            <li>\n               <p>\n                  <code>JSON</code> - A Json file.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "CSV",
                            "JSON"
                        ],
                        "type": "string"
                    },
                    "S3Url": {
                        "description": "<p>An Amazon S3 pre-signed URL that points to the generated export file.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "DataFormat"
                ]
            },
            "ExportDataSource": {
                "description": "<p>An object that contains details about the data source of the export job. It can only\n            contain one of <code>MetricsDataSource</code> or <code>MessageInsightsDataSource</code> object.</p>",
                "type": "object",
                "properties": {
                    "MetricsDataSource": {
                        "description": "<p>An object that contains details about the data source for the metrics export.</p>",
                        "$ref": "#/components/schemas/MetricsDataSource"
                    },
                    "MessageInsightsDataSource": {
                        "description": "<p>An object that contains filters applied when performing the Message Insights export.</p>",
                        "$ref": "#/components/schemas/MessageInsightsDataSource"
                    }
                }
            },
            "MetricsDataSource": {
                "description": "<p>An object that contains details about the data source for the metrics export.</p>",
                "type": "object",
                "properties": {
                    "Dimensions": {
                        "description": "<p>An object that contains a mapping between a <code>MetricDimensionName</code> and\n            <code>MetricDimensionValue</code> to filter metrics by. Must contain a least 1\n            dimension but no more than 3 unique ones.</p>",
                        "$ref": "#/components/schemas/Partial<Record<MetricDimensionName,string[]>>"
                    },
                    "Namespace": {
                        "description": "<p>The metrics namespace - e.g., <code>VDM</code>.</p>",
                        "const": "VDM",
                        "type": "string"
                    },
                    "Metrics": {
                        "description": "<p>A list of <code>ExportMetric</code> objects to export.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExportMetric"
                        }
                    },
                    "StartDate": {
                        "description": "<p>Represents the start date for the export interval as a timestamp.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "description": "<p>Represents the end date for the export interval as a timestamp.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "Dimensions",
                    "EndDate",
                    "Metrics",
                    "Namespace",
                    "StartDate"
                ]
            },
            "ExportMetric": {
                "description": "<p>An object that contains a mapping between a <code>Metric</code> and\n            <code>MetricAggregation</code>.</p>",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "<p>The metric to export, can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>SEND</code> - Emails sent eligible for tracking in the VDM\n                    dashboard. This excludes emails sent to the mailbox simulator and emails\n                    addressed to more than one recipient.</p>\n            </li>\n            <li>\n               <p>\n                  <code>COMPLAINT</code> - Complaints received for your account. This\n                    excludes complaints from the mailbox simulator, those originating from your\n                    account-level suppression list (if enabled), and those for emails addressed to\n                    more than one recipient</p>\n            </li>\n            <li>\n               <p>\n                  <code>PERMANENT_BOUNCE</code> - Permanent bounces - i.e., feedback\n                    received for emails sent to non-existent mailboxes. Excludes bounces from the\n                    mailbox simulator, those originating from your account-level suppression list\n                    (if enabled), and those for emails addressed to more than one recipient.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TRANSIENT_BOUNCE</code> - Transient bounces - i.e., feedback\n                    received for delivery failures excluding issues with non-existent mailboxes.\n                    Excludes bounces from the mailbox simulator, and those for emails addressed to\n                    more than one recipient.</p>\n            </li>\n            <li>\n               <p>\n                  <code>OPEN</code> - Unique open events for emails including open\n                    trackers. Excludes opens for emails addressed to more than one recipient.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CLICK</code> - Unique click events for emails including wrapped\n                    links. Excludes clicks for emails addressed to more than one recipient.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DELIVERY</code> - Successful deliveries for email sending\n                    attempts. Excludes deliveries to the mailbox simulator and for emails addressed\n                    to more than one recipient.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DELIVERY_OPEN</code> - Successful deliveries for email sending\n                    attempts. Excludes deliveries to the mailbox simulator, for emails addressed to\n                    more than one recipient, and emails without open trackers.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DELIVERY_CLICK</code> - Successful deliveries for email sending\n                    attempts. Excludes deliveries to the mailbox simulator, for emails addressed to\n                    more than one recipient, and emails without click trackers.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DELIVERY_COMPLAINT</code> - Successful deliveries for email\n                    sending attempts. Excludes deliveries to the mailbox simulator, for emails\n                    addressed to more than one recipient, and emails addressed to recipients hosted\n                    by ISPs with which Amazon SES does not have a feedback loop agreement.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "CLICK",
                            "COMPLAINT",
                            "DELIVERY",
                            "DELIVERY_CLICK",
                            "DELIVERY_COMPLAINT",
                            "DELIVERY_OPEN",
                            "OPEN",
                            "PERMANENT_BOUNCE",
                            "SEND",
                            "TRANSIENT_BOUNCE"
                        ],
                        "type": "string"
                    },
                    "Aggregation": {
                        "description": "<p>The aggregation to apply to a metric, can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>VOLUME</code> - The volume of events for this metric.</p>\n            </li>\n            <li>\n               <p>\n                  <code>RATE</code> - The rate for this metric relative to the\n                    <code>SEND</code> metric volume.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "RATE",
                            "VOLUME"
                        ],
                        "type": "string"
                    }
                }
            },
            "MessageInsightsDataSource": {
                "description": "<p>An object that contains filters applied when performing the Message Insights export.</p>",
                "type": "object",
                "properties": {
                    "StartDate": {
                        "description": "<p>Represents the start date for the export interval as a timestamp. The start date is inclusive.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "EndDate": {
                        "description": "<p>Represents the end date for the export interval as a timestamp. The end date is inclusive.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "Include": {
                        "description": "<p>Filters for results to be included in the export file.</p>",
                        "$ref": "#/components/schemas/MessageInsightsFilters"
                    },
                    "Exclude": {
                        "description": "<p>Filters for results to be excluded from the export file.</p>",
                        "$ref": "#/components/schemas/MessageInsightsFilters"
                    },
                    "MaxResults": {
                        "description": "<p>The maximum number of results.</p>",
                        "type": "integer"
                    }
                },
                "required": [
                    "EndDate",
                    "StartDate"
                ]
            },
            "MessageInsightsFilters": {
                "description": "<p>An object containing Message Insights filters.</p>\n         <p>If you specify multiple filters, the filters are joined by AND.</p>\n         <p>If you specify multiple values for a filter, the values are joined by OR. Filter values are case-sensitive.</p>\n         <p>\n            <code>FromEmailAddress</code>, <code>Destination</code>, and <code>Subject</code> filters support partial match.\n            A partial match is performed by using the <code>*</code> wildcard character placed at the beginning (suffix match), the end (prefix match)\n            or both ends of the string (contains match).\n            In order to match the literal characters <code>*</code> or <code>\\</code>, they must be escaped using the <code>\\</code> character.\n            If no wildcard character is present, an exact match is performed.\n        </p>",
                "type": "object",
                "properties": {
                    "FromEmailAddress": {
                        "description": "<p>The from address used to send the message.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "Destination": {
                        "description": "<p>The recipient's email address.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "Subject": {
                        "description": "<p>The subject line of the message.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "Isp": {
                        "description": "<p>The recipient's ISP (e.g., <code>Gmail</code>, <code>Yahoo</code>,\n            etc.).</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "LastDeliveryEvent": {
                        "description": "<p>\n            The last delivery-related event for the email, where the ordering is as follows:\n            <code>SEND</code> < <code>BOUNCE</code> < <code>DELIVERY</code> < <code>COMPLAINT</code>.\n        </p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeliveryEventType"
                        }
                    },
                    "LastEngagementEvent": {
                        "description": "<p>\n            The last engagement-related event for the email, where the ordering is as follows:\n            <code>OPEN</code> < <code>CLICK</code>.\n        </p>\n         <p>\n            Engagement events are only available if <a href=\"https://docs.aws.amazon.com/ses/latest/dg/vdm-settings.html\">Engagement tracking</a>\n            is enabled.\n        </p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EngagementEventType"
                        }
                    }
                }
            },
            "DeliveryEventType": {
                "enum": [
                    "COMPLAINT",
                    "DELIVERY",
                    "PERMANENT_BOUNCE",
                    "SEND",
                    "TRANSIENT_BOUNCE",
                    "UNDETERMINED_BOUNCE"
                ],
                "type": "string"
            },
            "EngagementEventType": {
                "enum": [
                    "CLICK",
                    "OPEN"
                ],
                "type": "string"
            },
            "FailureInfo": {
                "description": "<p>An object that contains the failure details about a job.</p>",
                "type": "object",
                "properties": {
                    "FailedRecordsS3Url": {
                        "description": "<p>An Amazon S3 pre-signed URL that contains all the failed records and related information.</p>",
                        "type": "string"
                    },
                    "ErrorMessage": {
                        "description": "<p>A message about why the job failed.</p>",
                        "type": "string"
                    }
                }
            },
            "ExportStatistics": {
                "description": "<p>Statistics about the execution of an export job.</p>",
                "type": "object",
                "properties": {
                    "ProcessedRecordsCount": {
                        "description": "<p>The number of records that were processed to generate the final export file.</p>",
                        "type": "integer"
                    },
                    "ExportedRecordsCount": {
                        "description": "<p>The number of records that were exported to the final export file.</p>\n         <p>This value might not be available for all export source types</p>",
                        "type": "integer"
                    }
                }
            },
            "GetExportJobResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object",
                "properties": {
                    "JobId": {
                        "description": "<p>The export job ID.</p>",
                        "type": "string"
                    },
                    "ExportSourceType": {
                        "description": "<p>The type of source of the export job.</p>",
                        "enum": [
                            "MESSAGE_INSIGHTS",
                            "METRICS_DATA"
                        ],
                        "type": "string"
                    },
                    "JobStatus": {
                        "description": "<p>The status of the export job.</p>",
                        "enum": [
                            "CANCELLED",
                            "COMPLETED",
                            "CREATED",
                            "FAILED",
                            "PROCESSING"
                        ],
                        "type": "string"
                    },
                    "ExportDestination": {
                        "description": "<p>The destination of the export job.</p>",
                        "$ref": "#/components/schemas/ExportDestination"
                    },
                    "ExportDataSource": {
                        "description": "<p>The data source of the export job.</p>",
                        "$ref": "#/components/schemas/ExportDataSource"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The timestamp of when the export job was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "CompletedTimestamp": {
                        "description": "<p>The timestamp of when the export job was completed.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "FailureInfo": {
                        "description": "<p>The failure details about an export job.</p>",
                        "$ref": "#/components/schemas/FailureInfo"
                    },
                    "Statistics": {
                        "description": "<p>The statistics about the export job.</p>",
                        "$ref": "#/components/schemas/ExportStatistics"
                    }
                }
            },
            "ImportDestination": {
                "description": "<p>An object that contains details about the resource destination the import job is going\n            to target.</p>",
                "type": "object",
                "properties": {
                    "SuppressionListDestination": {
                        "description": "<p>An object that contains the action of the import job towards suppression list.</p>",
                        "$ref": "#/components/schemas/SuppressionListDestination"
                    },
                    "ContactListDestination": {
                        "description": "<p>An object that contains the action of the import job towards a contact list.</p>",
                        "$ref": "#/components/schemas/ContactListDestination"
                    }
                }
            },
            "SuppressionListDestination": {
                "description": "<p>An object that contains details about the action of suppression list.</p>",
                "type": "object",
                "properties": {
                    "SuppressionListImportAction": {
                        "description": "<p>The type of action to perform on the address. The following are possible values:</p>\n         <ul>\n            <li>\n               <p>PUT: add the addresses to the suppression list. If the record already exists,\n                    it will override it with the new value.</p>\n            </li>\n            <li>\n               <p>DELETE: remove the addresses from the suppression list.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DELETE",
                            "PUT"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "SuppressionListImportAction"
                ]
            },
            "ContactListDestination": {
                "description": "<p>An object that contains details about the action of a contact list.</p>",
                "type": "object",
                "properties": {
                    "ContactListName": {
                        "description": "<p>The name of the contact list.</p>",
                        "type": "string"
                    },
                    "ContactListImportAction": {
                        "description": "<p>>The type of action to perform on the addresses. The following are the possible\n            values:</p>\n         <ul>\n            <li>\n               <p>PUT: add the addresses to the contact list. If the record already exists, it\n                    will override it with the new value.</p>\n            </li>\n            <li>\n               <p>DELETE: remove the addresses from the contact list.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DELETE",
                            "PUT"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "ContactListImportAction",
                    "ContactListName"
                ]
            },
            "ImportDataSource": {
                "description": "<p>An object that contains details about the data source of the import job.</p>",
                "type": "object",
                "properties": {
                    "S3Url": {
                        "description": "<p>An Amazon S3 URL in the format\n                s3://<i><bucket_name></i>/<i><object></i>.</p>",
                        "type": "string"
                    },
                    "DataFormat": {
                        "description": "<p>The data format of the import job's data source.</p>",
                        "enum": [
                            "CSV",
                            "JSON"
                        ],
                        "type": "string"
                    }
                },
                "required": [
                    "DataFormat",
                    "S3Url"
                ]
            },
            "GetImportJobResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object",
                "properties": {
                    "JobId": {
                        "description": "<p>A string that represents the import job ID.</p>",
                        "type": "string"
                    },
                    "ImportDestination": {
                        "description": "<p>The destination of the import job.</p>",
                        "$ref": "#/components/schemas/ImportDestination"
                    },
                    "ImportDataSource": {
                        "description": "<p>The data source of the import job.</p>",
                        "$ref": "#/components/schemas/ImportDataSource"
                    },
                    "FailureInfo": {
                        "description": "<p>The failure details about an import job.</p>",
                        "$ref": "#/components/schemas/FailureInfo"
                    },
                    "JobStatus": {
                        "description": "<p>The status of the import job.</p>",
                        "enum": [
                            "CANCELLED",
                            "COMPLETED",
                            "CREATED",
                            "FAILED",
                            "PROCESSING"
                        ],
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The time stamp of when the import job was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "CompletedTimestamp": {
                        "description": "<p>The time stamp of when the import job was completed.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "ProcessedRecordsCount": {
                        "description": "<p>The current number of records processed.</p>",
                        "type": "integer"
                    },
                    "FailedRecordsCount": {
                        "description": "<p>The number of records that failed processing because of invalid input or other\n            reasons.</p>",
                        "type": "integer"
                    }
                }
            },
            "MessageTag": {
                "description": "<p>Contains the name and value of a tag that you apply to an email. You can use message\n            tags when you publish email sending events.\n            </p>",
                "type": "object",
                "properties": {
                    "Name": {
                        "description": "<p>The name of the message tag. The message tag name has to meet the following\n            criteria:</p>\n         <ul>\n            <li>\n               <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9),\n                    underscores (_), or dashes (-).</p>\n            </li>\n            <li>\n               <p>It can contain no more than 256 characters.</p>\n            </li>\n         </ul>",
                        "type": "string"
                    },
                    "Value": {
                        "description": "<p>The value of the message tag. The message tag value has to meet the following\n            criteria:</p>\n         <ul>\n            <li>\n               <p>It can only contain ASCII letters (a–z, A–Z), numbers (0–9),\n                    underscores (_), or dashes (-).</p>\n            </li>\n            <li>\n               <p>It can contain no more than 256 characters.</p>\n            </li>\n         </ul>",
                        "type": "string"
                    }
                },
                "required": [
                    "Name",
                    "Value"
                ]
            },
            "EmailInsights": {
                "description": "<p>An email's insights contain metadata and delivery information about a specific email.</p>",
                "type": "object",
                "properties": {
                    "Destination": {
                        "description": "<p>The recipient of the email.</p>",
                        "type": "string"
                    },
                    "Isp": {
                        "description": "<p>The recipient's ISP (e.g., <code>Gmail</code>, <code>Yahoo</code>,\n        etc.).</p>",
                        "type": "string"
                    },
                    "Events": {
                        "description": "<p>A list of events associated with the sent email.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InsightsEvent"
                        }
                    }
                }
            },
            "InsightsEvent": {
                "description": "<p>An object containing details about a specific event.</p>",
                "type": "object",
                "properties": {
                    "Timestamp": {
                        "description": "<p>The timestamp of the event.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "Type": {
                        "description": "<p>The type of event:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>SEND</code> - The send request was successful and SES will\n                    attempt to deliver the message to the recipient’s mail server. (If account-level\n                    or global suppression is being used, SES will still count it as a send,\n                    but delivery is suppressed.)\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>DELIVERY</code> - SES successfully delivered the email to the\n                    recipient's mail server. Excludes deliveries to the mailbox simulator,\n                    and those from emails addressed to more than one recipient.\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>BOUNCE</code> - Feedback received for delivery failures. Additional details about the bounce are provided in the <code>Details</code> object.\n                    Excludes bounces from the mailbox simulator, and those from emails addressed to more than one recipient.\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>COMPLAINT</code> - Complaint received for the email. Additional details about the complaint are provided in the <code>Details</code> object.\n                    This excludes complaints from the mailbox simulator, those originating from\n                    your account-level suppression list (if enabled), and those from emails addressed\n                    to more than one recipient.\n                </p>\n            </li>\n            <li>\n               <p>\n                  <code>OPEN</code> - Open event for emails including open trackers.\n                    Excludes opens for emails addressed to more than one recipient.</p>\n            </li>\n            <li>\n               <p>\n                  <code>CLICK</code> - Click event for emails including wrapped links.\n                    Excludes clicks for emails addressed to more than one recipient.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "BOUNCE",
                            "CLICK",
                            "COMPLAINT",
                            "DELIVERY",
                            "DELIVERY_DELAY",
                            "OPEN",
                            "REJECT",
                            "RENDERING_FAILURE",
                            "SEND",
                            "SUBSCRIPTION"
                        ],
                        "type": "string"
                    },
                    "Details": {
                        "description": "<p>Details about bounce or complaint events.</p>",
                        "$ref": "#/components/schemas/EventDetails"
                    }
                }
            },
            "EventDetails": {
                "description": "<p>\n            Contains a <code>Bounce</code> object if the event type is <code>BOUNCE</code>.\n            Contains a <code>Complaint</code> object if the event type is <code>COMPLAINT</code>.\n        </p>",
                "type": "object",
                "properties": {
                    "Bounce": {
                        "description": "<p>Information about a <code>Bounce</code> event.</p>",
                        "$ref": "#/components/schemas/Bounce"
                    },
                    "Complaint": {
                        "description": "<p>Information about a <code>Complaint</code> event.</p>",
                        "$ref": "#/components/schemas/Complaint"
                    }
                }
            },
            "Bounce": {
                "description": "<p>Information about a <code>Bounce</code> event.</p>",
                "type": "object",
                "properties": {
                    "BounceType": {
                        "description": "<p>The type of the bounce, as determined by SES.\n            Can be one of <code>UNDETERMINED</code>, <code>TRANSIENT</code>, or <code>PERMANENT</code>\n         </p>",
                        "enum": [
                            "PERMANENT",
                            "TRANSIENT",
                            "UNDETERMINED"
                        ],
                        "type": "string"
                    },
                    "BounceSubType": {
                        "description": "<p>The subtype of the bounce, as determined by SES.</p>",
                        "type": "string"
                    },
                    "DiagnosticCode": {
                        "description": "<p>The status code issued by the reporting Message Transfer Authority (MTA).\n            This field only appears if a delivery status notification (DSN) was attached to the bounce\n            and the <code>Diagnostic-Code</code> was provided in the DSN.\n        </p>",
                        "type": "string"
                    }
                }
            },
            "Complaint": {
                "description": "<p>Information about a <code>Complaint</code> event.</p>",
                "type": "object",
                "properties": {
                    "ComplaintSubType": {
                        "description": "<p>\n            Can either be <code>null</code> or <code>OnAccountSuppressionList</code>.\n            If the value is <code>OnAccountSuppressionList</code>, SES accepted the message,\n            but didn't attempt to send it because it was on the account-level suppression list.\n        </p>",
                        "type": "string"
                    },
                    "ComplaintFeedbackType": {
                        "description": "<p>\n            The value of the <code>Feedback-Type</code> field from the feedback report received from the ISP.\n        </p>",
                        "type": "string"
                    }
                }
            },
            "GetMessageInsightsResponse": {
                "description": "<p>Information about a message.</p>",
                "type": "object",
                "properties": {
                    "MessageId": {
                        "description": "<p>A unique identifier for the message.</p>",
                        "type": "string"
                    },
                    "FromEmailAddress": {
                        "description": "<p>The from address used to send the message.</p>",
                        "type": "string"
                    },
                    "Subject": {
                        "description": "<p>The subject line of the message.</p>",
                        "type": "string"
                    },
                    "EmailTags": {
                        "description": "<p>\n            A list of tags, in the form of name/value pairs, that were applied to the email you sent, along with Amazon SES\n            <a href=\"https://docs.aws.amazon.com/ses/latest/dg/monitor-using-event-publishing.html\">Auto-Tags</a>.\n        </p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MessageTag"
                        }
                    },
                    "Insights": {
                        "description": "<p>A set of insights associated with the message.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailInsights"
                        }
                    }
                }
            },
            "Route": {
                "description": "<p>An object which contains an AWS-Region and routing status.</p>",
                "type": "object",
                "properties": {
                    "Region": {
                        "description": "<p>The name of an AWS-Region.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "Region"
                ]
            },
            "GetMultiRegionEndpointResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object",
                "properties": {
                    "EndpointName": {
                        "description": "<p>The name of the multi-region endpoint (global-endpoint).</p>",
                        "type": "string"
                    },
                    "EndpointId": {
                        "description": "<p>The ID of the multi-region endpoint (global-endpoint).</p>",
                        "type": "string"
                    },
                    "Routes": {
                        "description": "<p>Contains routes information for the multi-region endpoint (global-endpoint).</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Route"
                        }
                    },
                    "Status": {
                        "description": "<p>The status of the multi-region endpoint (global-endpoint).</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CREATING</code> – The resource is being provisioned.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READY</code> – The resource is ready to use.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAILED</code> – The resource failed to be provisioned.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DELETING</code> – The resource is being deleted as requested.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "CREATING",
                            "DELETING",
                            "FAILED",
                            "READY"
                        ],
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The time stamp of when the multi-region endpoint (global-endpoint) was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastUpdatedTimestamp": {
                        "description": "<p>The time stamp of when the multi-region endpoint (global-endpoint) was last updated.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ReputationEntity": {
                "description": "<p>An object that contains information about a reputation entity, including its\n            reference, type, policy, status records, and reputation impact.</p>",
                "type": "object",
                "properties": {
                    "ReputationEntityReference": {
                        "description": "<p>The unique identifier for the reputation entity. For resource-type entities,\n            this is the Amazon Resource Name (ARN) of the resource.</p>",
                        "type": "string"
                    },
                    "ReputationEntityType": {
                        "description": "<p>The type of reputation entity. Currently, only <code>RESOURCE</code> type entities are supported.</p>",
                        "const": "RESOURCE",
                        "type": "string"
                    },
                    "ReputationManagementPolicy": {
                        "description": "<p>The Amazon Resource Name (ARN) of the reputation management policy applied to\n            this entity. This is an Amazon Web Services Amazon SES-managed policy.</p>",
                        "type": "string"
                    },
                    "CustomerManagedStatus": {
                        "description": "<p>The customer-managed status record for this reputation entity, including the\n            current status, cause description, and last updated timestamp.</p>",
                        "$ref": "#/components/schemas/StatusRecord"
                    },
                    "AwsSesManagedStatus": {
                        "description": "<p>The Amazon Web Services Amazon SES-managed status record for this reputation entity, including the\n            current status, cause description, and last updated timestamp.</p>",
                        "$ref": "#/components/schemas/StatusRecord"
                    },
                    "SendingStatusAggregate": {
                        "description": "<p>The aggregate sending status that determines whether the entity is allowed to\n            send emails. This status is derived from both the customer-managed and Amazon Web Services Amazon SES-managed\n            statuses. If either the customer-managed status or the Amazon Web Services Amazon SES-managed status is\n            <code>DISABLED</code>, the aggregate status will be <code>DISABLED</code> and the entity\n            will not be allowed to send emails. When the customer-managed status is set to\n            <code>REINSTATED</code>, the entity can continue sending even if there are active\n            reputation findings, provided the Amazon Web Services Amazon SES-managed status also permits sending.\n            The entity can only send emails when both statuses permit sending.</p>",
                        "enum": [
                            "DISABLED",
                            "ENABLED",
                            "REINSTATED"
                        ],
                        "type": "string"
                    },
                    "ReputationImpact": {
                        "description": "<p>The reputation impact level for this entity, representing the highest impact\n            reputation finding currently active. Reputation findings can be retrieved using\n            the <code>ListRecommendations</code> operation.</p>",
                        "enum": [
                            "HIGH",
                            "LOW"
                        ],
                        "type": "string"
                    }
                }
            },
            "StatusRecord": {
                "description": "<p>An object that contains status information for a reputation entity, including\n            the current status, cause description, and timestamp.</p>",
                "type": "object",
                "properties": {
                    "Status": {
                        "description": "<p>The current sending status. This can be one of the following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>ENABLED</code> – Sending is allowed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DISABLED</code> – Sending is prevented.</p>\n            </li>\n            <li>\n               <p>\n                  <code>REINSTATED</code> – Sending is allowed even with active reputation findings.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "DISABLED",
                            "ENABLED",
                            "REINSTATED"
                        ],
                        "type": "string"
                    },
                    "Cause": {
                        "description": "<p>A description of the reason for the current status, or null if no specific\n            cause is available.</p>",
                        "type": "string"
                    },
                    "LastUpdatedTimestamp": {
                        "description": "<p>The timestamp when this status was last updated.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "GetReputationEntityResponse": {
                "description": "<p>Information about the requested reputation entity.</p>",
                "type": "object",
                "properties": {
                    "ReputationEntity": {
                        "description": "<p>The reputation entity information, including status records, policy configuration,\n            and reputation impact.</p>",
                        "$ref": "#/components/schemas/ReputationEntity"
                    }
                }
            },
            "SuppressedDestination": {
                "description": "<p>An object that contains information about an email address that is on the suppression\n            list for your account.</p>",
                "type": "object",
                "properties": {
                    "EmailAddress": {
                        "description": "<p>The email address that is on the suppression list for your account.</p>",
                        "type": "string"
                    },
                    "Reason": {
                        "description": "<p>The reason that the address was added to the suppression list for your account.</p>",
                        "enum": [
                            "BOUNCE",
                            "COMPLAINT"
                        ],
                        "type": "string"
                    },
                    "LastUpdateTime": {
                        "description": "<p>The date and time when the suppressed destination was last updated, shown in Unix time\n            format.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "Attributes": {
                        "description": "<p>An optional value that can contain additional information about the reasons that the\n            address was added to the suppression list for your account.</p>",
                        "$ref": "#/components/schemas/SuppressedDestinationAttributes"
                    }
                },
                "required": [
                    "EmailAddress",
                    "LastUpdateTime",
                    "Reason"
                ]
            },
            "SuppressedDestinationAttributes": {
                "description": "<p>An object that contains additional attributes that are related an email address that\n            is on the suppression list for your account.</p>",
                "type": "object",
                "properties": {
                    "MessageId": {
                        "description": "<p>The unique identifier of the email message that caused the email address to be added\n            to the suppression list for your account.</p>",
                        "type": "string"
                    },
                    "FeedbackId": {
                        "description": "<p>A unique identifier that's generated when an email address is added to the suppression\n            list for your account.</p>",
                        "type": "string"
                    }
                }
            },
            "GetSuppressedDestinationResponse": {
                "description": "<p>Information about the suppressed email address.</p>",
                "type": "object",
                "properties": {
                    "SuppressedDestination": {
                        "description": "<p>An object containing information about the suppressed email address.</p>",
                        "$ref": "#/components/schemas/SuppressedDestination"
                    }
                },
                "required": [
                    "SuppressedDestination"
                ]
            },
            "Tenant": {
                "description": "<p>A structure that contains details about a tenant.</p>",
                "type": "object",
                "properties": {
                    "TenantName": {
                        "description": "<p>The name of the tenant.</p>",
                        "type": "string"
                    },
                    "TenantId": {
                        "description": "<p>A unique identifier for the tenant.</p>",
                        "type": "string"
                    },
                    "TenantArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the tenant.</p>",
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The date and time when the tenant was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "Tags": {
                        "description": "<p>An array of objects that define the tags (keys and values) associated with the tenant.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    },
                    "SendingStatus": {
                        "description": "<p>The status of sending capability for the tenant.</p>",
                        "enum": [
                            "DISABLED",
                            "ENABLED",
                            "REINSTATED"
                        ],
                        "type": "string"
                    }
                }
            },
            "GetTenantResponse": {
                "description": "<p>Information about a specific tenant.</p>",
                "type": "object",
                "properties": {
                    "Tenant": {
                        "description": "<p>A structure that contains details about the tenant.</p>",
                        "$ref": "#/components/schemas/Tenant"
                    }
                }
            },
            "ListConfigurationSetsResponse": {
                "description": "<p>A list of configuration sets in your Amazon SES account in the current Amazon Web Services Region.</p>",
                "type": "object",
                "properties": {
                    "ConfigurationSets": {
                        "description": "<p>An array that contains all of the configuration sets in your Amazon SES account in the\n            current Amazon Web Services Region.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional configuration sets to list. To view\n            additional configuration sets, issue another request to\n                <code>ListConfigurationSets</code>, and pass this token in the\n                <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "ContactList": {
                "description": "<p>A list that contains contacts that have subscribed to a particular topic or\n            topics.</p>",
                "type": "object",
                "properties": {
                    "ContactListName": {
                        "description": "<p>The name of the contact list.</p>",
                        "type": "string"
                    },
                    "LastUpdatedTimestamp": {
                        "description": "<p>A timestamp noting the last time the contact list was updated.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ListContactListsResponse": {
                "type": "object",
                "properties": {
                    "ContactLists": {
                        "description": "<p>The available contact lists.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactList"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A string token indicating that there might be additional contact lists available to be\n            listed. Copy this token to a subsequent call to <code>ListContactLists</code> with the\n            same parameters to retrieve the next page of contact lists.</p>",
                        "type": "string"
                    }
                }
            },
            "Contact": {
                "description": "<p>A contact is the end-user who is receiving the email.</p>",
                "type": "object",
                "properties": {
                    "EmailAddress": {
                        "description": "<p>The contact's email address.</p>",
                        "type": "string"
                    },
                    "TopicPreferences": {
                        "description": "<p>The contact's preference for being opted-in to or opted-out of a topic.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopicPreference"
                        }
                    },
                    "TopicDefaultPreferences": {
                        "description": "<p>The default topic preferences applied to the contact.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TopicPreference"
                        }
                    },
                    "UnsubscribeAll": {
                        "description": "<p>A boolean value status noting if the contact is unsubscribed from all contact list\n            topics.</p>",
                        "type": "boolean"
                    },
                    "LastUpdatedTimestamp": {
                        "description": "<p>A timestamp noting the last time the contact's information was updated.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ListContactsResponse": {
                "type": "object",
                "properties": {
                    "Contacts": {
                        "description": "<p>The contacts present in a specific contact list.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Contact"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A string token indicating that there might be additional contacts available to be\n            listed. Copy this token to a subsequent call to <code>ListContacts</code> with the same\n            parameters to retrieve the next page of contacts.</p>",
                        "type": "string"
                    }
                }
            },
            "CustomVerificationEmailTemplateMetadata": {
                "description": "<p>Contains information about a custom verification email template.</p>",
                "type": "object",
                "properties": {
                    "TemplateName": {
                        "description": "<p>The name of the custom verification email template.</p>",
                        "type": "string"
                    },
                    "FromEmailAddress": {
                        "description": "<p>The email address that the custom verification email is sent from.</p>",
                        "type": "string"
                    },
                    "TemplateSubject": {
                        "description": "<p>The subject line of the custom verification email.</p>",
                        "type": "string"
                    },
                    "SuccessRedirectionURL": {
                        "description": "<p>The URL that the recipient of the verification email is sent to if his or her address\n            is successfully verified.</p>",
                        "type": "string"
                    },
                    "FailureRedirectionURL": {
                        "description": "<p>The URL that the recipient of the verification email is sent to if his or her address\n            is not successfully verified.</p>",
                        "type": "string"
                    }
                }
            },
            "ListCustomVerificationEmailTemplatesResponse": {
                "description": "<p>The following elements are returned by the service.</p>",
                "type": "object",
                "properties": {
                    "CustomVerificationEmailTemplates": {
                        "description": "<p>A list of the custom verification email templates that exist in your account.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CustomVerificationEmailTemplateMetadata"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token indicating that there are additional custom verification email templates\n            available to be listed. Pass this token to a subsequent call to\n                <code>ListCustomVerificationEmailTemplates</code> to retrieve the next 50 custom\n            verification email templates.</p>",
                        "type": "string"
                    }
                }
            },
            "ListDedicatedIpPoolsResponse": {
                "description": "<p>A list of dedicated IP pools.</p>",
                "type": "object",
                "properties": {
                    "DedicatedIpPools": {
                        "description": "<p>A list of all of the dedicated IP pools that are associated with your Amazon Web Services account in\n            the current Region.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional IP pools to list. To view additional\n            IP pools, issue another request to <code>ListDedicatedIpPools</code>, passing this token\n            in the <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "ListDeliverabilityTestReportsResponse": {
                "description": "<p>A list of the predictive inbox placement test reports that are available for your account, regardless of\n            whether or not those tests are complete.</p>",
                "type": "object",
                "properties": {
                    "DeliverabilityTestReports": {
                        "description": "<p>An object that contains a lists of predictive inbox placement tests that you've performed.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DeliverabilityTestReport"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional predictive inbox placement tests to list. To view additional\n            predictive inbox placement tests, issue another request to <code>ListDeliverabilityTestReports</code>, and pass\n            this token in the <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "DeliverabilityTestReports"
                ]
            },
            "ListDomainDeliverabilityCampaignsResponse": {
                "description": "<p>An array of objects that provide deliverability data for all the campaigns that used a\n            specific domain to send email during a specified time range. This data is available for\n            a domain only if you enabled the Deliverability dashboard for the domain.</p>",
                "type": "object",
                "properties": {
                    "DomainDeliverabilityCampaigns": {
                        "description": "<p>An array of responses, one for each campaign that used the domain to send email during\n            the specified time range.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DomainDeliverabilityCampaign"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that’s returned from a previous call to the\n                <code>ListDomainDeliverabilityCampaigns</code> operation. This token indicates the\n            position of the campaign in the list of campaigns.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "DomainDeliverabilityCampaigns"
                ]
            },
            "IdentityInfo": {
                "description": "<p>Information about an email identity.</p>",
                "type": "object",
                "properties": {
                    "IdentityType": {
                        "description": "<p>The email identity type. Note: the <code>MANAGED_DOMAIN</code> type is not supported\n            for email identity types.</p>",
                        "enum": [
                            "DOMAIN",
                            "EMAIL_ADDRESS",
                            "MANAGED_DOMAIN"
                        ],
                        "type": "string"
                    },
                    "IdentityName": {
                        "description": "<p>The address or domain of the identity.</p>",
                        "type": "string"
                    },
                    "SendingEnabled": {
                        "description": "<p>Indicates whether or not you can send email from the identity.</p>\n         <p>An <i>identity</i> is an email address or domain that you send email\n            from. Before you can send email from an identity, you have to demostrate that you own\n            the identity, and that you authorize Amazon SES to send email from that identity.</p>",
                        "type": "boolean"
                    },
                    "VerificationStatus": {
                        "description": "<p>The verification status of the identity. The status can be one of the\n            following:</p>\n         <ul>\n            <li>\n               <p>\n                  <code>PENDING</code> – The verification process was initiated, but Amazon SES\n                    hasn't yet been able to verify the identity.</p>\n            </li>\n            <li>\n               <p>\n                  <code>SUCCESS</code> – The verification process completed\n                    successfully.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAILED</code> – The verification process failed.</p>\n            </li>\n            <li>\n               <p>\n                  <code>TEMPORARY_FAILURE</code> – A temporary issue is preventing Amazon SES\n                    from determining the verification status of the identity.</p>\n            </li>\n            <li>\n               <p>\n                  <code>NOT_STARTED</code> – The verification process hasn't been\n                    initiated for the identity.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "FAILED",
                            "NOT_STARTED",
                            "PENDING",
                            "SUCCESS",
                            "TEMPORARY_FAILURE"
                        ],
                        "type": "string"
                    }
                }
            },
            "ListEmailIdentitiesResponse": {
                "description": "<p>A list of all of the identities that you've attempted to verify, regardless of whether\n            or not those identities were successfully verified.</p>",
                "type": "object",
                "properties": {
                    "EmailIdentities": {
                        "description": "<p>An array that includes all of the email identities associated with your Amazon Web Services\n            account.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityInfo"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional configuration sets to list. To view\n            additional configuration sets, issue another request to\n            <code>ListEmailIdentities</code>, and pass this token in the <code>NextToken</code>\n            parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "EmailTemplateMetadata": {
                "description": "<p>Contains information about an email template.</p>",
                "type": "object",
                "properties": {
                    "TemplateName": {
                        "description": "<p>The name of the template.</p>",
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The time and date the template was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ListEmailTemplatesResponse": {
                "description": "<p>The following elements are returned by the service.</p>",
                "type": "object",
                "properties": {
                    "TemplatesMetadata": {
                        "description": "<p>An array the contains the name and creation time stamp for each template in your Amazon SES\n            account.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EmailTemplateMetadata"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token indicating that there are additional email templates available to be listed.\n            Pass this token to a subsequent <code>ListEmailTemplates</code> call to retrieve the\n            next 10 email templates.</p>",
                        "type": "string"
                    }
                }
            },
            "ExportJobSummary": {
                "description": "<p>A summary of the export job.</p>",
                "type": "object",
                "properties": {
                    "JobId": {
                        "description": "<p>The export job ID.</p>",
                        "type": "string"
                    },
                    "ExportSourceType": {
                        "description": "<p>The source type of the export job.</p>",
                        "enum": [
                            "MESSAGE_INSIGHTS",
                            "METRICS_DATA"
                        ],
                        "type": "string"
                    },
                    "JobStatus": {
                        "description": "<p>The status of the export job.</p>",
                        "enum": [
                            "CANCELLED",
                            "COMPLETED",
                            "CREATED",
                            "FAILED",
                            "PROCESSING"
                        ],
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The timestamp of when the export job was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "CompletedTimestamp": {
                        "description": "<p>The timestamp of when the export job was completed.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ListExportJobsResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object",
                "properties": {
                    "ExportJobs": {
                        "description": "<p>A list of the export job summaries.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExportJobSummary"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A string token indicating that there might be additional export jobs available to be\n            listed. Use this token to a subsequent call to <code>ListExportJobs</code> with the same\n            parameters to retrieve the next page of export jobs.</p>",
                        "type": "string"
                    }
                }
            },
            "ImportJobSummary": {
                "description": "<p>A summary of the import job.</p>",
                "type": "object",
                "properties": {
                    "JobId": {
                        "description": "<p>A string that represents a job ID.</p>",
                        "type": "string"
                    },
                    "ImportDestination": {
                        "description": "<p>An object that contains details about the resource destination the import job is going\n            to target.</p>",
                        "$ref": "#/components/schemas/ImportDestination"
                    },
                    "JobStatus": {
                        "description": "<p>The status of a job.</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CREATED</code> – Job has just been created.</p>\n            </li>\n            <li>\n               <p>\n                  <code>PROCESSING</code> – Job is processing.</p>\n            </li>\n            <li>\n               <p>\n                  <code>ERROR</code> – An error occurred during processing.</p>\n            </li>\n            <li>\n               <p>\n                  <code>COMPLETED</code> – Job has completed processing successfully.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "CANCELLED",
                            "COMPLETED",
                            "CREATED",
                            "FAILED",
                            "PROCESSING"
                        ],
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The date and time when the import job was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "ProcessedRecordsCount": {
                        "description": "<p>The current number of records processed.</p>",
                        "type": "integer"
                    },
                    "FailedRecordsCount": {
                        "description": "<p>The number of records that failed processing because of invalid input or other\n            reasons.</p>",
                        "type": "integer"
                    }
                }
            },
            "ListImportJobsResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object",
                "properties": {
                    "ImportJobs": {
                        "description": "<p>A list of the import job summaries.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ImportJobSummary"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A string token indicating that there might be additional import jobs available to be\n            listed. Copy this token to a subsequent call to <code>ListImportJobs</code> with the\n            same parameters to retrieve the next page of import jobs.</p>",
                        "type": "string"
                    }
                }
            },
            "MultiRegionEndpoint": {
                "description": "<p>An object that contains multi-region endpoint (global-endpoint) properties.</p>",
                "type": "object",
                "properties": {
                    "EndpointName": {
                        "description": "<p>The name of the multi-region endpoint (global-endpoint).</p>",
                        "type": "string"
                    },
                    "Status": {
                        "description": "<p>The status of the multi-region endpoint (global-endpoint).</p>\n         <ul>\n            <li>\n               <p>\n                  <code>CREATING</code> – The resource is being provisioned.</p>\n            </li>\n            <li>\n               <p>\n                  <code>READY</code> – The resource is ready to use.</p>\n            </li>\n            <li>\n               <p>\n                  <code>FAILED</code> – The resource failed to be provisioned.</p>\n            </li>\n            <li>\n               <p>\n                  <code>DELETING</code> – The resource is being deleted as requested.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "CREATING",
                            "DELETING",
                            "FAILED",
                            "READY"
                        ],
                        "type": "string"
                    },
                    "EndpointId": {
                        "description": "<p>The ID of the multi-region endpoint (global-endpoint).</p>",
                        "type": "string"
                    },
                    "Regions": {
                        "description": "<p>Primary and secondary regions between which multi-region endpoint splits sending traffic.</p>",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The time stamp of when the multi-region endpoint (global-endpoint) was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastUpdatedTimestamp": {
                        "description": "<p>The time stamp of when the multi-region endpoint (global-endpoint) was last updated.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ListMultiRegionEndpointsResponse": {
                "description": "<p>The following elements are returned by the service.</p>",
                "type": "object",
                "properties": {
                    "MultiRegionEndpoints": {
                        "description": "<p>An array that contains key multi-region endpoint (global-endpoint) properties.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MultiRegionEndpoint"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token indicating that there are additional multi-region endpoints (global-endpoints) available to be listed.\n            Pass this token to a subsequent <code>ListMultiRegionEndpoints</code> call to retrieve the\n            next page.</p>",
                        "type": "string"
                    }
                }
            },
            "Recommendation": {
                "description": "<p>A recommendation generated for your account.</p>",
                "type": "object",
                "properties": {
                    "ResourceArn": {
                        "description": "<p>The resource affected by the recommendation,\n            with values like <code>arn:aws:ses:us-east-1:123456789012:identity/example.com</code>.</p>",
                        "type": "string"
                    },
                    "Type": {
                        "description": "<p>The recommendation type, with values like <code>DKIM</code>,\n            <code>SPF</code>, <code>DMARC</code>, <code>BIMI</code>, or <code>COMPLAINT</code>.</p>",
                        "enum": [
                            "BIMI",
                            "BOUNCE",
                            "COMPLAINT",
                            "DKIM",
                            "DMARC",
                            "FEEDBACK_3P",
                            "IP_LISTING",
                            "SPF"
                        ],
                        "type": "string"
                    },
                    "Description": {
                        "description": "<p>The recommendation description / disambiguator - e.g. <code>DKIM1</code> and <code>DKIM2</code>\n              are different recommendations about your DKIM setup.</p>",
                        "type": "string"
                    },
                    "Status": {
                        "description": "<p>The recommendation status, with values like\n            <code>OPEN</code> or <code>FIXED</code>.</p>",
                        "enum": [
                            "FIXED",
                            "OPEN"
                        ],
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The first time this issue was encountered and the recommendation was generated.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "LastUpdatedTimestamp": {
                        "description": "<p>The last time the recommendation was updated.</p>",
                        "type": "string",
                        "format": "date-time"
                    },
                    "Impact": {
                        "description": "<p>The recommendation impact, with values like\n            <code>HIGH</code> or <code>LOW</code>.</p>",
                        "enum": [
                            "HIGH",
                            "LOW"
                        ],
                        "type": "string"
                    }
                }
            },
            "ListRecommendationsResponse": {
                "description": "<p>Contains the response to your request to retrieve the list of recommendations for your account.</p>",
                "type": "object",
                "properties": {
                    "Recommendations": {
                        "description": "<p>The recommendations applicable to your account.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Recommendation"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A string token indicating that there might be additional recommendations available to be\n            listed. Use the token provided in the <code>ListRecommendationsResponse</code> to use in the\n            subsequent call to <code>ListRecommendations</code> with the same parameters to retrieve the\n            next page of recommendations.</p>",
                        "type": "string"
                    }
                }
            },
            "ListReputationEntitiesResponse": {
                "description": "<p>A list of reputation entities in your account.</p>",
                "type": "object",
                "properties": {
                    "ReputationEntities": {
                        "description": "<p>An array that contains information about the reputation entities in your account.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReputationEntity"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional reputation entities to list.\n            To view additional reputation entities, issue another request to <code>ListReputationEntities</code>,\n            and pass this token in the <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "ResourceTenantMetadata": {
                "description": "<p>A structure that contains information about a tenant associated with a resource.</p>",
                "type": "object",
                "properties": {
                    "TenantName": {
                        "description": "<p>The name of the tenant associated with the resource.</p>",
                        "type": "string"
                    },
                    "TenantId": {
                        "description": "<p>A unique identifier for the tenant associated with the resource.</p>",
                        "type": "string"
                    },
                    "ResourceArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the resource.</p>",
                        "type": "string"
                    },
                    "AssociatedTimestamp": {
                        "description": "<p>The date and time when the resource was associated with the tenant.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ListResourceTenantsResponse": {
                "description": "<p>Information about tenants associated with a specific resource.</p>",
                "type": "object",
                "properties": {
                    "ResourceTenants": {
                        "description": "<p>An array that contains information about each tenant associated with the resource.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ResourceTenantMetadata"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional tenants to list. To view additional tenants,\n            issue another request to <code>ListResourceTenants</code>, and pass this token in the <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "SuppressedDestinationSummary": {
                "description": "<p>A summary that describes the suppressed email address.</p>",
                "type": "object",
                "properties": {
                    "EmailAddress": {
                        "description": "<p>The email address that's on the suppression list for your account.</p>",
                        "type": "string"
                    },
                    "Reason": {
                        "description": "<p>The reason that the address was added to the suppression list for your account.</p>",
                        "enum": [
                            "BOUNCE",
                            "COMPLAINT"
                        ],
                        "type": "string"
                    },
                    "LastUpdateTime": {
                        "description": "<p>The date and time when the suppressed destination was last updated, shown in Unix time\n            format.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "EmailAddress",
                    "LastUpdateTime",
                    "Reason"
                ]
            },
            "ListSuppressedDestinationsResponse": {
                "description": "<p>A list of suppressed email addresses.</p>",
                "type": "object",
                "properties": {
                    "SuppressedDestinationSummaries": {
                        "description": "<p>A list of summaries, each containing a summary for a suppressed email\n            destination.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SuppressedDestinationSummary"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional email addresses on the suppression\n            list for your account. To view additional suppressed addresses, issue another request to\n                <code>ListSuppressedDestinations</code>, and pass this token in the\n                <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "ListTagsForResourceResponse": {
                "type": "object",
                "properties": {
                    "Tags": {
                        "description": "<p>An array that lists all the tags that are associated with the resource. Each tag\n            consists of a required tag key (<code>Key</code>) and an associated tag value\n                (<code>Value</code>)</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        }
                    }
                },
                "required": [
                    "Tags"
                ]
            },
            "TenantResource": {
                "description": "<p>A structure that contains information about a resource associated with a tenant.</p>",
                "type": "object",
                "properties": {
                    "ResourceType": {
                        "description": "<p>The type of resource associated with the tenant. Valid values are <code>EMAIL_IDENTITY</code>,\n            <code>CONFIGURATION_SET</code>, or <code>EMAIL_TEMPLATE</code>.</p>",
                        "enum": [
                            "CONFIGURATION_SET",
                            "EMAIL_IDENTITY",
                            "EMAIL_TEMPLATE"
                        ],
                        "type": "string"
                    },
                    "ResourceArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the resource associated with the tenant.</p>",
                        "type": "string"
                    }
                }
            },
            "ListTenantResourcesResponse": {
                "description": "<p>Information about resources associated with a specific tenant.</p>",
                "type": "object",
                "properties": {
                    "TenantResources": {
                        "description": "<p>An array that contains information about each resource associated with the tenant.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TenantResource"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional resources to list. To view additional resources,\n            issue another request to <code>ListTenantResources</code>, and pass this token in the <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "TenantInfo": {
                "description": "<p>A structure that contains basic information about a tenant.</p>",
                "type": "object",
                "properties": {
                    "TenantName": {
                        "description": "<p>The name of the tenant.</p>",
                        "type": "string"
                    },
                    "TenantId": {
                        "description": "<p>A unique identifier for the tenant.</p>",
                        "type": "string"
                    },
                    "TenantArn": {
                        "description": "<p>The Amazon Resource Name (ARN) of the tenant.</p>",
                        "type": "string"
                    },
                    "CreatedTimestamp": {
                        "description": "<p>The date and time when the tenant was created.</p>",
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "ListTenantsResponse": {
                "description": "<p>Information about tenants associated with your account.</p>",
                "type": "object",
                "properties": {
                    "Tenants": {
                        "description": "<p>An array that contains basic information about each tenant.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TenantInfo"
                        }
                    },
                    "NextToken": {
                        "description": "<p>A token that indicates that there are additional tenants to list. To view additional tenants,\n            issue another request to <code>ListTenants</code>, and pass this token in the <code>NextToken</code> parameter.</p>",
                        "type": "string"
                    }
                }
            },
            "BulkEmailEntryResult": {
                "description": "<p>The result of the <code>SendBulkEmail</code> operation of each specified\n                <code>BulkEmailEntry</code>.</p>",
                "type": "object",
                "properties": {
                    "Status": {
                        "description": "<p>The status of a message sent using the <code>SendBulkTemplatedEmail</code>\n            operation.</p>\n         <p>Possible values for this parameter include:</p>\n         <ul>\n            <li>\n               <p>SUCCESS: Amazon SES accepted the message, and will attempt to deliver it to\n                    the recipients.</p>\n            </li>\n            <li>\n               <p>MESSAGE_REJECTED: The message was rejected because it contained a\n                    virus.</p>\n            </li>\n            <li>\n               <p>MAIL_FROM_DOMAIN_NOT_VERIFIED: The sender's email address or domain was not\n                    verified.</p>\n            </li>\n            <li>\n               <p>CONFIGURATION_SET_DOES_NOT_EXIST: The configuration set you specified does not\n                    exist.</p>\n            </li>\n            <li>\n               <p>TEMPLATE_DOES_NOT_EXIST: The template you specified does not exist.</p>\n            </li>\n            <li>\n               <p>ACCOUNT_SUSPENDED: Your account has been shut down because of issues related\n                    to your email sending practices.</p>\n            </li>\n            <li>\n               <p>ACCOUNT_THROTTLED: The number of emails you can send has been reduced because\n                    your account has exceeded its allocated sending limit.</p>\n            </li>\n            <li>\n               <p>ACCOUNT_DAILY_QUOTA_EXCEEDED: You have reached or exceeded the maximum number\n                    of emails you can send from your account in a 24-hour period.</p>\n            </li>\n            <li>\n               <p>INVALID_SENDING_POOL_NAME: The configuration set you specified refers to an IP\n                    pool that does not exist.</p>\n            </li>\n            <li>\n               <p>ACCOUNT_SENDING_PAUSED: Email sending for the Amazon SES account was disabled\n                    using the <a href=\"https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateAccountSendingEnabled.html\">UpdateAccountSendingEnabled</a> operation.</p>\n            </li>\n            <li>\n               <p>CONFIGURATION_SET_SENDING_PAUSED: Email sending for this configuration set was\n                    disabled using the <a href=\"https://docs.aws.amazon.com/ses/latest/APIReference/API_UpdateConfigurationSetSendingEnabled.html\">UpdateConfigurationSetSendingEnabled</a> operation.</p>\n            </li>\n            <li>\n               <p>INVALID_PARAMETER_VALUE: One or more of the parameters you specified when\n                    calling this operation was invalid. See the error message for additional\n                    information.</p>\n            </li>\n            <li>\n               <p>TRANSIENT_FAILURE: Amazon SES was unable to process your request because of a\n                    temporary issue.</p>\n            </li>\n            <li>\n               <p>FAILED: Amazon SES was unable to process your request. See the error message\n                    for additional information.</p>\n            </li>\n         </ul>",
                        "enum": [
                            "ACCOUNT_DAILY_QUOTA_EXCEEDED",
                            "ACCOUNT_SENDING_PAUSED",
                            "ACCOUNT_SUSPENDED",
                            "ACCOUNT_THROTTLED",
                            "CONFIGURATION_SET_NOT_FOUND",
                            "CONFIGURATION_SET_SENDING_PAUSED",
                            "FAILED",
                            "INVALID_PARAMETER",
                            "INVALID_SENDING_POOL_NAME",
                            "MAIL_FROM_DOMAIN_NOT_VERIFIED",
                            "MESSAGE_REJECTED",
                            "SUCCESS",
                            "TEMPLATE_NOT_FOUND",
                            "TRANSIENT_FAILURE"
                        ],
                        "type": "string"
                    },
                    "Error": {
                        "description": "<p>A description of an error that prevented a message being sent using the\n                <code>SendBulkTemplatedEmail</code> operation.</p>",
                        "type": "string"
                    },
                    "MessageId": {
                        "description": "<p>The unique message identifier returned from the <code>SendBulkTemplatedEmail</code>\n            operation.</p>",
                        "type": "string"
                    }
                }
            },
            "SendBulkEmailResponse": {
                "description": "<p>The following data is returned in JSON format by the service.</p>",
                "type": "object",
                "properties": {
                    "BulkEmailEntryResults": {
                        "description": "<p>One object per intended recipient. Check each response object and retry any messages\n            with a failure status.</p>",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulkEmailEntryResult"
                        }
                    }
                },
                "required": [
                    "BulkEmailEntryResults"
                ]
            },
            "SendCustomVerificationEmailResponse": {
                "description": "<p>The following element is returned by the service.</p>",
                "type": "object",
                "properties": {
                    "MessageId": {
                        "description": "<p>The unique message identifier returned from the\n                <code>SendCustomVerificationEmail</code> operation.</p>",
                        "type": "string"
                    }
                }
            },
            "SendEmailResponse": {
                "description": "<p>A unique message ID that you receive when an email is accepted for sending.</p>",
                "type": "object",
                "properties": {
                    "MessageId": {
                        "description": "<p>A unique identifier for the message that is generated when the message is\n            accepted.</p>\n         <note>\n            <p>It's possible for Amazon SES to accept a message without sending it. For example, this\n                can happen when the message that you're trying to send has an attachment that\n                contains a virus, or when you send a templated email that contains invalid\n                personalization content.</p>\n         </note>",
                        "type": "string"
                    }
                }
            },
            "TagResourceResponse": {
                "type": "object"
            },
            "TestRenderEmailTemplateResponse": {
                "description": "<p>The following element is returned by the service.</p>",
                "type": "object",
                "properties": {
                    "RenderedTemplate": {
                        "description": "<p>The complete MIME message rendered by applying the data in the\n                <code>TemplateData</code> parameter to the template specified in the TemplateName\n            parameter.</p>",
                        "type": "string"
                    }
                },
                "required": [
                    "RenderedTemplate"
                ]
            },
            "UntagResourceResponse": {
                "type": "object"
            },
            "UpdateConfigurationSetEventDestinationResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object"
            },
            "UpdateContactResponse": {
                "type": "object"
            },
            "UpdateContactListResponse": {
                "type": "object"
            },
            "UpdateCustomVerificationEmailTemplateResponse": {
                "description": "<p>If the action is successful, the service sends back an HTTP 200 response with an empty\n            HTTP body.</p>",
                "type": "object"
            },
            "UpdateEmailIdentityPolicyResponse": {
                "description": "<p>An HTTP 200 response if the request succeeds, or an error message if the request\n            fails.</p>",
                "type": "object"
            },
            "UpdateEmailTemplateResponse": {
                "description": "<p>If the action is successful, the service sends back an HTTP 200 response with an empty\n            HTTP body.</p>",
                "type": "object"
            },
            "UpdateReputationEntityCustomerManagedStatusResponse": {
                "description": "<p>If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.</p>",
                "type": "object"
            },
            "UpdateReputationEntityPolicyResponse": {
                "description": "<p>If the action is successful, the service sends back an HTTP 200 response with an empty HTTP body.</p>",
                "type": "object"
            },
            "APIWebhook": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "WebhookResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "webhook": {
                                "type": "object",
                                "properties": {
                                    "url": {
                                        "type": "string"
                                    },
                                    "urls": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "additionalProperties": false
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message",
                            "webhook"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "WebhookValidationResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "message"
                ]
            },
            "CreatedUpdatedDomainCredentialsResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "MessageResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "ConnectionSettingsResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "require_tls": {
                                "type": "boolean"
                            },
                            "skip_verification": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "UpdatedDKIMAuthorityResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "changed": {
                                "type": "boolean"
                            },
                            "message": {
                                "type": "string"
                            },
                            "sending_dns_records": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/import(\"/home/cyber/Dokumenty/git-projects/private/spacebar-test-station/server/node_modules/mailgun.js/Types/Types/Domains/Domains\",{with:{\"resolution-mode\":\"import\"}}).DNSRecord"
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "changed",
                            "message",
                            "sending_dns_records"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "UpdatedDKIMSelectorResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "UpdatedWebPrefixResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "APIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {}
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "APIErrorOptions": {
                "type": "object",
                "properties": {
                    "headers": {
                        "type": "object",
                        "additionalProperties": {}
                    },
                    "status": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "error": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "url": {
                        "type": "string"
                    },
                    "statusText": {
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "APIErrorType": {
                "type": "object",
                "properties": {
                    "stack": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    }
                },
                "required": [
                    "details",
                    "message",
                    "stack",
                    "status"
                ]
            },
            "MessagesSendAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "message"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "UpdateRouteResponse": {
                "type": "object",
                "properties": {
                    "actions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "expression": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "priority": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "actions",
                    "created_at",
                    "description",
                    "expression",
                    "id",
                    "message",
                    "priority"
                ]
            },
            "InboxPlacementsTestResultAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "result_id": {
                                "type": "string"
                            },
                            "links": {
                                "type": "object",
                                "properties": {
                                    "results": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "results"
                                ]
                            },
                            "status": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "links",
                            "result_id",
                            "status"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "InboxPlacementsAttributesApiResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "object",
                                "properties": {
                                    "attribute": {
                                        "type": "string"
                                    },
                                    "values": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "attribute",
                                    "values"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "InboxPlacementsValuesApiResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "InboxPlacementsFiltersApiResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "supported_filters": {
                                "type": "object",
                                "properties": {
                                    "filters": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "parameter": {
                                                    "type": "string"
                                                },
                                                "description": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "description",
                                                "parameter"
                                            ]
                                        }
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "filters"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "supported_filters"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "SeedsListsAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "Id": {
                                            "type": "string"
                                        },
                                        "kid": {
                                            "type": "string"
                                        },
                                        "ID": {
                                            "type": "string"
                                        },
                                        "AccountID": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        },
                                        "last_result_at": {
                                            "type": "string"
                                        },
                                        "Seeds": {
                                            "anyOf": [
                                                {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "AccountID": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "string"
                                                            },
                                                            "token": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "provider": {
                                                                "type": "string"
                                                            },
                                                            "sync_state": {
                                                                "type": "string"
                                                            },
                                                            "local_state": {
                                                                "type": "string"
                                                            },
                                                            "created_at": {
                                                                "type": "string"
                                                            },
                                                            "updated_at": {
                                                                "type": "string"
                                                            },
                                                            "message_count": {
                                                                "type": "integer"
                                                            },
                                                            "max_email_count_hit_at": {
                                                                "type": "string"
                                                            },
                                                            "total_msgs": {
                                                                "type": "integer"
                                                            },
                                                            "matched_msgs": {
                                                                "type": "integer"
                                                            },
                                                            "spam_message": {
                                                                "type": "integer"
                                                            },
                                                            "expected_msgs": {
                                                                "type": "integer"
                                                            },
                                                            "last_sent_to_at": {
                                                                "type": "string"
                                                            },
                                                            "last_delivered_at": {
                                                                "type": "string"
                                                            },
                                                            "account_quality": {
                                                                "type": "integer"
                                                            },
                                                            "quality_label": {
                                                                "type": "string"
                                                            },
                                                            "password": {
                                                                "type": "string"
                                                            },
                                                            "phone_number": {
                                                                "type": "string"
                                                            },
                                                            "attributes": {
                                                                "type": "object",
                                                                "additionalProperties": {}
                                                            },
                                                            "totp": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "secret": {
                                                                        "type": "string"
                                                                    }
                                                                },
                                                                "additionalProperties": false,
                                                                "required": [
                                                                    "secret"
                                                                ]
                                                            }
                                                        },
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "AccountID",
                                                            "account_quality",
                                                            "attributes",
                                                            "created_at",
                                                            "email",
                                                            "expected_msgs",
                                                            "id",
                                                            "last_delivered_at",
                                                            "last_sent_to_at",
                                                            "local_state",
                                                            "matched_msgs",
                                                            "max_email_count_hit_at",
                                                            "message_count",
                                                            "password",
                                                            "phone_number",
                                                            "provider",
                                                            "quality_label",
                                                            "spam_message",
                                                            "sync_state",
                                                            "token",
                                                            "total_msgs",
                                                            "totp",
                                                            "updated_at"
                                                        ]
                                                    }
                                                },
                                                {
                                                    "type": "null"
                                                }
                                            ]
                                        },
                                        "target_email": {
                                            "type": "string"
                                        },
                                        "sending_domains": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        },
                                        "has_results": {
                                            "type": "boolean"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "seed_filter": {
                                            "type": "string"
                                        },
                                        "mailing_list": {
                                            "type": "string"
                                        },
                                        "CreatedTS": {
                                            "type": "integer"
                                        },
                                        "tags": {
                                            "type": "object",
                                            "additionalProperties": {},
                                            "properties": {
                                                "sfmc_remote_id": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "delivery_stats": {
                                            "type": "object",
                                            "properties": {
                                                "all": {
                                                    "type": "object",
                                                    "properties": {
                                                        "delivered": {
                                                            "type": "integer"
                                                        },
                                                        "missing": {
                                                            "type": "integer"
                                                        },
                                                        "pending": {
                                                            "type": "integer"
                                                        },
                                                        "spam": {
                                                            "type": "integer"
                                                        },
                                                        "inbox": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        },
                                                        "provider": {
                                                            "type": "string"
                                                        },
                                                        "categories": {
                                                            "type": "object",
                                                            "properties": {
                                                                "primary": {
                                                                    "type": "integer"
                                                                },
                                                                "promotions": {
                                                                    "type": "integer"
                                                                },
                                                                "updates": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "required": [
                                                                "primary",
                                                                "promotions",
                                                                "updates"
                                                            ]
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "categories",
                                                        "delivered",
                                                        "inbox",
                                                        "missing",
                                                        "pending",
                                                        "provider",
                                                        "spam",
                                                        "total"
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "all"
                                            ]
                                        },
                                        "SeedQuality": {
                                            "type": "integer"
                                        },
                                        "is_auto_generated": {
                                            "type": "boolean"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "AccountID",
                                        "CreatedTS",
                                        "ID",
                                        "Id",
                                        "SeedQuality",
                                        "Seeds",
                                        "created_at",
                                        "delivery_stats",
                                        "has_results",
                                        "is_auto_generated",
                                        "kid",
                                        "last_result_at",
                                        "mailing_list",
                                        "name",
                                        "seed_filter",
                                        "sending_domains",
                                        "tags",
                                        "target_email",
                                        "updated_at"
                                    ]
                                }
                            },
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "type": "string"
                                    },
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items",
                            "paging",
                            "total"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "SeedListAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "Id": {
                                "type": "string"
                            },
                            "kid": {
                                "type": "string"
                            },
                            "ID": {
                                "type": "string"
                            },
                            "AccountID": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "updated_at": {
                                "type": "string"
                            },
                            "last_result_at": {
                                "type": "string"
                            },
                            "Seeds": {
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "AccountID": {
                                                    "type": "string"
                                                },
                                                "id": {
                                                    "type": "string"
                                                },
                                                "token": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "provider": {
                                                    "type": "string"
                                                },
                                                "sync_state": {
                                                    "type": "string"
                                                },
                                                "local_state": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                },
                                                "message_count": {
                                                    "type": "integer"
                                                },
                                                "max_email_count_hit_at": {
                                                    "type": "string"
                                                },
                                                "total_msgs": {
                                                    "type": "integer"
                                                },
                                                "matched_msgs": {
                                                    "type": "integer"
                                                },
                                                "spam_message": {
                                                    "type": "integer"
                                                },
                                                "expected_msgs": {
                                                    "type": "integer"
                                                },
                                                "last_sent_to_at": {
                                                    "type": "string"
                                                },
                                                "last_delivered_at": {
                                                    "type": "string"
                                                },
                                                "account_quality": {
                                                    "type": "integer"
                                                },
                                                "quality_label": {
                                                    "type": "string"
                                                },
                                                "password": {
                                                    "type": "string"
                                                },
                                                "phone_number": {
                                                    "type": "string"
                                                },
                                                "attributes": {
                                                    "type": "object",
                                                    "additionalProperties": {}
                                                },
                                                "totp": {
                                                    "type": "object",
                                                    "properties": {
                                                        "secret": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "secret"
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "AccountID",
                                                "account_quality",
                                                "attributes",
                                                "created_at",
                                                "email",
                                                "expected_msgs",
                                                "id",
                                                "last_delivered_at",
                                                "last_sent_to_at",
                                                "local_state",
                                                "matched_msgs",
                                                "max_email_count_hit_at",
                                                "message_count",
                                                "password",
                                                "phone_number",
                                                "provider",
                                                "quality_label",
                                                "spam_message",
                                                "sync_state",
                                                "token",
                                                "total_msgs",
                                                "totp",
                                                "updated_at"
                                            ]
                                        }
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "target_email": {
                                "type": "string"
                            },
                            "sending_domains": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "has_results": {
                                "type": "boolean"
                            },
                            "name": {
                                "type": "string"
                            },
                            "seed_filter": {
                                "type": "string"
                            },
                            "mailing_list": {
                                "type": "string"
                            },
                            "CreatedTS": {
                                "type": "integer"
                            },
                            "tags": {
                                "type": "object",
                                "additionalProperties": {},
                                "properties": {
                                    "sfmc_remote_id": {
                                        "type": "string"
                                    }
                                }
                            },
                            "delivery_stats": {
                                "type": "object",
                                "properties": {
                                    "all": {
                                        "type": "object",
                                        "properties": {
                                            "delivered": {
                                                "type": "integer"
                                            },
                                            "missing": {
                                                "type": "integer"
                                            },
                                            "pending": {
                                                "type": "integer"
                                            },
                                            "spam": {
                                                "type": "integer"
                                            },
                                            "inbox": {
                                                "type": "integer"
                                            },
                                            "total": {
                                                "type": "integer"
                                            },
                                            "provider": {
                                                "type": "string"
                                            },
                                            "categories": {
                                                "type": "object",
                                                "properties": {
                                                    "primary": {
                                                        "type": "integer"
                                                    },
                                                    "promotions": {
                                                        "type": "integer"
                                                    },
                                                    "updates": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "primary",
                                                    "promotions",
                                                    "updates"
                                                ]
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "categories",
                                            "delivered",
                                            "inbox",
                                            "missing",
                                            "pending",
                                            "provider",
                                            "spam",
                                            "total"
                                        ]
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "all"
                                ]
                            },
                            "SeedQuality": {
                                "type": "integer"
                            },
                            "is_auto_generated": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "AccountID",
                            "CreatedTS",
                            "ID",
                            "Id",
                            "SeedQuality",
                            "Seeds",
                            "created_at",
                            "delivery_stats",
                            "has_results",
                            "is_auto_generated",
                            "kid",
                            "last_result_at",
                            "mailing_list",
                            "name",
                            "seed_filter",
                            "sending_domains",
                            "tags",
                            "target_email",
                            "updated_at"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "SeedListGetAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "seedlist": {
                                "type": "object",
                                "properties": {
                                    "Id": {
                                        "type": "string"
                                    },
                                    "kid": {
                                        "type": "string"
                                    },
                                    "ID": {
                                        "type": "string"
                                    },
                                    "AccountID": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "updated_at": {
                                        "type": "string"
                                    },
                                    "last_result_at": {
                                        "type": "string"
                                    },
                                    "Seeds": {
                                        "anyOf": [
                                            {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "AccountID": {
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "type": "string"
                                                        },
                                                        "token": {
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "type": "string"
                                                        },
                                                        "provider": {
                                                            "type": "string"
                                                        },
                                                        "sync_state": {
                                                            "type": "string"
                                                        },
                                                        "local_state": {
                                                            "type": "string"
                                                        },
                                                        "created_at": {
                                                            "type": "string"
                                                        },
                                                        "updated_at": {
                                                            "type": "string"
                                                        },
                                                        "message_count": {
                                                            "type": "integer"
                                                        },
                                                        "max_email_count_hit_at": {
                                                            "type": "string"
                                                        },
                                                        "total_msgs": {
                                                            "type": "integer"
                                                        },
                                                        "matched_msgs": {
                                                            "type": "integer"
                                                        },
                                                        "spam_message": {
                                                            "type": "integer"
                                                        },
                                                        "expected_msgs": {
                                                            "type": "integer"
                                                        },
                                                        "last_sent_to_at": {
                                                            "type": "string"
                                                        },
                                                        "last_delivered_at": {
                                                            "type": "string"
                                                        },
                                                        "account_quality": {
                                                            "type": "integer"
                                                        },
                                                        "quality_label": {
                                                            "type": "string"
                                                        },
                                                        "password": {
                                                            "type": "string"
                                                        },
                                                        "phone_number": {
                                                            "type": "string"
                                                        },
                                                        "attributes": {
                                                            "type": "object",
                                                            "additionalProperties": {}
                                                        },
                                                        "totp": {
                                                            "type": "object",
                                                            "properties": {
                                                                "secret": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "required": [
                                                                "secret"
                                                            ]
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "AccountID",
                                                        "account_quality",
                                                        "attributes",
                                                        "created_at",
                                                        "email",
                                                        "expected_msgs",
                                                        "id",
                                                        "last_delivered_at",
                                                        "last_sent_to_at",
                                                        "local_state",
                                                        "matched_msgs",
                                                        "max_email_count_hit_at",
                                                        "message_count",
                                                        "password",
                                                        "phone_number",
                                                        "provider",
                                                        "quality_label",
                                                        "spam_message",
                                                        "sync_state",
                                                        "token",
                                                        "total_msgs",
                                                        "totp",
                                                        "updated_at"
                                                    ]
                                                }
                                            },
                                            {
                                                "type": "null"
                                            }
                                        ]
                                    },
                                    "target_email": {
                                        "type": "string"
                                    },
                                    "sending_domains": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "has_results": {
                                        "type": "boolean"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "seed_filter": {
                                        "type": "string"
                                    },
                                    "mailing_list": {
                                        "type": "string"
                                    },
                                    "CreatedTS": {
                                        "type": "integer"
                                    },
                                    "tags": {
                                        "type": "object",
                                        "additionalProperties": {},
                                        "properties": {
                                            "sfmc_remote_id": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "delivery_stats": {
                                        "type": "object",
                                        "properties": {
                                            "all": {
                                                "type": "object",
                                                "properties": {
                                                    "delivered": {
                                                        "type": "integer"
                                                    },
                                                    "missing": {
                                                        "type": "integer"
                                                    },
                                                    "pending": {
                                                        "type": "integer"
                                                    },
                                                    "spam": {
                                                        "type": "integer"
                                                    },
                                                    "inbox": {
                                                        "type": "integer"
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    },
                                                    "provider": {
                                                        "type": "string"
                                                    },
                                                    "categories": {
                                                        "type": "object",
                                                        "properties": {
                                                            "primary": {
                                                                "type": "integer"
                                                            },
                                                            "promotions": {
                                                                "type": "integer"
                                                            },
                                                            "updates": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "primary",
                                                            "promotions",
                                                            "updates"
                                                        ]
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "categories",
                                                    "delivered",
                                                    "inbox",
                                                    "missing",
                                                    "pending",
                                                    "provider",
                                                    "spam",
                                                    "total"
                                                ]
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "all"
                                        ]
                                    },
                                    "SeedQuality": {
                                        "type": "integer"
                                    },
                                    "is_auto_generated": {
                                        "type": "boolean"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "AccountID",
                                    "CreatedTS",
                                    "ID",
                                    "Id",
                                    "SeedQuality",
                                    "Seeds",
                                    "created_at",
                                    "delivery_stats",
                                    "has_results",
                                    "is_auto_generated",
                                    "kid",
                                    "last_result_at",
                                    "mailing_list",
                                    "name",
                                    "seed_filter",
                                    "sending_domains",
                                    "tags",
                                    "target_email",
                                    "updated_at"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "seedlist"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "SeedsListsDestroyApiResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "null"
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "InboxPlacementsResultAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "object",
                                "properties": {
                                    "Id": {
                                        "type": "string"
                                    },
                                    "rid": {
                                        "type": "string"
                                    },
                                    "result_id": {
                                        "type": "string"
                                    },
                                    "AccountID": {
                                        "type": "string"
                                    },
                                    "KeyBoxID": {
                                        "type": "string"
                                    },
                                    "keybox_email": {
                                        "type": "string"
                                    },
                                    "subject": {
                                        "type": "string"
                                    },
                                    "sender": {
                                        "type": "string"
                                    },
                                    "seedlist_name": {
                                        "type": "string"
                                    },
                                    "created_at": {
                                        "type": "string"
                                    },
                                    "updated_at": {
                                        "type": "string"
                                    },
                                    "status": {
                                        "type": "string"
                                    },
                                    "CreatedTS": {
                                        "type": "integer"
                                    },
                                    "attributes": {
                                        "type": "object",
                                        "additionalProperties": {}
                                    },
                                    "campaign_id": {
                                        "type": "string"
                                    },
                                    "sharing_enabled": {
                                        "type": "boolean"
                                    },
                                    "sharing_id": {
                                        "type": "string"
                                    },
                                    "sharing_expires_at": {
                                        "type": "string"
                                    },
                                    "Box": {
                                        "type": "object",
                                        "properties": {
                                            "Id": {
                                                "type": "string"
                                            },
                                            "kid": {
                                                "type": "string"
                                            },
                                            "ID": {
                                                "type": "string"
                                            },
                                            "AccountID": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string"
                                            },
                                            "updated_at": {
                                                "type": "string"
                                            },
                                            "last_result_at": {
                                                "type": "string"
                                            },
                                            "Seeds": {
                                                "type": "null"
                                            },
                                            "target_email": {
                                                "type": "string"
                                            },
                                            "sending_domains": {
                                                "type": "null"
                                            },
                                            "has_results": {
                                                "type": "boolean"
                                            },
                                            "name": {
                                                "type": "string"
                                            },
                                            "seed_filter": {
                                                "type": "string"
                                            },
                                            "mailing_list": {
                                                "type": "string"
                                            },
                                            "CreatedTS": {
                                                "type": "integer"
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "SeedQuality": {
                                                "type": "integer"
                                            },
                                            "is_auto_generated": {
                                                "type": "boolean"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "AccountID",
                                            "CreatedTS",
                                            "ID",
                                            "Id",
                                            "SeedQuality",
                                            "Seeds",
                                            "created_at",
                                            "has_results",
                                            "is_auto_generated",
                                            "kid",
                                            "last_result_at",
                                            "mailing_list",
                                            "name",
                                            "seed_filter",
                                            "sending_domains",
                                            "tags",
                                            "target_email",
                                            "updated_at"
                                        ]
                                    },
                                    "seed_results": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "email": {
                                                    "type": "string"
                                                },
                                                "provider": {
                                                    "type": "string"
                                                },
                                                "destination": {
                                                    "type": "string"
                                                },
                                                "state": {
                                                    "type": "string"
                                                },
                                                "originating_ip": {
                                                    "type": "string"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "dkim": {
                                                    "type": "string"
                                                },
                                                "spf": {
                                                    "type": "string"
                                                },
                                                "dmarc": {
                                                    "type": "string"
                                                },
                                                "headers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "key": {
                                                                "type": "string"
                                                            },
                                                            "value": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "key",
                                                            "value"
                                                        ]
                                                    }
                                                },
                                                "extensions": {
                                                    "type": "object",
                                                    "properties": {
                                                        "category": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "category"
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "destination",
                                                "dkim",
                                                "dmarc",
                                                "email",
                                                "extensions",
                                                "headers",
                                                "originating_ip",
                                                "provider",
                                                "spf",
                                                "state",
                                                "tags"
                                            ]
                                        }
                                    },
                                    "spamassassin": {
                                        "type": "object",
                                        "properties": {
                                            "is_spam": {
                                                "type": "boolean"
                                            },
                                            "score": {
                                                "type": "integer"
                                            },
                                            "required": {
                                                "type": "integer"
                                            },
                                            "rules": {
                                                "type": "array",
                                                "items": {
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "type": "string"
                                                        },
                                                        "points": {
                                                            "type": "integer"
                                                        },
                                                        "short_description": {
                                                            "type": "string"
                                                        },
                                                        "long_description": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "long_description",
                                                        "name",
                                                        "points",
                                                        "short_description"
                                                    ]
                                                }
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "is_spam",
                                            "required",
                                            "rules",
                                            "score"
                                        ]
                                    },
                                    "delivery_stats": {
                                        "type": "object",
                                        "additionalProperties": {
                                            "type": "object",
                                            "properties": {
                                                "delivered": {
                                                    "type": "integer"
                                                },
                                                "missing": {
                                                    "type": "integer"
                                                },
                                                "pending": {
                                                    "type": "integer"
                                                },
                                                "spam": {
                                                    "type": "integer"
                                                },
                                                "inbox": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "provider": {
                                                    "type": "string"
                                                },
                                                "categories": {
                                                    "anyOf": [
                                                        {
                                                            "type": "object",
                                                            "properties": {},
                                                            "additionalProperties": true
                                                        },
                                                        {
                                                            "type": "object",
                                                            "properties": {
                                                                "primary": {
                                                                    "type": "integer"
                                                                },
                                                                "updates": {
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "required": [
                                                                "primary",
                                                                "updates"
                                                            ]
                                                        }
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "categories",
                                                "delivered",
                                                "inbox",
                                                "missing",
                                                "pending",
                                                "provider",
                                                "spam",
                                                "total"
                                            ]
                                        }
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "AccountID",
                                    "Box",
                                    "CreatedTS",
                                    "Id",
                                    "KeyBoxID",
                                    "attributes",
                                    "campaign_id",
                                    "created_at",
                                    "delivery_stats",
                                    "keybox_email",
                                    "result_id",
                                    "rid",
                                    "seed_results",
                                    "seedlist_name",
                                    "sender",
                                    "sharing_enabled",
                                    "sharing_expires_at",
                                    "sharing_id",
                                    "spamassassin",
                                    "status",
                                    "subject",
                                    "updated_at"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "result"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "InboxPlacementsResultsListAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "Id": {
                                            "type": "string"
                                        },
                                        "rid": {
                                            "type": "string"
                                        },
                                        "result_id": {
                                            "type": "string"
                                        },
                                        "AccountID": {
                                            "type": "string"
                                        },
                                        "KeyBoxID": {
                                            "type": "string"
                                        },
                                        "keybox_email": {
                                            "type": "string"
                                        },
                                        "subject": {
                                            "type": "string"
                                        },
                                        "sender": {
                                            "type": "string"
                                        },
                                        "seedlist_name": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "CreatedTS": {
                                            "type": "integer"
                                        },
                                        "attributes": {
                                            "type": "object",
                                            "additionalProperties": {}
                                        },
                                        "campaign_id": {
                                            "type": "string"
                                        },
                                        "sharing_enabled": {
                                            "type": "boolean"
                                        },
                                        "sharing_id": {
                                            "type": "string"
                                        },
                                        "sharing_expires_at": {
                                            "type": "string"
                                        },
                                        "Box": {
                                            "type": "object",
                                            "properties": {
                                                "Id": {
                                                    "type": "string"
                                                },
                                                "kid": {
                                                    "type": "string"
                                                },
                                                "ID": {
                                                    "type": "string"
                                                },
                                                "AccountID": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "type": "string"
                                                },
                                                "updated_at": {
                                                    "type": "string"
                                                },
                                                "last_result_at": {
                                                    "type": "string"
                                                },
                                                "Seeds": {
                                                    "type": "null"
                                                },
                                                "target_email": {
                                                    "type": "string"
                                                },
                                                "sending_domains": {
                                                    "type": "null"
                                                },
                                                "has_results": {
                                                    "type": "boolean"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "seed_filter": {
                                                    "type": "string"
                                                },
                                                "mailing_list": {
                                                    "type": "string"
                                                },
                                                "CreatedTS": {
                                                    "type": "integer"
                                                },
                                                "tags": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "SeedQuality": {
                                                    "type": "integer"
                                                },
                                                "is_auto_generated": {
                                                    "type": "boolean"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "AccountID",
                                                "CreatedTS",
                                                "ID",
                                                "Id",
                                                "SeedQuality",
                                                "Seeds",
                                                "created_at",
                                                "has_results",
                                                "is_auto_generated",
                                                "kid",
                                                "last_result_at",
                                                "mailing_list",
                                                "name",
                                                "seed_filter",
                                                "sending_domains",
                                                "tags",
                                                "target_email",
                                                "updated_at"
                                            ]
                                        },
                                        "seed_results": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "provider": {
                                                        "type": "string"
                                                    },
                                                    "destination": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "originating_ip": {
                                                        "type": "string"
                                                    },
                                                    "tags": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "dkim": {
                                                        "type": "string"
                                                    },
                                                    "spf": {
                                                        "type": "string"
                                                    },
                                                    "dmarc": {
                                                        "type": "string"
                                                    },
                                                    "headers": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "key": {
                                                                    "type": "string"
                                                                },
                                                                "value": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "additionalProperties": false,
                                                            "required": [
                                                                "key",
                                                                "value"
                                                            ]
                                                        }
                                                    },
                                                    "extensions": {
                                                        "type": "object",
                                                        "properties": {
                                                            "category": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "category"
                                                        ]
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "destination",
                                                    "dkim",
                                                    "dmarc",
                                                    "email",
                                                    "extensions",
                                                    "headers",
                                                    "originating_ip",
                                                    "provider",
                                                    "spf",
                                                    "state",
                                                    "tags"
                                                ]
                                            }
                                        },
                                        "spamassassin": {
                                            "type": "object",
                                            "properties": {
                                                "is_spam": {
                                                    "type": "boolean"
                                                },
                                                "score": {
                                                    "type": "integer"
                                                },
                                                "required": {
                                                    "type": "integer"
                                                },
                                                "rules": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "points": {
                                                                "type": "integer"
                                                            },
                                                            "short_description": {
                                                                "type": "string"
                                                            },
                                                            "long_description": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "additionalProperties": false,
                                                        "required": [
                                                            "long_description",
                                                            "name",
                                                            "points",
                                                            "short_description"
                                                        ]
                                                    }
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "is_spam",
                                                "required",
                                                "rules",
                                                "score"
                                            ]
                                        },
                                        "delivery_stats": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "object",
                                                "properties": {
                                                    "delivered": {
                                                        "type": "integer"
                                                    },
                                                    "missing": {
                                                        "type": "integer"
                                                    },
                                                    "pending": {
                                                        "type": "integer"
                                                    },
                                                    "spam": {
                                                        "type": "integer"
                                                    },
                                                    "inbox": {
                                                        "type": "integer"
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    },
                                                    "provider": {
                                                        "type": "string"
                                                    },
                                                    "categories": {
                                                        "anyOf": [
                                                            {
                                                                "type": "object",
                                                                "properties": {},
                                                                "additionalProperties": true
                                                            },
                                                            {
                                                                "type": "object",
                                                                "properties": {
                                                                    "primary": {
                                                                        "type": "integer"
                                                                    },
                                                                    "updates": {
                                                                        "type": "integer"
                                                                    }
                                                                },
                                                                "additionalProperties": false,
                                                                "required": [
                                                                    "primary",
                                                                    "updates"
                                                                ]
                                                            }
                                                        ]
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "categories",
                                                    "delivered",
                                                    "inbox",
                                                    "missing",
                                                    "pending",
                                                    "provider",
                                                    "spam",
                                                    "total"
                                                ]
                                            }
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "AccountID",
                                        "Box",
                                        "CreatedTS",
                                        "Id",
                                        "KeyBoxID",
                                        "attributes",
                                        "campaign_id",
                                        "created_at",
                                        "delivery_stats",
                                        "keybox_email",
                                        "result_id",
                                        "rid",
                                        "seed_results",
                                        "seedlist_name",
                                        "sender",
                                        "sharing_enabled",
                                        "sharing_expires_at",
                                        "sharing_id",
                                        "spamassassin",
                                        "status",
                                        "subject",
                                        "updated_at"
                                    ]
                                }
                            },
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "type": "string"
                                    },
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items",
                            "paging",
                            "total"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "InboxPlacementsDestroyAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "Message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "Message"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "IPRSharingAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "sharing": {
                                "type": "object",
                                "properties": {
                                    "result_id": {
                                        "type": "string"
                                    },
                                    "expires_at": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "url_id": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string"
                                    },
                                    "api_url": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "api_url",
                                    "enabled",
                                    "expires_at",
                                    "result_id",
                                    "url",
                                    "url_id"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "sharing"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "IPRSharingUpdateAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "sharing": {
                                "type": "object",
                                "properties": {
                                    "result_id": {
                                        "type": "string"
                                    },
                                    "expires_at": {
                                        "type": "string"
                                    },
                                    "enabled": {
                                        "type": "boolean"
                                    },
                                    "url_id": {
                                        "type": "string"
                                    },
                                    "url": {
                                        "type": "string"
                                    },
                                    "api_url": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "api_url",
                                    "enabled",
                                    "expires_at",
                                    "result_id",
                                    "url",
                                    "url_id"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "sharing"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "InboxPlacementsProvidersListAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "domain": {
                                            "type": "string"
                                        },
                                        "display_name": {
                                            "type": "string"
                                        },
                                        "region": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "updated_at": {
                                            "type": "string"
                                        },
                                        "max_email_count": {
                                            "type": "integer"
                                        },
                                        "unsupported_authentications": {
                                            "type": "object",
                                            "properties": {},
                                            "additionalProperties": true
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "created_at",
                                        "display_name",
                                        "domain",
                                        "region",
                                        "updated_at"
                                    ]
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "MultipleValidationJobsListResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "type": "string"
                                    },
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            },
                            "jobs": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "created_at": {
                                            "type": "integer"
                                        },
                                        "id": {
                                            "type": "string"
                                        },
                                        "quantity": {
                                            "type": "integer"
                                        },
                                        "records_processed": {
                                            "type": [
                                                "null",
                                                "integer"
                                            ]
                                        },
                                        "status": {
                                            "type": "string"
                                        },
                                        "download_url": {
                                            "type": "object",
                                            "properties": {
                                                "csv": {
                                                    "type": "string"
                                                },
                                                "json": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "csv",
                                                "json"
                                            ]
                                        },
                                        "summary": {
                                            "type": "object",
                                            "properties": {
                                                "result": {
                                                    "type": "object",
                                                    "properties": {
                                                        "catch_all": {
                                                            "type": "integer"
                                                        },
                                                        "deliverable": {
                                                            "type": "integer"
                                                        },
                                                        "do_not_send": {
                                                            "type": "integer"
                                                        },
                                                        "undeliverable": {
                                                            "type": "integer"
                                                        },
                                                        "unknown": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "catch_all",
                                                        "deliverable",
                                                        "do_not_send",
                                                        "undeliverable",
                                                        "unknown"
                                                    ]
                                                },
                                                "risk": {
                                                    "type": "object",
                                                    "properties": {
                                                        "high": {
                                                            "type": "integer"
                                                        },
                                                        "low": {
                                                            "type": "integer"
                                                        },
                                                        "medium": {
                                                            "type": "integer"
                                                        },
                                                        "unknown": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "high",
                                                        "low",
                                                        "medium",
                                                        "unknown"
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "result",
                                                "risk"
                                            ]
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "created_at",
                                        "id",
                                        "quantity",
                                        "records_processed",
                                        "status"
                                    ]
                                }
                            },
                            "total": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "jobs",
                            "paging",
                            "total"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "ValidationResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "address": {
                                "type": "string"
                            },
                            "is_disposable_address": {
                                "type": "boolean"
                            },
                            "is_role_address": {
                                "type": "boolean"
                            },
                            "reason": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "result": {
                                "type": "string"
                            },
                            "risk": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "address",
                            "is_disposable_address",
                            "is_role_address",
                            "reason",
                            "result",
                            "risk"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "IpPoolListResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "ip_pools": {
                                "type": "object",
                                "properties": {
                                    "description": {
                                        "type": "string"
                                    },
                                    "ips": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "is_linked": {
                                        "type": "boolean"
                                    },
                                    "name": {
                                        "type": "string"
                                    },
                                    "pool_id": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "description",
                                    "ips",
                                    "is_linked",
                                    "name",
                                    "pool_id"
                                ]
                            },
                            "message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "ip_pools",
                            "message"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "IpPoolMessageResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "IpPoolCreateResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "pool_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message",
                            "pool_id"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "MetricsAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "dimensions": {
                                            "type": "array",
                                            "items": {
                                                "type": "object",
                                                "properties": {
                                                    "dimension": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "string"
                                                    },
                                                    "display_value": {
                                                        "type": "string"
                                                    }
                                                },
                                                "additionalProperties": false,
                                                "required": [
                                                    "dimension",
                                                    "display_value",
                                                    "value"
                                                ]
                                            }
                                        },
                                        "metrics": {
                                            "type": "object",
                                            "properties": {
                                                "accepted_outgoing_count": {
                                                    "type": "integer"
                                                },
                                                "delivered_smtp_count": {
                                                    "type": "integer"
                                                },
                                                "accepted_count": {
                                                    "type": "integer"
                                                },
                                                "delivered_http_count": {
                                                    "type": "integer"
                                                },
                                                "accepted_incoming_count": {
                                                    "type": "integer"
                                                },
                                                "delivered_optimized_count": {
                                                    "type": "integer"
                                                },
                                                "stored_count": {
                                                    "type": "integer"
                                                },
                                                "delivered_count": {
                                                    "type": "integer"
                                                },
                                                "processed_count": {
                                                    "type": "integer"
                                                },
                                                "sent_count": {
                                                    "type": "integer"
                                                },
                                                "opened_count": {
                                                    "type": "integer"
                                                },
                                                "unique_opened_count": {
                                                    "type": "integer"
                                                },
                                                "clicked_count": {
                                                    "type": "integer"
                                                },
                                                "unique_clicked_count": {
                                                    "type": "integer"
                                                },
                                                "complained_count": {
                                                    "type": "integer"
                                                },
                                                "permanent_failed_count": {
                                                    "type": "integer"
                                                },
                                                "failed_count": {
                                                    "type": "integer"
                                                },
                                                "rate_limit_count": {
                                                    "type": "integer"
                                                },
                                                "unsubscribed_count": {
                                                    "type": "integer"
                                                },
                                                "temporary_failed_count": {
                                                    "type": "integer"
                                                },
                                                "permanent_failed_optimized_count": {
                                                    "type": "integer"
                                                },
                                                "bounced_count": {
                                                    "type": "integer"
                                                },
                                                "esp_block_count": {
                                                    "type": "integer"
                                                },
                                                "webhook_count": {
                                                    "type": "integer"
                                                },
                                                "delayed_bounce_count": {
                                                    "type": "integer"
                                                },
                                                "soft_bounces_count": {
                                                    "type": "integer"
                                                },
                                                "permanent_failed_old_count": {
                                                    "type": "integer"
                                                },
                                                "suppressed_bounces_count": {
                                                    "type": "integer"
                                                },
                                                "delivered_subsequent_count": {
                                                    "type": "integer"
                                                },
                                                "delivered_rate": {
                                                    "type": "string"
                                                },
                                                "delayed_first_attempt_count": {
                                                    "type": "integer"
                                                },
                                                "unsubscribed_rate": {
                                                    "type": "string"
                                                },
                                                "delivered_first_attempt_count": {
                                                    "type": "integer"
                                                },
                                                "opened_rate": {
                                                    "type": "string"
                                                },
                                                "suppressed_complaints_count": {
                                                    "type": "integer"
                                                },
                                                "delivered_two_plus_attempts_count": {
                                                    "type": "integer"
                                                },
                                                "hard_bounces_count": {
                                                    "type": "integer"
                                                },
                                                "suppressed_unsubscribed_count": {
                                                    "type": "integer"
                                                },
                                                "unique_opened_rate": {
                                                    "type": "string"
                                                },
                                                "fail_rate": {
                                                    "type": "string"
                                                },
                                                "complained_rate": {
                                                    "type": "string"
                                                },
                                                "clicked_rate": {
                                                    "type": "string"
                                                },
                                                "unique_clicked_rate": {
                                                    "type": "string"
                                                },
                                                "bounce_rate": {
                                                    "type": "string"
                                                },
                                                "delayed_rate": {
                                                    "type": "string"
                                                },
                                                "permanent_fail_rate": {
                                                    "type": "string"
                                                },
                                                "temporary_fail_rate": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "dimensions",
                                        "metrics"
                                    ]
                                }
                            },
                            "resolution": {
                                "type": "string"
                            },
                            "start": {
                                "type": "string"
                            },
                            "aggregates": {
                                "type": "object",
                                "properties": {
                                    "metrics": {
                                        "type": "object",
                                        "properties": {
                                            "accepted_outgoing_count": {
                                                "type": "integer"
                                            },
                                            "delivered_smtp_count": {
                                                "type": "integer"
                                            },
                                            "accepted_count": {
                                                "type": "integer"
                                            },
                                            "delivered_http_count": {
                                                "type": "integer"
                                            },
                                            "accepted_incoming_count": {
                                                "type": "integer"
                                            },
                                            "delivered_optimized_count": {
                                                "type": "integer"
                                            },
                                            "stored_count": {
                                                "type": "integer"
                                            },
                                            "delivered_count": {
                                                "type": "integer"
                                            },
                                            "processed_count": {
                                                "type": "integer"
                                            },
                                            "sent_count": {
                                                "type": "integer"
                                            },
                                            "opened_count": {
                                                "type": "integer"
                                            },
                                            "unique_opened_count": {
                                                "type": "integer"
                                            },
                                            "clicked_count": {
                                                "type": "integer"
                                            },
                                            "unique_clicked_count": {
                                                "type": "integer"
                                            },
                                            "complained_count": {
                                                "type": "integer"
                                            },
                                            "permanent_failed_count": {
                                                "type": "integer"
                                            },
                                            "failed_count": {
                                                "type": "integer"
                                            },
                                            "rate_limit_count": {
                                                "type": "integer"
                                            },
                                            "unsubscribed_count": {
                                                "type": "integer"
                                            },
                                            "temporary_failed_count": {
                                                "type": "integer"
                                            },
                                            "permanent_failed_optimized_count": {
                                                "type": "integer"
                                            },
                                            "bounced_count": {
                                                "type": "integer"
                                            },
                                            "esp_block_count": {
                                                "type": "integer"
                                            },
                                            "webhook_count": {
                                                "type": "integer"
                                            },
                                            "delayed_bounce_count": {
                                                "type": "integer"
                                            },
                                            "soft_bounces_count": {
                                                "type": "integer"
                                            },
                                            "permanent_failed_old_count": {
                                                "type": "integer"
                                            },
                                            "suppressed_bounces_count": {
                                                "type": "integer"
                                            },
                                            "delivered_subsequent_count": {
                                                "type": "integer"
                                            },
                                            "delivered_rate": {
                                                "type": "string"
                                            },
                                            "delayed_first_attempt_count": {
                                                "type": "integer"
                                            },
                                            "unsubscribed_rate": {
                                                "type": "string"
                                            },
                                            "delivered_first_attempt_count": {
                                                "type": "integer"
                                            },
                                            "opened_rate": {
                                                "type": "string"
                                            },
                                            "suppressed_complaints_count": {
                                                "type": "integer"
                                            },
                                            "delivered_two_plus_attempts_count": {
                                                "type": "integer"
                                            },
                                            "hard_bounces_count": {
                                                "type": "integer"
                                            },
                                            "suppressed_unsubscribed_count": {
                                                "type": "integer"
                                            },
                                            "unique_opened_rate": {
                                                "type": "string"
                                            },
                                            "fail_rate": {
                                                "type": "string"
                                            },
                                            "complained_rate": {
                                                "type": "string"
                                            },
                                            "clicked_rate": {
                                                "type": "string"
                                            },
                                            "unique_clicked_rate": {
                                                "type": "string"
                                            },
                                            "bounce_rate": {
                                                "type": "string"
                                            },
                                            "delayed_rate": {
                                                "type": "string"
                                            },
                                            "permanent_fail_rate": {
                                                "type": "string"
                                            },
                                            "temporary_fail_rate": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "metrics"
                                ]
                            },
                            "dimensions": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "pagination": {
                                "type": "object",
                                "properties": {
                                    "sort": {
                                        "type": "string"
                                    },
                                    "skip": {
                                        "type": "integer"
                                    },
                                    "limit": {
                                        "type": "integer"
                                    },
                                    "total": {
                                        "type": "integer"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "limit",
                                    "skip",
                                    "sort",
                                    "total"
                                ]
                            },
                            "end": {
                                "type": "string"
                            },
                            "duration": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "aggregates",
                            "dimensions",
                            "end",
                            "items",
                            "pagination",
                            "resolution",
                            "start"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "Resolution": {
                "type": "string",
                "enum": [
                    "hour",
                    "day",
                    "month"
                ]
            },
            "DomainTagStatAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "tag": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "start": {
                                "type": "string"
                            },
                            "end": {
                                "type": "string"
                            },
                            "resolution": {
                                "$ref": "#/components/schemas/Resolution"
                            },
                            "stats": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "time": {
                                            "type": "string"
                                        },
                                        "accepted": {
                                            "type": "object",
                                            "properties": {
                                                "incoming": {
                                                    "type": "integer"
                                                },
                                                "outgoing": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "incoming",
                                                "outgoing",
                                                "total"
                                            ]
                                        },
                                        "delivered": {
                                            "type": "object",
                                            "properties": {
                                                "smtp": {
                                                    "type": "integer"
                                                },
                                                "http": {
                                                    "type": "integer"
                                                },
                                                "optimized": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "http",
                                                "optimized",
                                                "smtp",
                                                "total"
                                            ]
                                        },
                                        "opened": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "total"
                                            ]
                                        },
                                        "failed": {
                                            "type": "object",
                                            "properties": {
                                                "temporary": {
                                                    "type": "object",
                                                    "properties": {
                                                        "espblock": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "espblock",
                                                        "total"
                                                    ]
                                                },
                                                "permanent": {
                                                    "type": "object",
                                                    "properties": {
                                                        "suppress-bounce": {
                                                            "type": "integer"
                                                        },
                                                        "suppress-unsubscribe": {
                                                            "type": "integer"
                                                        },
                                                        "suppress-complaint": {
                                                            "type": "integer"
                                                        },
                                                        "bounce": {
                                                            "type": "integer"
                                                        },
                                                        "delayed-bounce": {
                                                            "type": "integer"
                                                        },
                                                        "webhook": {
                                                            "type": "integer"
                                                        },
                                                        "optimized": {
                                                            "type": "integer"
                                                        },
                                                        "total": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "additionalProperties": false,
                                                    "required": [
                                                        "bounce",
                                                        "delayed-bounce",
                                                        "optimized",
                                                        "suppress-bounce",
                                                        "suppress-complaint",
                                                        "suppress-unsubscribe",
                                                        "total",
                                                        "webhook"
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "permanent",
                                                "temporary"
                                            ]
                                        },
                                        "clicked": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "total"
                                            ]
                                        },
                                        "unsubscribed": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "total"
                                            ]
                                        },
                                        "complained": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "total"
                                            ]
                                        },
                                        "stored": {
                                            "type": "object",
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "total"
                                            ]
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "time"
                                    ]
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "description",
                            "end",
                            "resolution",
                            "start",
                            "stats",
                            "tag"
                        ]
                    }
                },
                "required": [
                    "body"
                ]
            },
            "DomainTagCountriesAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "tag": {
                                "type": "string"
                            },
                            "country": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "clicked": {
                                            "type": "integer"
                                        },
                                        "complained": {
                                            "type": "integer"
                                        },
                                        "opened": {
                                            "type": "integer"
                                        },
                                        "unique_clicked": {
                                            "type": "integer"
                                        },
                                        "unique_opened": {
                                            "type": "integer"
                                        },
                                        "unsubscribed": {
                                            "type": "integer"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "clicked",
                                        "complained",
                                        "opened",
                                        "unique_clicked",
                                        "unique_opened",
                                        "unsubscribed"
                                    ]
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "country",
                            "tag"
                        ]
                    }
                },
                "required": [
                    "body"
                ]
            },
            "DomainTagProvidersAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "tag": {
                                "type": "string"
                            },
                            "provider": {
                                "type": "object",
                                "additionalProperties": {
                                    "type": "object",
                                    "properties": {
                                        "accepted": {
                                            "type": "integer"
                                        },
                                        "clicked": {
                                            "type": "integer"
                                        },
                                        "complained": {
                                            "type": "integer"
                                        },
                                        "delivered": {
                                            "type": "integer"
                                        },
                                        "opened": {
                                            "type": "integer"
                                        },
                                        "unique_clicked": {
                                            "type": "integer"
                                        },
                                        "unique_opened": {
                                            "type": "integer"
                                        },
                                        "unsubscribed": {
                                            "type": "integer"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "accepted",
                                        "clicked",
                                        "complained",
                                        "delivered",
                                        "opened",
                                        "unique_clicked",
                                        "unique_opened",
                                        "unsubscribed"
                                    ]
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "provider",
                            "tag"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "DomainTagDevicesAPIResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "tag": {
                                "type": "string"
                            },
                            "device": {
                                "type": "object",
                                "properties": {
                                    "desktop": {
                                        "type": "object",
                                        "properties": {
                                            "clicked": {
                                                "type": "integer"
                                            },
                                            "complained": {
                                                "type": "integer"
                                            },
                                            "opened": {
                                                "type": "integer"
                                            },
                                            "unique_clicked": {
                                                "type": "integer"
                                            },
                                            "unique_opened": {
                                                "type": "integer"
                                            },
                                            "unsubscribed": {
                                                "type": "integer"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "clicked",
                                            "complained",
                                            "opened",
                                            "unique_clicked",
                                            "unique_opened",
                                            "unsubscribed"
                                        ]
                                    },
                                    "mobile": {
                                        "type": "object",
                                        "properties": {
                                            "clicked": {
                                                "type": "integer"
                                            },
                                            "complained": {
                                                "type": "integer"
                                            },
                                            "opened": {
                                                "type": "integer"
                                            },
                                            "unique_clicked": {
                                                "type": "integer"
                                            },
                                            "unique_opened": {
                                                "type": "integer"
                                            },
                                            "unsubscribed": {
                                                "type": "integer"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "clicked",
                                            "complained",
                                            "opened",
                                            "unique_clicked",
                                            "unique_opened",
                                            "unsubscribed"
                                        ]
                                    },
                                    "tablet": {
                                        "type": "object",
                                        "properties": {
                                            "clicked": {
                                                "type": "integer"
                                            },
                                            "complained": {
                                                "type": "integer"
                                            },
                                            "opened": {
                                                "type": "integer"
                                            },
                                            "unique_clicked": {
                                                "type": "integer"
                                            },
                                            "unique_opened": {
                                                "type": "integer"
                                            },
                                            "unsubscribed": {
                                                "type": "integer"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "clicked",
                                            "complained",
                                            "opened",
                                            "unique_clicked",
                                            "unique_opened",
                                            "unsubscribed"
                                        ]
                                    },
                                    "unknown": {
                                        "type": "object",
                                        "properties": {
                                            "clicked": {
                                                "type": "integer"
                                            },
                                            "complained": {
                                                "type": "integer"
                                            },
                                            "opened": {
                                                "type": "integer"
                                            },
                                            "unique_clicked": {
                                                "type": "integer"
                                            },
                                            "unique_opened": {
                                                "type": "integer"
                                            },
                                            "unsubscribed": {
                                                "type": "integer"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "clicked",
                                            "complained",
                                            "opened",
                                            "unique_clicked",
                                            "unique_opened",
                                            "unsubscribed"
                                        ]
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "desktop",
                                    "mobile",
                                    "tablet",
                                    "unknown"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "device",
                            "tag"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "CreateDomainTemplateAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "template": {
                                "$ref": "#/components/schemas/import(\"/home/cyber/Dokumenty/git-projects/private/spacebar-test-station/server/node_modules/mailgun.js/Types/Interfaces/Domains/DomainTemplates\",{with:{\"resolution-mode\":\"import\"}}).IDomainTemplate"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message",
                            "template"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "ListDomainTemplatesAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/import(\"/home/cyber/Dokumenty/git-projects/private/spacebar-test-station/server/node_modules/mailgun.js/Types/Interfaces/Domains/DomainTemplates\",{with:{\"resolution-mode\":\"import\"}}).IDomainTemplate"
                                }
                            },
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    },
                                    "previous": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items",
                            "paging"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "GetDomainTemplateAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "template": {
                                "$ref": "#/components/schemas/import(\"/home/cyber/Dokumenty/git-projects/private/spacebar-test-station/server/node_modules/mailgun.js/Types/Interfaces/Domains/DomainTemplates\",{with:{\"resolution-mode\":\"import\"}}).IDomainTemplate"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "template"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "UpdateOrDeleteDomainTemplateAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "template": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "name"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message",
                            "template"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "NotificationAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "CreateDomainTemplateVersionAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "template": {
                                "$ref": "#/components/schemas/import(\"/home/cyber/Dokumenty/git-projects/private/spacebar-test-station/server/node_modules/mailgun.js/Types/Interfaces/Domains/DomainTemplates\",{with:{\"resolution-mode\":\"import\"}}).IDomainTemplate"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message",
                            "template"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "MutateDomainTemplateVersionAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "template": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "version": {
                                        "type": "object",
                                        "properties": {
                                            "tag": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "tag"
                                        ]
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "name",
                                    "version"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message",
                            "template"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "ListDomainTemplateVersionsAPIResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "template": {
                                "type": "object",
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "description": {
                                        "type": "string"
                                    },
                                    "createdAt": {
                                        "type": "string"
                                    },
                                    "createdBy": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "string"
                                    },
                                    "versions": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "tag": {
                                                    "type": "string"
                                                },
                                                "engine": {
                                                    "type": "string"
                                                },
                                                "mjml": {
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                },
                                                "comment": {
                                                    "type": "string"
                                                },
                                                "active": {
                                                    "type": "boolean"
                                                },
                                                "id": {
                                                    "type": "string"
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "active",
                                                "comment",
                                                "createdAt",
                                                "engine",
                                                "id",
                                                "mjml",
                                                "tag"
                                            ]
                                        }
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "createdAt",
                                    "createdBy",
                                    "description",
                                    "id",
                                    "name",
                                    "versions"
                                ]
                            },
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "type": "string"
                                    },
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "paging",
                            "template"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "DomainTrackingResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "tracking": {
                                "type": "object",
                                "properties": {
                                    "click": {
                                        "type": "object",
                                        "properties": {
                                            "active": {
                                                "type": "boolean"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "active"
                                        ]
                                    },
                                    "open": {
                                        "type": "object",
                                        "properties": {
                                            "active": {
                                                "type": "boolean"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "active"
                                        ]
                                    },
                                    "unsubscribe": {
                                        "type": "object",
                                        "properties": {
                                            "active": {
                                                "type": "boolean"
                                            },
                                            "html_footer": {
                                                "type": "string"
                                            },
                                            "text_footer": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "active",
                                            "html_footer",
                                            "text_footer"
                                        ]
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "click",
                                    "open",
                                    "unsubscribe"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "tracking"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "UpdateDomainTrackingResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "integer"
                    },
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "open": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "active"
                                ]
                            },
                            "click": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "enum": [
                                            false,
                                            "htmlonly",
                                            true
                                        ]
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "active"
                                ]
                            },
                            "unsubscribe": {
                                "type": "object",
                                "properties": {
                                    "active": {
                                        "type": "boolean"
                                    },
                                    "html_footer": {
                                        "type": "string"
                                    },
                                    "text_footer": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "active",
                                    "html_footer",
                                    "text_footer"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "GetDomainTrackingCertificateResponse": {
                "type": "object",
                "properties": {
                    "responseStatusCode": {
                        "type": "integer"
                    },
                    "status": {
                        "type": "string"
                    },
                    "error": {
                        "type": "string"
                    },
                    "certificate": {
                        "type": "string"
                    }
                },
                "required": [
                    "certificate",
                    "error",
                    "responseStatusCode",
                    "status"
                ]
            },
            "GenerateDomainTrackingCertificateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "location",
                    "message",
                    "status"
                ]
            },
            "RegenerateDomainTrackingCertificateResponse": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string"
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "location",
                    "message",
                    "status"
                ]
            },
            "EventsResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "minItems": 0,
                                "maxItems": 0
                            },
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "type": "string"
                                    },
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items",
                            "paging"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "MailingListValidationResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "download_url": {
                        "type": "object",
                        "properties": {
                            "csv": {
                                "type": "string"
                            },
                            "json": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "csv",
                            "json"
                        ]
                    },
                    "id": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "records_processed": {
                        "type": "integer"
                    },
                    "summary": {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "object",
                                "properties": {
                                    "catch_all": {
                                        "type": "integer"
                                    },
                                    "deliverable": {
                                        "type": "integer"
                                    },
                                    "do_not_send": {
                                        "type": "integer"
                                    },
                                    "undeliverable": {
                                        "type": "integer"
                                    },
                                    "unknown": {
                                        "type": "integer"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "catch_all",
                                    "deliverable",
                                    "do_not_send",
                                    "undeliverable",
                                    "unknown"
                                ]
                            },
                            "risk": {
                                "type": "object",
                                "properties": {
                                    "high": {
                                        "type": "integer"
                                    },
                                    "low": {
                                        "type": "integer"
                                    },
                                    "medium": {
                                        "type": "integer"
                                    },
                                    "unknown": {
                                        "type": "integer"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "high",
                                    "low",
                                    "medium",
                                    "unknown"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "result",
                            "risk"
                        ]
                    }
                },
                "required": [
                    "download_url",
                    "id",
                    "quantity",
                    "records_processed",
                    "status",
                    "summary"
                ]
            },
            "MailingListValidationApiResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string"
                    },
                    "download_url": {
                        "type": "object",
                        "properties": {
                            "csv": {
                                "type": "string"
                            },
                            "json": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "csv",
                            "json"
                        ]
                    },
                    "id": {
                        "type": "string"
                    },
                    "quantity": {
                        "type": "integer"
                    },
                    "records_processed": {
                        "type": "integer"
                    },
                    "summary": {
                        "type": "object",
                        "properties": {
                            "result": {
                                "type": "object",
                                "properties": {
                                    "catch_all": {
                                        "type": "integer"
                                    },
                                    "deliverable": {
                                        "type": "integer"
                                    },
                                    "do_not_send": {
                                        "type": "integer"
                                    },
                                    "undeliverable": {
                                        "type": "integer"
                                    },
                                    "unknown": {
                                        "type": "integer"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "catch_all",
                                    "deliverable",
                                    "do_not_send",
                                    "undeliverable",
                                    "unknown"
                                ]
                            },
                            "risk": {
                                "type": "object",
                                "properties": {
                                    "high": {
                                        "type": "integer"
                                    },
                                    "low": {
                                        "type": "integer"
                                    },
                                    "medium": {
                                        "type": "integer"
                                    },
                                    "unknown": {
                                        "type": "integer"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "high",
                                    "low",
                                    "medium",
                                    "unknown"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "result",
                            "risk"
                        ]
                    },
                    "created_at": {
                        "type": "integer"
                    }
                },
                "required": [
                    "created_at",
                    "download_url",
                    "id",
                    "quantity",
                    "records_processed",
                    "status",
                    "summary"
                ]
            },
            "MailingListApiResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "access_level": {
                                            "type": "string"
                                        },
                                        "address": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string"
                                        },
                                        "description": {
                                            "type": "string"
                                        },
                                        "members_count": {
                                            "type": "integer"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "reply_preference": {
                                            "type": [
                                                "null",
                                                "string"
                                            ]
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "access_level",
                                        "address",
                                        "created_at",
                                        "description",
                                        "members_count",
                                        "name",
                                        "reply_preference"
                                    ]
                                }
                            },
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "type": "string"
                                    },
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items",
                            "paging"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "NewMultipleMembersResponse": {
                "type": "object",
                "properties": {
                    "list": {
                        "type": "object",
                        "properties": {
                            "access_level": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            },
                            "created_at": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "members_count": {
                                "type": "integer"
                            },
                            "name": {
                                "type": "string"
                            },
                            "reply_preference": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "access_level",
                            "address",
                            "created_at",
                            "description",
                            "members_count",
                            "name",
                            "reply_preference"
                        ]
                    },
                    "message": {
                        "type": "string"
                    },
                    "task-id": {
                        "type": "string"
                    }
                },
                "required": [
                    "list",
                    "message",
                    "task-id"
                ]
            },
            "MailListMembersResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "address": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        },
                                        "subscribed": {
                                            "type": "boolean"
                                        },
                                        "vars": {
                                            "type": "object",
                                            "additionalProperties": {}
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "address",
                                        "name",
                                        "subscribed",
                                        "vars"
                                    ]
                                }
                            },
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "type": "string"
                                    },
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items",
                            "paging"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "SuppressionListResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "items": {
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "code": {
                                                    "type": "integer"
                                                },
                                                "error": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "address",
                                                "code",
                                                "created_at",
                                                "error"
                                            ]
                                        }
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "created_at": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "address",
                                                "created_at"
                                            ]
                                        }
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "address": {
                                                    "type": "string"
                                                },
                                                "tags": {},
                                                "created_at": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "address",
                                                "created_at",
                                                "tags"
                                            ]
                                        }
                                    },
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "type": {
                                                    "type": "string"
                                                },
                                                "value": {
                                                    "type": "string"
                                                },
                                                "reason": {
                                                    "type": "string"
                                                },
                                                "createdAt": {
                                                    "anyOf": [
                                                        {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        {
                                                            "type": "string"
                                                        }
                                                    ]
                                                }
                                            },
                                            "additionalProperties": false,
                                            "required": [
                                                "createdAt",
                                                "reason",
                                                "type",
                                                "value"
                                            ]
                                        }
                                    }
                                ]
                            },
                            "paging": {
                                "type": "object",
                                "properties": {
                                    "previous": {
                                        "type": "string"
                                    },
                                    "first": {
                                        "type": "string"
                                    },
                                    "last": {
                                        "type": "string"
                                    },
                                    "next": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "first",
                                    "last",
                                    "next",
                                    "previous"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "items",
                            "paging"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "SuppressionResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "$ref": "#/components/schemas/import(\"/home/cyber/Dokumenty/git-projects/private/spacebar-test-station/server/node_modules/mailgun.js/Types/Types/Suppressions/Suppressions\",{with:{\"resolution-mode\":\"import\"}}).SuppressionDataType"
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "SuppressionDestroyResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            },
                            "address": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "SuppressionCreationResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            },
                            "value": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message"
                        ]
                    },
                    "status": {
                        "type": "integer"
                    }
                },
                "required": [
                    "body",
                    "status"
                ]
            },
            "Body": {
                "type": "object"
            },
            "AxiosHeaders": {
                "type": "object"
            },
            "AxiosResponseHeaders": {
                "properties": {}
            },
            "AxiosRequestHeaders": {
                "properties": {
                    "Accept": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "$ref": "#/components/schemas/AxiosHeaders"
                            },
                            {
                                "type": [
                                    "null",
                                    "string",
                                    "integer",
                                    "boolean"
                                ]
                            }
                        ]
                    },
                    "Authorization": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "$ref": "#/components/schemas/AxiosHeaders"
                            },
                            {
                                "type": [
                                    "null",
                                    "string",
                                    "integer",
                                    "boolean"
                                ]
                            }
                        ]
                    },
                    "Content-Encoding": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "$ref": "#/components/schemas/AxiosHeaders"
                            },
                            {
                                "type": [
                                    "null",
                                    "string",
                                    "integer",
                                    "boolean"
                                ]
                            }
                        ]
                    },
                    "Content-Length": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "$ref": "#/components/schemas/AxiosHeaders"
                            },
                            {
                                "type": [
                                    "null",
                                    "string",
                                    "integer",
                                    "boolean"
                                ]
                            }
                        ]
                    },
                    "User-Agent": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "$ref": "#/components/schemas/AxiosHeaders"
                            },
                            {
                                "type": [
                                    "null",
                                    "string",
                                    "integer",
                                    "boolean"
                                ]
                            }
                        ]
                    },
                    "Content-Type": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "$ref": "#/components/schemas/AxiosHeaders"
                            },
                            {
                                "type": [
                                    "null",
                                    "string",
                                    "integer",
                                    "boolean"
                                ]
                            }
                        ]
                    }
                }
            },
            "AxiosRequestTransformer": {
                "type": "object"
            },
            "AxiosResponseTransformer": {
                "type": "object"
            },
            "CustomParamsSerializer": {
                "type": "object"
            },
            "ParamsSerializerOptions": {
                "type": "object",
                "properties": {
                    "encode": {
                        "$ref": "#/components/schemas/ParamEncoder"
                    },
                    "serialize": {
                        "$ref": "#/components/schemas/CustomParamsSerializer"
                    },
                    "visitor": {
                        "$ref": "#/components/schemas/SerializerVisitor"
                    },
                    "dots": {
                        "type": "boolean"
                    },
                    "metaTokens": {
                        "type": "boolean"
                    },
                    "indexes": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "ParamEncoder": {
                "type": "object"
            },
            "SerializerVisitor": {
                "type": "object"
            },
            "AxiosAdapter": {
                "type": "object"
            },
            "AxiosAdapterConfig": {
                "anyOf": [
                    {
                        "additionalProperties": false,
                        "type": "object",
                        "properties": {}
                    },
                    {
                        "$ref": "#/components/schemas/AxiosAdapter"
                    },
                    {
                        "enum": [
                            "fetch",
                            "http",
                            "xhr"
                        ],
                        "type": "string"
                    }
                ]
            },
            "AxiosBasicCredentials": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "password",
                    "username"
                ]
            },
            "AxiosProxyConfig": {
                "type": "object",
                "properties": {
                    "host": {
                        "type": "string"
                    },
                    "port": {
                        "type": "integer"
                    },
                    "auth": {
                        "$ref": "#/components/schemas/AxiosBasicCredentials"
                    },
                    "protocol": {
                        "type": "string"
                    }
                },
                "required": [
                    "host",
                    "port"
                ]
            },
            "CancelToken": {
                "type": "object",
                "properties": {
                    "promise": {
                        "$ref": "#/components/schemas/Promise<Cancel>"
                    },
                    "reason": {
                        "$ref": "#/components/schemas/Cancel"
                    }
                },
                "required": [
                    "promise"
                ]
            },
            "Cancel": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "TransitionalOptions": {
                "type": "object",
                "properties": {
                    "silentJSONParsing": {
                        "type": "boolean"
                    },
                    "forcedJSONParsing": {
                        "type": "boolean"
                    },
                    "clarifyTimeoutError": {
                        "type": "boolean"
                    }
                }
            },
            "GenericAbortSignal": {
                "type": "object",
                "properties": {
                    "aborted": {
                        "type": "boolean"
                    },
                    "onabort": {
                        "anyOf": [
                            {
                                "type": "object",
                                "additionalProperties": false
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "addEventListener": {
                        "type": "object",
                        "additionalProperties": false
                    },
                    "removeEventListener": {
                        "type": "object",
                        "additionalProperties": false
                    }
                },
                "required": [
                    "aborted"
                ]
            },
            "FormSerializerOptions": {
                "type": "object",
                "properties": {
                    "visitor": {
                        "$ref": "#/components/schemas/SerializerVisitor"
                    },
                    "dots": {
                        "type": "boolean"
                    },
                    "metaTokens": {
                        "type": "boolean"
                    },
                    "indexes": {
                        "type": "boolean",
                        "nullable": true
                    }
                }
            },
            "AddressFamily": {
                "enum": [
                    4,
                    6
                ],
                "type": "number"
            },
            "default": {
                "description": "Dispatcher is the core API used to dispatch requests.",
                "type": "object"
            },
            "LibraryResponse": {
                "type": "object",
                "properties": {
                    "response": {
                        "$ref": "#/components/schemas/AxiosResponse<Body,any,{}>"
                    },
                    "body": {
                        "$ref": "#/components/schemas/Body"
                    }
                },
                "required": [
                    "body",
                    "response"
                ]
            },
            "Data": {
                "type": "object"
            },
            "Params": {
                "type": "object"
            },
            "LibraryLocalResponse": {
                "type": "object",
                "properties": {
                    "body": {
                        "$ref": "#/components/schemas/Data"
                    },
                    "params": {
                        "$ref": "#/components/schemas/Params"
                    },
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "params",
                    "url"
                ]
            },
            "BulkContactManagement.Job": {
                "type": "object",
                "properties": {
                    "JobID": {
                        "type": "integer"
                    }
                },
                "required": [
                    "JobID"
                ]
            },
            "JobResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulkContactManagement.Job"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "BulkContactManagement.CSVImport": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "ErrTreshold": {
                        "type": "integer"
                    },
                    "ImportOptions": {
                        "type": "string"
                    },
                    "Method": {
                        "$ref": "#/components/schemas/BulkContactManagement.ImportCSVMethod"
                    },
                    "AliveAt": {
                        "type": "string"
                    },
                    "ContactsListID": {
                        "type": "integer"
                    },
                    "Count": {
                        "type": "integer"
                    },
                    "Current": {
                        "type": "integer"
                    },
                    "DataID": {
                        "type": "integer"
                    },
                    "Errcount": {
                        "type": "integer"
                    },
                    "JobEnd": {
                        "type": "string"
                    },
                    "JobStart": {
                        "type": "string"
                    },
                    "RequestAt": {
                        "type": "string"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/BulkContactManagement.CSVImportStatus"
                    }
                },
                "required": [
                    "AliveAt",
                    "ContactsListID",
                    "Count",
                    "Current",
                    "DataID",
                    "ErrTreshold",
                    "Errcount",
                    "ID",
                    "ImportOptions",
                    "JobEnd",
                    "JobStart",
                    "Method",
                    "RequestAt",
                    "Status"
                ]
            },
            "BulkContactManagement.ImportCSVMethod": {
                "type": "string",
                "enum": [
                    "addforce",
                    "addnoforce",
                    "remove",
                    "unsub",
                    "excludemarketing",
                    "includemarketing"
                ]
            },
            "BulkContactManagement.CSVImportStatus": {
                "type": "string",
                "enum": [
                    "Upload",
                    "Completed",
                    "Abort"
                ]
            },
            "CSVImportResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BulkContactManagement.CSVImport"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "ContactSubscription.ListRecipient": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "IsUnsubscribed": {
                        "type": "boolean"
                    },
                    "ContactID": {
                        "type": "integer"
                    },
                    "ListID": {
                        "type": "integer"
                    },
                    "ListName": {
                        "type": "string"
                    },
                    "SubscribedAt": {
                        "type": "string"
                    },
                    "UnsubscribedAt": {
                        "type": "string"
                    }
                },
                "required": [
                    "ContactID",
                    "ID",
                    "IsUnsubscribed",
                    "ListID",
                    "ListName",
                    "SubscribedAt",
                    "UnsubscribedAt"
                ]
            },
            "ListRecipientResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ContactSubscription.ListRecipient"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "Template.Categories": {
                "type": "string",
                "enum": [
                    "full",
                    "basic",
                    "newsletter",
                    "e-commerce",
                    "events",
                    "travel",
                    "sports",
                    "welcome",
                    "contact-property-update",
                    "support",
                    "invoice",
                    "anniversary",
                    "account",
                    "activation"
                ]
            },
            "Template.EditMode": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3,
                    4
                ]
            },
            "Template.OwnerType": {
                "type": "string",
                "enum": [
                    "apikey",
                    "user",
                    "global"
                ]
            },
            "Template.Purposes": {
                "type": "string",
                "enum": [
                    "marketing",
                    "transactional",
                    "automation"
                ]
            },
            "TemplateResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "additionalProperties": false,
                        "type": "array",
                        "properties": {
                            "Author": {
                                "type": "string"
                            },
                            "Categories": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Template.Categories"
                                }
                            },
                            "Copyright": {
                                "type": "string"
                            },
                            "Description": {
                                "type": "string"
                            },
                            "EditMode": {
                                "$ref": "#/components/schemas/Template.EditMode"
                            },
                            "IsStarred": {
                                "type": "boolean"
                            },
                            "IsTextPartGenerationEnabled": {
                                "type": "boolean"
                            },
                            "Locale": {
                                "type": "string"
                            },
                            "Name": {
                                "type": "string"
                            },
                            "OwnerType": {
                                "$ref": "#/components/schemas/Template.OwnerType"
                            },
                            "Presets": {
                                "type": "string"
                            },
                            "Purposes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Template.Purposes"
                                }
                            },
                            "ID": {
                                "type": "integer"
                            },
                            "OwnerId": {
                                "type": "integer"
                            },
                            "Previews": {
                                "type": "string"
                            },
                            "CreatedAt": {
                                "type": "string"
                            },
                            "LastUpdatedAt": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "Author",
                            "Categories",
                            "Copyright",
                            "CreatedAt",
                            "Description",
                            "EditMode",
                            "ID",
                            "IsStarred",
                            "IsTextPartGenerationEnabled",
                            "LastUpdatedAt",
                            "Locale",
                            "Name",
                            "OwnerId",
                            "OwnerType",
                            "Presets",
                            "Previews",
                            "Purposes"
                        ]
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "Template.Headers": {
                "type": "object",
                "properties": {
                    "From": {
                        "type": "string"
                    },
                    "Subject": {
                        "type": "string"
                    },
                    "Reply-to": {
                        "type": "string"
                    }
                },
                "required": [
                    "From",
                    "Reply-to",
                    "Subject"
                ]
            },
            "TemplateDetailContentResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "Headers": {
                                    "$ref": "#/components/schemas/Template.Headers"
                                },
                                "Html-part": {
                                    "type": "string"
                                },
                                "Text-part": {
                                    "type": "string"
                                },
                                "MJMLContent": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "Headers",
                                "Html-part",
                                "MJMLContent",
                                "Text-part"
                            ]
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "Webhook.EventCallbackUrl": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "EventType": {
                        "$ref": "#/components/schemas/Webhook.EventType"
                    },
                    "IsBackup": {
                        "type": "boolean"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/Webhook.Status"
                    },
                    "APIKeyID": {
                        "type": "integer"
                    },
                    "Version": {
                        "$ref": "#/components/schemas/Webhook.Version"
                    },
                    "Url": {
                        "type": "string"
                    }
                },
                "required": [
                    "APIKeyID",
                    "EventType",
                    "ID",
                    "IsBackup",
                    "Status",
                    "Url",
                    "Version"
                ]
            },
            "Webhook.EventType": {
                "type": "string",
                "enum": [
                    "open",
                    "click",
                    "bounce",
                    "spam",
                    "blocked",
                    "unsub",
                    "sent"
                ]
            },
            "Webhook.Status": {
                "type": "string",
                "enum": [
                    "dead",
                    "alive"
                ]
            },
            "Webhook.Version": {
                "enum": [
                    1,
                    2
                ],
                "type": "number"
            },
            "EventCallbackUrlResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Webhook.EventCallbackUrl"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "Parse.ParseRoute": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "APIKeyID": {
                        "type": "integer"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "Url": {
                        "type": "string"
                    }
                },
                "required": [
                    "APIKeyID",
                    "Email",
                    "ID",
                    "Url"
                ]
            },
            "ParseRouteResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Parse.ParseRoute"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "Sender.Sender": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "EmailType": {
                        "$ref": "#/components/schemas/Sender.EmailType"
                    },
                    "IsDefaultSender": {
                        "type": "boolean"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "CreatedAt": {
                        "type": "string"
                    },
                    "DNSID": {
                        "type": "integer"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "Filename": {
                        "type": "string"
                    },
                    "Status": {
                        "$ref": "#/components/schemas/Sender.SenderStatus"
                    }
                },
                "required": [
                    "CreatedAt",
                    "DNSID",
                    "Email",
                    "EmailType",
                    "Filename",
                    "ID",
                    "IsDefaultSender",
                    "Name",
                    "Status"
                ]
            },
            "Sender.EmailType": {
                "type": "string",
                "enum": [
                    "transactional",
                    "bulk",
                    "unknown"
                ]
            },
            "Sender.SenderStatus": {
                "type": "string",
                "enum": [
                    "Inactive",
                    "Active",
                    "Deleted"
                ]
            },
            "SenderResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sender.Sender"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "Metasender.MetaSender": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "Description": {
                        "type": "string"
                    },
                    "CreatedAt": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "Filename": {
                        "type": "string"
                    },
                    "IsEnabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "CreatedAt",
                    "Description",
                    "Email",
                    "Filename",
                    "ID",
                    "IsEnabled"
                ]
            },
            "MetaSenderResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Metasender.MetaSender"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "APIKeyConfiguration.ApiKey": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "ACL": {
                        "type": "string"
                    },
                    "IsActive": {
                        "type": "boolean"
                    },
                    "APIKey": {
                        "type": "string"
                    },
                    "CreatedAt": {
                        "type": "string"
                    },
                    "IsMaster": {
                        "type": "boolean"
                    },
                    "Name": {
                        "type": "string"
                    },
                    "QuarantineValue": {
                        "type": "integer"
                    },
                    "Runlevel": {
                        "$ref": "#/components/schemas/APIKeyConfiguration.RunLevel"
                    },
                    "SecretKey": {
                        "type": "string"
                    },
                    "TrackHost": {
                        "type": "string"
                    },
                    "UserID": {
                        "type": "integer"
                    }
                },
                "required": [
                    "ACL",
                    "APIKey",
                    "CreatedAt",
                    "ID",
                    "IsActive",
                    "IsMaster",
                    "Name",
                    "QuarantineValue",
                    "Runlevel",
                    "SecretKey",
                    "TrackHost",
                    "UserID"
                ]
            },
            "APIKeyConfiguration.RunLevel": {
                "type": "string",
                "enum": [
                    "Normal",
                    "Softlock",
                    "Hardlock"
                ]
            },
            "ApiKeyResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/APIKeyConfiguration.ApiKey"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "AccountSetting.MyProfile": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "AddressCity": {
                        "type": "string"
                    },
                    "AddressCountry": {
                        "type": "string"
                    },
                    "AddressPostalCode": {
                        "type": "string"
                    },
                    "AddressState": {
                        "type": "string"
                    },
                    "AddressStreet": {
                        "type": "string"
                    },
                    "BillingEmail": {
                        "type": "string"
                    },
                    "BirthdayAt": {
                        "type": "string"
                    },
                    "CompanyName": {
                        "type": "string"
                    },
                    "CompanyNumOfEmployees": {
                        "type": "string"
                    },
                    "ContactPhone": {
                        "type": "string"
                    },
                    "EstimatedVolume": {
                        "type": "integer"
                    },
                    "Features": {
                        "type": "string"
                    },
                    "Firstname": {
                        "type": "string"
                    },
                    "Industry": {
                        "type": "integer"
                    },
                    "JobTitle": {
                        "type": "string"
                    },
                    "Lastname": {
                        "type": "string"
                    },
                    "VATNumber": {
                        "type": "string"
                    },
                    "Website": {
                        "type": "string"
                    },
                    "VAT": {
                        "type": "integer"
                    },
                    "UserID": {
                        "type": "integer"
                    }
                },
                "required": [
                    "AddressCity",
                    "AddressCountry",
                    "AddressPostalCode",
                    "AddressState",
                    "AddressStreet",
                    "BillingEmail",
                    "BirthdayAt",
                    "CompanyName",
                    "CompanyNumOfEmployees",
                    "ContactPhone",
                    "EstimatedVolume",
                    "Features",
                    "Firstname",
                    "ID",
                    "Industry",
                    "JobTitle",
                    "Lastname",
                    "UserID",
                    "VAT",
                    "VATNumber",
                    "Website"
                ]
            },
            "MyProfileResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountSetting.MyProfile"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "AccountSetting.User": {
                "type": "object",
                "properties": {
                    "ID": {
                        "type": "integer"
                    },
                    "ACL": {
                        "type": "string"
                    },
                    "Email": {
                        "type": "string"
                    },
                    "LastLoginAt": {
                        "type": "string"
                    },
                    "Locale": {
                        "type": "string"
                    },
                    "Timezone": {
                        "type": "string"
                    },
                    "CreatedAt": {
                        "type": "string"
                    },
                    "FirstIp": {
                        "type": "string"
                    },
                    "LastIp": {
                        "type": "string"
                    },
                    "MaxAllowedAPIKeys": {
                        "type": "integer"
                    },
                    "Username": {
                        "type": "string"
                    },
                    "WarnedRatelimitAt": {
                        "type": "string"
                    }
                },
                "required": [
                    "ACL",
                    "CreatedAt",
                    "Email",
                    "FirstIp",
                    "ID",
                    "LastIp",
                    "LastLoginAt",
                    "Locale",
                    "MaxAllowedAPIKeys",
                    "Timezone",
                    "Username",
                    "WarnedRatelimitAt"
                ]
            },
            "UserResponse": {
                "type": "object",
                "properties": {
                    "Count": {
                        "type": "integer"
                    },
                    "Total": {
                        "type": "integer"
                    },
                    "Data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AccountSetting.User"
                        }
                    }
                },
                "required": [
                    "Count",
                    "Data",
                    "Total"
                ]
            },
            "FieldErrorResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "$ref": "#/components/schemas/Record<string,ObjectErrorContent>"
                    }
                },
                "required": [
                    "code",
                    "errors",
                    "message"
                ]
            },
            "ApplicationCreateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "team_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "ApplicationModifySchema": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "cover_image": {
                        "type": "string"
                    },
                    "interactions_endpoint_url": {
                        "type": "string"
                    },
                    "max_participants": {
                        "type": "integer",
                        "nullable": true
                    },
                    "name": {
                        "type": "string"
                    },
                    "privacy_policy_url": {
                        "type": "string"
                    },
                    "role_connections_verification_url": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "terms_of_service_url": {
                        "type": "string"
                    },
                    "bot_public": {
                        "type": "boolean"
                    },
                    "bot_require_code_grant": {
                        "type": "boolean"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "custom_install_url": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    }
                }
            },
            "Snowflake": {
                "description": "A container for useful snowflake-related methods.",
                "type": "object"
            },
            "SendableApplicationCommandDataSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "type": {
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "version": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "application_command": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationCommandOption"
                        }
                    },
                    "target_id": {
                        "description": "A container for useful snowflake-related methods.",
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {},
                            "additionalProperties": true
                        }
                    }
                },
                "required": [
                    "id",
                    "name",
                    "version"
                ]
            },
            "SendableMessageComponentDataSchema": {
                "type": "object",
                "properties": {
                    "component_type": {
                        "enum": [
                            0,
                            1,
                            2,
                            3,
                            4,
                            5,
                            6,
                            7,
                            8
                        ],
                        "type": "number"
                    },
                    "type": {
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "number"
                    },
                    "custom_id": {
                        "type": "string"
                    },
                    "values": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/Snowflake"
                                }
                            }
                        ]
                    }
                },
                "required": [
                    "custom_id"
                ]
            },
            "SendableModalSubmitDataSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/Snowflake"
                    },
                    "custom_id": {
                        "type": "string"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadAttachmentRequestSchema"
                        }
                    }
                },
                "required": [
                    "custom_id",
                    "id"
                ]
            },
            "GameActivity": {
                "type": "object",
                "properties": {
                    "activity_level": {
                        "type": "integer"
                    },
                    "activity_score": {
                        "type": "integer"
                    }
                },
                "required": [
                    "activity_level",
                    "activity_score"
                ]
            },
            "GuildBadgeType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    17,
                    18,
                    19,
                    20,
                    21,
                    22,
                    23,
                    24,
                    25,
                    26,
                    27,
                    28,
                    29,
                    30
                ]
            },
            "GuildTrait": {
                "type": "object",
                "properties": {
                    "emoji_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "emoji_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "emoji_animated": {
                        "type": "boolean"
                    },
                    "label": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer"
                    }
                },
                "required": [
                    "emoji_animated",
                    "emoji_id",
                    "emoji_name",
                    "label",
                    "position"
                ]
            },
            "GuildVisibilityLevel": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3
                ]
            },
            "GuildProfileResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon_hash": {
                        "type": "string",
                        "nullable": true
                    },
                    "member_count": {
                        "type": "integer"
                    },
                    "online_count": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "brand_color_primary": {
                        "type": "string"
                    },
                    "banner_hash": {
                        "type": "string",
                        "nullable": true
                    },
                    "game_application_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "game_activity": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GameActivity"
                        }
                    },
                    "tag": {
                        "type": "string",
                        "nullable": true
                    },
                    "badge": {
                        "$ref": "#/components/schemas/GuildBadgeType"
                    },
                    "badge_color_primary": {
                        "type": "string"
                    },
                    "badge_color_secondary": {
                        "type": "string"
                    },
                    "badge_hash": {
                        "type": "string"
                    },
                    "traits": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildTrait"
                        }
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/GuildVisibilityLevel"
                    },
                    "custom_banner_hash": {
                        "type": "string",
                        "nullable": true
                    },
                    "premium_subscription_count": {
                        "type": "integer"
                    },
                    "premium_tier": {
                        "type": "integer"
                    }
                },
                "required": [
                    "badge",
                    "badge_color_primary",
                    "badge_color_secondary",
                    "badge_hash",
                    "banner_hash",
                    "brand_color_primary",
                    "custom_banner_hash",
                    "description",
                    "features",
                    "game_activity",
                    "game_application_ids",
                    "icon_hash",
                    "id",
                    "member_count",
                    "name",
                    "online_count",
                    "premium_subscription_count",
                    "premium_tier",
                    "tag",
                    "traits",
                    "visibility"
                ]
            },
            "GuildAvailableSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "available": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "available",
                    "id"
                ]
            },
            "ActivitySchema": {
                "type": "object",
                "properties": {
                    "afk": {
                        "type": "boolean"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity"
                        }
                    },
                    "since": {
                        "type": "integer"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "Status": {
                "enum": [
                    "dnd",
                    "idle",
                    "invisible",
                    "offline",
                    "online"
                ],
                "type": "string"
            },
            "Activity": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ActivityType"
                    },
                    "url": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "integer"
                    },
                    "timestamps": {
                        "type": "object",
                        "properties": {
                            "start": {
                                "type": "integer"
                            },
                            "end": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "end",
                            "start"
                        ]
                    },
                    "application_id": {
                        "type": "string"
                    },
                    "details": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "emoji": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "animated": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "animated",
                            "name"
                        ]
                    },
                    "party": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "size": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        },
                        "additionalProperties": false
                    },
                    "assets": {
                        "type": "object",
                        "properties": {
                            "large_image": {
                                "type": "string"
                            },
                            "large_text": {
                                "type": "string"
                            },
                            "small_image": {
                                "type": "string"
                            },
                            "small_text": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "secrets": {
                        "type": "object",
                        "properties": {
                            "join": {
                                "type": "string"
                            },
                            "spectate": {
                                "type": "string"
                            },
                            "match": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "instance": {
                        "type": "boolean"
                    },
                    "flags": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sync_id": {
                        "type": "string"
                    },
                    "metadata": {
                        "type": "object",
                        "properties": {
                            "context_uri": {
                                "type": "string"
                            },
                            "album_id": {
                                "type": "string"
                            },
                            "artist_ids": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "album_id",
                            "artist_ids"
                        ]
                    },
                    "session_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "flags",
                    "name",
                    "session_id",
                    "type"
                ]
            },
            "ActivityType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2,
                    4,
                    5
                ]
            },
            "IdentifySchema": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "properties": {
                        "type": "object",
                        "properties": {
                            "os": {
                                "type": "string"
                            },
                            "os_atch": {
                                "type": "string"
                            },
                            "browser": {
                                "type": "string"
                            },
                            "device": {
                                "type": "string"
                            },
                            "$os": {
                                "type": "string"
                            },
                            "$browser": {
                                "type": "string"
                            },
                            "$device": {
                                "type": "string"
                            },
                            "browser_user_agent": {
                                "type": "string"
                            },
                            "browser_version": {
                                "type": "string"
                            },
                            "os_version": {
                                "type": "string"
                            },
                            "referrer": {
                                "type": "string"
                            },
                            "referring_domain": {
                                "type": "string"
                            },
                            "referrer_current": {
                                "type": "string"
                            },
                            "referring_domain_current": {
                                "type": "string"
                            },
                            "release_channel": {
                                "enum": [
                                    "canary",
                                    "dev",
                                    "ptb",
                                    "stable"
                                ],
                                "type": "string"
                            },
                            "client_build_number": {
                                "type": "integer"
                            },
                            "client_event_source": {
                                "type": "string"
                            },
                            "client_version": {
                                "type": "string"
                            },
                            "system_locale": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "intents": {
                        "type": "number"
                    },
                    "presence": {
                        "$ref": "#/components/schemas/ActivitySchema"
                    },
                    "compress": {
                        "type": "boolean"
                    },
                    "large_threshold": {
                        "type": "integer"
                    },
                    "largeThreshold": {
                        "type": "integer"
                    },
                    "shard": {
                        "minItems": 2,
                        "maxItems": 2,
                        "type": "array",
                        "items": {
                            "type": "number"
                        }
                    },
                    "guild_subscriptions": {
                        "type": "boolean"
                    },
                    "capabilities": {
                        "type": "integer"
                    },
                    "client_state": {
                        "type": "object",
                        "properties": {
                            "guild_hashes": {},
                            "highest_last_message_id": {
                                "type": [
                                    "string",
                                    "integer"
                                ]
                            },
                            "read_state_version": {
                                "type": "integer"
                            },
                            "user_guild_settings_version": {
                                "type": "integer"
                            },
                            "user_settings_version": {
                                "type": "integer"
                            },
                            "useruser_guild_settings_version": {
                                "type": "integer"
                            },
                            "private_channels_version": {
                                "type": "integer"
                            },
                            "guild_versions": {},
                            "api_code_version": {
                                "type": "integer"
                            },
                            "initial_guild_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "clientState": {
                        "type": "object",
                        "properties": {
                            "guildHashes": {},
                            "highestLastMessageId": {
                                "type": [
                                    "string",
                                    "integer"
                                ]
                            },
                            "readStateVersion": {
                                "type": "integer"
                            },
                            "userGuildSettingsVersion": {
                                "type": "integer"
                            },
                            "useruserGuildSettingsVersion": {
                                "type": "integer"
                            },
                            "guildVersions": {},
                            "apiCodeVersion": {
                                "type": "integer"
                            },
                            "initialGuildId": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false
                    },
                    "v": {
                        "type": "integer"
                    }
                },
                "required": [
                    "properties",
                    "token"
                ]
            },
            "StreamCreateSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "call",
                            "guild"
                        ],
                        "type": "string"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "preferred_region": {
                        "type": "string"
                    }
                },
                "required": [
                    "channel_id",
                    "type"
                ]
            },
            "StreamDeleteSchema": {
                "type": "object",
                "properties": {
                    "stream_key": {
                        "type": "string"
                    }
                },
                "required": [
                    "stream_key"
                ]
            },
            "StreamWatchSchema": {
                "type": "object",
                "properties": {
                    "stream_key": {
                        "type": "string"
                    }
                },
                "required": [
                    "stream_key"
                ]
            },
            "APIErrorResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer"
                    },
                    "message": {
                        "type": "string"
                    },
                    "errors": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "properties": {
                                "_errors": {
                                    "type": "array",
                                    "items": {
                                        "type": "object",
                                        "properties": {
                                            "message": {
                                                "type": "string"
                                            },
                                            "code": {
                                                "type": "string"
                                            }
                                        },
                                        "additionalProperties": false,
                                        "required": [
                                            "code",
                                            "message"
                                        ]
                                    }
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "_errors"
                            ]
                        }
                    }
                },
                "required": [
                    "code",
                    "errors",
                    "message"
                ]
            },
            "CaptchaRequiredResponse": {
                "type": "object",
                "properties": {
                    "captcha_key": {
                        "type": "string"
                    },
                    "captcha_sitekey": {
                        "type": "string"
                    },
                    "captcha_service": {
                        "type": "string"
                    }
                },
                "required": [
                    "captcha_key",
                    "captcha_service",
                    "captcha_sitekey"
                ]
            },
            "APIErrorOrCaptchaResponse": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/APIErrorResponse"
                    },
                    {
                        "$ref": "#/components/schemas/CaptchaRequiredResponse"
                    }
                ]
            },
            "Classification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "classification_type": {
                        "$ref": "#/components/schemas/ClassificationType"
                    },
                    "description": {
                        "type": "string"
                    },
                    "explainer_link": {
                        "type": "string"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClassificationAction"
                        }
                    },
                    "max_expiration_time": {
                        "type": "string"
                    },
                    "flagged_content": {
                        "type": "array",
                        "items": {}
                    },
                    "appeal_status": {
                        "$ref": "#/components/schemas/AppealStatus"
                    },
                    "is_coppa": {
                        "type": "boolean"
                    },
                    "is_spam": {
                        "type": "boolean"
                    },
                    "appeal_ingestion_type": {
                        "$ref": "#/components/schemas/AppealIngestionType"
                    }
                },
                "required": [
                    "actions",
                    "appeal_ingestion_type",
                    "appeal_status",
                    "classification_type",
                    "description",
                    "explainer_link",
                    "flagged_content",
                    "id",
                    "is_coppa",
                    "is_spam",
                    "max_expiration_time"
                ]
            },
            "ClassificationType": {
                "type": "number",
                "enum": [
                    1,
                    100,
                    200,
                    210,
                    220,
                    230,
                    240,
                    250,
                    280,
                    290,
                    310,
                    320,
                    390,
                    600,
                    650,
                    711,
                    720,
                    3010,
                    3030,
                    4000,
                    4010,
                    4130,
                    4140,
                    5010,
                    5090,
                    5305,
                    5411,
                    5440,
                    5485
                ]
            },
            "ClassificationAction": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "action_type": {
                        "$ref": "#/components/schemas/ClassificationActionType"
                    },
                    "descriptions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "action_type",
                    "descriptions",
                    "id"
                ]
            },
            "ClassificationActionType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    20,
                    22
                ]
            },
            "AppealStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/AppealStatusValue"
                    }
                },
                "required": [
                    "status"
                ]
            },
            "AppealStatusValue": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3
                ]
            },
            "AppealIngestionType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2
                ]
            },
            "GuildClassification": {
                "type": "object",
                "properties": {
                    "guild_metadata": {
                        "$ref": "#/components/schemas/GuildMetadata"
                    },
                    "id": {
                        "type": "string"
                    },
                    "classification_type": {
                        "$ref": "#/components/schemas/ClassificationType"
                    },
                    "description": {
                        "type": "string"
                    },
                    "explainer_link": {
                        "type": "string"
                    },
                    "actions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ClassificationAction"
                        }
                    },
                    "max_expiration_time": {
                        "type": "string"
                    },
                    "flagged_content": {
                        "type": "array",
                        "items": {}
                    },
                    "appeal_status": {
                        "$ref": "#/components/schemas/AppealStatus"
                    },
                    "is_coppa": {
                        "type": "boolean"
                    },
                    "is_spam": {
                        "type": "boolean"
                    },
                    "appeal_ingestion_type": {
                        "$ref": "#/components/schemas/AppealIngestionType"
                    }
                },
                "required": [
                    "actions",
                    "appeal_ingestion_type",
                    "appeal_status",
                    "classification_type",
                    "description",
                    "explainer_link",
                    "flagged_content",
                    "guild_metadata",
                    "id",
                    "is_coppa",
                    "is_spam",
                    "max_expiration_time"
                ]
            },
            "GuildMetadata": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "member_type": {
                        "$ref": "#/components/schemas/GuildMemberType"
                    }
                },
                "required": [
                    "member_type",
                    "name"
                ]
            },
            "GuildMemberType": {
                "type": "number",
                "enum": [
                    1,
                    2
                ]
            },
            "AccountStandingState": {
                "type": "number",
                "enum": [
                    100,
                    200,
                    300,
                    400,
                    500
                ]
            },
            "AppealEligibility": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3
                ]
            },
            "AccountStandingResponse": {
                "type": "object",
                "properties": {
                    "classifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Classification"
                        }
                    },
                    "guild_classifications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildClassification"
                        }
                    },
                    "account_standing": {
                        "type": "object",
                        "properties": {
                            "state": {
                                "$ref": "#/components/schemas/AccountStandingState"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "state"
                        ]
                    },
                    "is_dsa_eligible": {
                        "type": "boolean"
                    },
                    "username": {
                        "type": "string"
                    },
                    "discriminator": {
                        "type": "string"
                    },
                    "is_appeal_eligible": {
                        "type": "boolean"
                    },
                    "appeal_eligibility": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AppealEligibility"
                        }
                    }
                },
                "required": [
                    "account_standing",
                    "appeal_eligibility",
                    "classifications",
                    "discriminator",
                    "guild_classifications",
                    "is_appeal_eligible",
                    "is_dsa_eligible",
                    "username"
                ]
            },
            "BackupCodesChallengeResponse": {
                "type": "object",
                "properties": {
                    "nonce": {
                        "type": "string"
                    },
                    "regenerate_nonce": {
                        "type": "string"
                    }
                },
                "required": [
                    "nonce",
                    "regenerate_nonce"
                ]
            },
            "CollectiblesCategoryItem": {
                "type": "object",
                "properties": {
                    "sku_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "store_listing_id": {
                        "type": "string"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "unpublished_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "styles": {
                        "$ref": "#/components/schemas/CollectiblesCategoryStyle"
                    },
                    "logo": {
                        "type": "string"
                    },
                    "hero_ranking": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "mobile_bg": {
                        "type": "string",
                        "nullable": true
                    },
                    "pdp_bg": {
                        "type": "string",
                        "nullable": true
                    },
                    "success_modal_bg": {
                        "type": "string",
                        "nullable": true
                    },
                    "mobile_banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "featured_block": {
                        "type": "string",
                        "nullable": true
                    },
                    "hero_banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "wide_banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "hero_logo": {
                        "type": "string",
                        "nullable": true
                    },
                    "products": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectiblesCategoryProductItem"
                        }
                    },
                    "banner_asset": {
                        "$ref": "#/components/schemas/StaticAnimatedAsset"
                    },
                    "hero_banner_asset": {
                        "$ref": "#/components/schemas/StaticAnimatedAsset"
                    }
                },
                "required": [
                    "banner",
                    "featured_block",
                    "hero_banner",
                    "hero_logo",
                    "hero_ranking",
                    "logo",
                    "mobile_banner",
                    "mobile_bg",
                    "name",
                    "pdp_bg",
                    "products",
                    "sku_id",
                    "store_listing_id",
                    "styles",
                    "success_modal_bg",
                    "summary",
                    "unpublished_at",
                    "wide_banner"
                ]
            },
            "CollectiblesCategoryStyle": {
                "type": "object",
                "properties": {
                    "background_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "button_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "confetti_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "background_colors",
                    "button_colors",
                    "confetti_colors"
                ]
            },
            "CollectiblesCategoryProductItem": {
                "type": "object",
                "properties": {
                    "sku_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "store_listing_id": {
                        "type": "string"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "unpublished_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "styles": {
                        "$ref": "#/components/schemas/CollectiblesCategoryStyle"
                    },
                    "prices": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "properties": {
                                "country_prices": {
                                    "$ref": "#/components/schemas/CountryPrice"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "country_prices"
                            ]
                        }
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductItem"
                        }
                    },
                    "type": {
                        "type": "integer"
                    },
                    "premium_type": {
                        "type": "integer"
                    },
                    "category_sku_id": {
                        "type": "string"
                    },
                    "google_sku_ids": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "variants": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductItemVariant"
                        }
                    }
                },
                "required": [
                    "banner",
                    "category_sku_id",
                    "google_sku_ids",
                    "items",
                    "name",
                    "premium_type",
                    "prices",
                    "sku_id",
                    "store_listing_id",
                    "styles",
                    "summary",
                    "type",
                    "unpublished_at"
                ]
            },
            "CountryPrice": {
                "type": "object",
                "properties": {
                    "country_code": {
                        "type": "string"
                    },
                    "prices": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceEntry"
                        }
                    }
                },
                "required": [
                    "country_code",
                    "prices"
                ]
            },
            "PriceEntry": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "integer"
                    },
                    "currency": {
                        "type": "string"
                    },
                    "exponent": {
                        "type": "integer"
                    }
                },
                "required": [
                    "amount",
                    "currency",
                    "exponent"
                ]
            },
            "ProductItem": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    },
                    "sku_id": {
                        "type": "string"
                    },
                    "asset": {
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "palette": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "sku_id",
                    "type"
                ]
            },
            "ProductItemVariant": {
                "type": "object",
                "properties": {
                    "sku_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_localizations": {
                        "type": "null"
                    },
                    "summary": {
                        "type": "string"
                    },
                    "summary_localizations": {
                        "type": "null"
                    },
                    "store_listing_id": {
                        "type": "string"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "unpublished_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "styles": {
                        "$ref": "#/components/schemas/CollectiblesCategoryStyle"
                    },
                    "prices": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object",
                            "properties": {
                                "country_prices": {
                                    "$ref": "#/components/schemas/CountryPrice"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "country_prices"
                            ]
                        }
                    },
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ProductItem"
                        }
                    },
                    "type": {
                        "type": "integer"
                    },
                    "premium_type": {
                        "type": "integer"
                    },
                    "category_sku_id": {
                        "type": "string"
                    },
                    "google_sku_ids": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        }
                    },
                    "base_variant_sku_id": {
                        "type": "string"
                    },
                    "base_variant_name": {
                        "type": "string"
                    },
                    "variant_label": {
                        "type": "string"
                    },
                    "variant_value": {
                        "type": "string"
                    }
                },
                "required": [
                    "base_variant_name",
                    "base_variant_sku_id",
                    "category_sku_id",
                    "items",
                    "name",
                    "name_localizations",
                    "premium_type",
                    "prices",
                    "sku_id",
                    "store_listing_id",
                    "summary",
                    "summary_localizations",
                    "type",
                    "variant_label",
                    "variant_value"
                ]
            },
            "StaticAnimatedAsset": {
                "type": "object",
                "properties": {
                    "animated": {
                        "type": "string",
                        "nullable": true
                    },
                    "static": {
                        "type": "string"
                    }
                },
                "required": [
                    "animated",
                    "static"
                ]
            },
            "CollectiblesCategoriesResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/CollectiblesCategoryItem"
                }
            },
            "CollectiblesMarketingItem": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "integer"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "title": {
                        "type": "string"
                    },
                    "body": {
                        "type": "string"
                    }
                },
                "required": [
                    "body",
                    "title",
                    "type",
                    "version"
                ]
            },
            "CollectiblesMarketingResponse": {
                "type": "object",
                "properties": {
                    "marketings": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/CollectiblesMarketingItem"
                        }
                    }
                },
                "required": [
                    "marketings"
                ]
            },
            "AnyShopBlock": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/ItemRowShopBlock"
                    },
                    {
                        "$ref": "#/components/schemas/BundleTileRowShopBlock"
                    },
                    {
                        "$ref": "#/components/schemas/ItemCollectionShopBlock"
                    }
                ]
            },
            "ItemRowShopBlock": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "integer",
                        "const": 0
                    },
                    "category_sku_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "category_store_listing_id": {
                        "type": "string"
                    },
                    "banner_asset": {
                        "$ref": "#/components/schemas/StaticAnimatedAsset"
                    },
                    "logo_url": {
                        "type": "string"
                    },
                    "unpublished_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "summary": {
                        "type": "string"
                    },
                    "ranked_sku_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "banner_asset",
                    "category_sku_id",
                    "category_store_listing_id",
                    "logo_url",
                    "name",
                    "ranked_sku_ids",
                    "summary",
                    "type",
                    "unpublished_at"
                ]
            },
            "BundleTileRowShopBlock": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "integer",
                        "const": 1
                    },
                    "subblocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShopBlockSubBlock"
                        }
                    }
                },
                "required": [
                    "subblocks",
                    "type"
                ]
            },
            "ShopBlockSubBlock": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "integer"
                    },
                    "category_store_listing_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "unpublished_at": {
                        "type": "string",
                        "nullable": true
                    },
                    "banner_url": {
                        "type": "string"
                    },
                    "body_text": {
                        "type": "string",
                        "nullable": true
                    },
                    "banner_text_color": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "banner_text_color",
                    "banner_url",
                    "body_text",
                    "category_store_listing_id",
                    "name",
                    "type",
                    "unpublished_at"
                ]
            },
            "ItemCollectionShopBlock": {
                "type": "object",
                "properties": {
                    "type": {
                        "type": "integer",
                        "const": 2
                    },
                    "ranked_sku_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "sorted_sku_ids": {
                        "type": "object",
                        "properties": {
                            "recommended": {
                                "anyOf": [
                                    {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    {
                                        "type": "null"
                                    }
                                ]
                            },
                            "popular": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "popular",
                            "recommended"
                        ]
                    }
                },
                "required": [
                    "ranked_sku_ids",
                    "sorted_sku_ids",
                    "type"
                ]
            },
            "CollectiblesShopResponse": {
                "type": "object",
                "properties": {
                    "shop_blocks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AnyShopBlock"
                        }
                    },
                    "categories": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CollectiblesCategoryItem"
                        }
                    }
                },
                "required": [
                    "categories",
                    "shop_blocks"
                ]
            },
            "Guild": {
                "type": "object",
                "properties": {
                    "afk_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "afk_channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "afk_timeout": {
                        "type": "integer"
                    },
                    "bans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ban"
                        }
                    },
                    "banner": {
                        "type": "string"
                    },
                    "default_message_notifications": {
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "discovery_splash": {
                        "type": "string"
                    },
                    "explicit_content_filter": {
                        "type": "integer"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "primary_category_id": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "large": {
                        "type": "boolean",
                        "default": false
                    },
                    "max_members": {
                        "type": "integer"
                    },
                    "max_presences": {
                        "type": "integer"
                    },
                    "max_video_channel_users": {
                        "type": "integer"
                    },
                    "member_count": {
                        "type": "integer"
                    },
                    "presence_count": {
                        "type": "integer"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Channel"
                        }
                    },
                    "template_id": {
                        "type": "string"
                    },
                    "template": {
                        "$ref": "#/components/schemas/Template"
                    },
                    "emojis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Emoji"
                        }
                    },
                    "stickers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sticker"
                        }
                    },
                    "invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invite"
                        }
                    },
                    "voice_states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VoiceState"
                        }
                    },
                    "webhooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Webhook"
                        }
                    },
                    "mfa_level": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "preferred_locale": {
                        "type": "string"
                    },
                    "premium_subscription_count": {
                        "type": "integer"
                    },
                    "premium_tier": {
                        "type": "integer"
                    },
                    "public_updates_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "public_updates_channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "rules_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "rules_channel": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "splash": {
                        "type": "string"
                    },
                    "system_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "system_channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "system_channel_flags": {
                        "type": "integer"
                    },
                    "unavailable": {
                        "type": "boolean",
                        "default": false
                    },
                    "verification_level": {
                        "type": "integer"
                    },
                    "welcome_screen": {
                        "$ref": "#/components/schemas/GuildWelcomeScreen",
                        "description": "DEPRECATED: Look at the new Guild onboarding screens."
                    },
                    "widget_channel_id": {
                        "type": "string"
                    },
                    "widget_channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "widget_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "nsfw_level": {
                        "type": "integer"
                    },
                    "nsfw": {
                        "type": "boolean",
                        "default": false
                    },
                    "parent": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "integer"
                    },
                    "premium_progress_bar_enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "channel_ordering": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "bans",
                    "channel_ordering",
                    "channels",
                    "emojis",
                    "features",
                    "id",
                    "invites",
                    "members",
                    "name",
                    "nsfw",
                    "premium_progress_bar_enabled",
                    "public_updates_channel_id",
                    "roles",
                    "stickers",
                    "template",
                    "unavailable",
                    "voice_states",
                    "webhooks",
                    "welcome_screen",
                    "widget_enabled"
                ]
            },
            "Channel": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "type": {
                        "$ref": "#/components/schemas/ChannelType"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Recipient"
                        }
                    },
                    "last_message_id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "parent_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "parent": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "last_pin_timestamp": {
                        "type": "integer"
                    },
                    "default_auto_archive_duration": {
                        "type": "integer"
                    },
                    "permission_overwrites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChannelPermissionOverwrite"
                        }
                    },
                    "video_quality_mode": {
                        "type": "integer"
                    },
                    "bitrate": {
                        "type": "integer"
                    },
                    "user_limit": {
                        "type": "integer"
                    },
                    "nsfw": {
                        "type": "boolean",
                        "default": false
                    },
                    "rate_limit_per_user": {
                        "type": "integer"
                    },
                    "topic": {
                        "type": "string"
                    },
                    "invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invite"
                        }
                    },
                    "retention_policy_id": {
                        "type": "string"
                    },
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Message"
                        }
                    },
                    "voice_states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VoiceState"
                        }
                    },
                    "read_states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReadState"
                        }
                    },
                    "webhooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Webhook"
                        }
                    },
                    "flags": {
                        "type": "integer",
                        "default": 0
                    },
                    "default_thread_rate_limit_per_user": {
                        "type": "integer",
                        "default": 0
                    },
                    "position": {
                        "description": "Must be calculated Channel.calculatePosition",
                        "type": "integer"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "created_at",
                    "flags",
                    "id",
                    "nsfw",
                    "owner",
                    "parent_id",
                    "position",
                    "type"
                ]
            },
            "ChannelType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    33,
                    34,
                    35,
                    64,
                    255
                ]
            },
            "Recipient": {
                "type": "object",
                "properties": {
                    "channel_id": {
                        "type": "string"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "closed": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "channel_id",
                    "closed",
                    "id",
                    "user",
                    "user_id"
                ]
            },
            "User": {
                "type": "object",
                "properties": {
                    "username": {
                        "type": "string"
                    },
                    "discriminator": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "accent_color": {
                        "type": "integer"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "theme_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "desktop": {
                        "type": "boolean",
                        "default": false
                    },
                    "mobile": {
                        "type": "boolean",
                        "default": false
                    },
                    "premium": {
                        "type": "boolean"
                    },
                    "premium_type": {
                        "type": "integer"
                    },
                    "bot": {
                        "type": "boolean",
                        "default": false
                    },
                    "bio": {
                        "type": "string",
                        "default": ""
                    },
                    "system": {
                        "type": "boolean",
                        "default": false
                    },
                    "nsfw_allowed": {
                        "type": "boolean",
                        "default": true
                    },
                    "mfa_enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "webauthn_enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "totp_secret": {
                        "type": "string",
                        "default": ""
                    },
                    "totp_last_ticket": {
                        "type": "string",
                        "default": ""
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "premium_since": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "verified": {
                        "type": "boolean"
                    },
                    "disabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "deleted": {
                        "type": "boolean",
                        "default": false
                    },
                    "email": {
                        "type": "string"
                    },
                    "flags": {
                        "type": "integer",
                        "default": 0
                    },
                    "public_flags": {
                        "type": "integer",
                        "default": 0
                    },
                    "purchased_flags": {
                        "type": "integer",
                        "default": 0
                    },
                    "premium_usage_flags": {
                        "type": "integer",
                        "default": 0
                    },
                    "rights": {
                        "type": "string"
                    },
                    "sessions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Session"
                        }
                    },
                    "relationships": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Relationship"
                        }
                    },
                    "connected_accounts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConnectedAccount"
                        }
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "valid_tokens_since": {
                                "type": "string",
                                "format": "date-time"
                            },
                            "hash": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "valid_tokens_since"
                        ]
                    },
                    "fingerprints": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "settings": {
                        "$ref": "#/components/schemas/UserSettings"
                    },
                    "extended_settings": {
                        "type": "string",
                        "default": "{}"
                    },
                    "security_keys": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SecurityKey"
                        }
                    },
                    "badge_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "bio",
                    "bot",
                    "connected_accounts",
                    "created_at",
                    "data",
                    "deleted",
                    "desktop",
                    "disabled",
                    "discriminator",
                    "extended_settings",
                    "fingerprints",
                    "flags",
                    "id",
                    "mfa_enabled",
                    "mobile",
                    "nsfw_allowed",
                    "premium",
                    "premium_since",
                    "premium_type",
                    "premium_usage_flags",
                    "public_flags",
                    "purchased_flags",
                    "relationships",
                    "rights",
                    "security_keys",
                    "sessions",
                    "system",
                    "username",
                    "verified",
                    "webauthn_enabled"
                ]
            },
            "Session": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "activities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Activity"
                        }
                    },
                    "client_info": {
                        "type": "object",
                        "properties": {
                            "client": {
                                "type": "string"
                            },
                            "os": {
                                "type": "string"
                            },
                            "version": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "client",
                            "os",
                            "version"
                        ]
                    },
                    "client_status": {
                        "$ref": "#/components/schemas/ClientStatus"
                    },
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "activities",
                    "client_info",
                    "client_status",
                    "id",
                    "session_id",
                    "status",
                    "user",
                    "user_id"
                ]
            },
            "ClientStatus": {
                "type": "object",
                "properties": {
                    "desktop": {
                        "type": "string"
                    },
                    "mobile": {
                        "type": "string"
                    },
                    "web": {
                        "type": "string"
                    },
                    "embedded": {
                        "type": "string"
                    }
                }
            },
            "Relationship": {
                "type": "object",
                "properties": {
                    "from_id": {
                        "type": "string"
                    },
                    "from": {
                        "$ref": "#/components/schemas/User"
                    },
                    "to_id": {
                        "type": "string"
                    },
                    "to": {
                        "$ref": "#/components/schemas/User"
                    },
                    "nickname": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/RelationshipType"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "from",
                    "from_id",
                    "id",
                    "to",
                    "to_id",
                    "type"
                ]
            },
            "RelationshipType": {
                "type": "number",
                "enum": [
                    4,
                    3,
                    2,
                    1
                ]
            },
            "ConnectedAccount": {
                "type": "object",
                "properties": {
                    "external_id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "friend_sync": {
                        "type": "boolean",
                        "default": false
                    },
                    "name": {
                        "type": "string"
                    },
                    "revoked": {
                        "type": "boolean",
                        "default": false
                    },
                    "show_activity": {
                        "type": "integer",
                        "default": 0
                    },
                    "type": {
                        "type": "string"
                    },
                    "verified": {
                        "type": "boolean",
                        "default": true
                    },
                    "visibility": {
                        "type": "integer",
                        "default": 0
                    },
                    "integrations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "metadata_": {},
                    "metadata_visibility": {
                        "type": "integer",
                        "default": 0
                    },
                    "two_way_link": {
                        "type": "boolean",
                        "default": false
                    },
                    "token_data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/ConnectedAccountTokenData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "external_id",
                    "id",
                    "name",
                    "type",
                    "user",
                    "user_id"
                ]
            },
            "ConnectedAccountTokenData": {
                "type": "object",
                "properties": {
                    "access_token": {
                        "type": "string"
                    },
                    "token_type": {
                        "type": "string"
                    },
                    "scope": {
                        "type": "string"
                    },
                    "refresh_token": {
                        "type": "string"
                    },
                    "expires_in": {
                        "type": "integer"
                    },
                    "expires_at": {
                        "type": "integer"
                    },
                    "fetched_at": {
                        "type": "integer"
                    }
                },
                "required": [
                    "access_token",
                    "fetched_at"
                ]
            },
            "UserSettings": {
                "type": "object",
                "properties": {
                    "index": {
                        "type": "string"
                    },
                    "afk_timeout": {
                        "type": "integer",
                        "default": 3600
                    },
                    "allow_accessibility_detection": {
                        "type": "boolean",
                        "default": true
                    },
                    "animate_emoji": {
                        "type": "boolean",
                        "default": true
                    },
                    "animate_stickers": {
                        "type": "integer",
                        "default": 0
                    },
                    "contact_sync_enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "convert_emoticons": {
                        "type": "boolean",
                        "default": false
                    },
                    "custom_status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CustomStatus"
                            },
                            {
                                "type": "null"
                            }
                        ],
                        "default": null
                    },
                    "default_guilds_restricted": {
                        "type": "boolean",
                        "default": false
                    },
                    "detect_platform_accounts": {
                        "type": "boolean",
                        "default": false
                    },
                    "developer_mode": {
                        "type": "boolean",
                        "default": true
                    },
                    "disable_games_tab": {
                        "type": "boolean",
                        "default": true
                    },
                    "enable_tts_command": {
                        "type": "boolean",
                        "default": false
                    },
                    "explicit_content_filter": {
                        "type": "integer",
                        "default": 0
                    },
                    "friend_discovery_flags": {
                        "type": "integer",
                        "default": 0
                    },
                    "friend_source_flags": {
                        "$ref": "#/components/schemas/FriendSourceFlags"
                    },
                    "gateway_connected": {
                        "type": "boolean",
                        "default": false
                    },
                    "gif_auto_play": {
                        "type": "boolean",
                        "default": false
                    },
                    "guild_folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildFolder"
                        },
                        "default": []
                    },
                    "guild_positions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "inline_attachment_media": {
                        "type": "boolean",
                        "default": true
                    },
                    "inline_embed_media": {
                        "type": "boolean",
                        "default": true
                    },
                    "locale": {
                        "type": "string",
                        "default": "en-US"
                    },
                    "message_display_compact": {
                        "type": "boolean",
                        "default": false
                    },
                    "native_phone_integration_enabled": {
                        "type": "boolean",
                        "default": true
                    },
                    "render_embeds": {
                        "type": "boolean",
                        "default": true
                    },
                    "render_reactions": {
                        "type": "boolean",
                        "default": true
                    },
                    "restricted_guilds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "show_current_game": {
                        "type": "boolean",
                        "default": true
                    },
                    "status": {
                        "enum": [
                            "dnd",
                            "idle",
                            "invisible",
                            "offline",
                            "online"
                        ],
                        "type": "string",
                        "default": "online"
                    },
                    "stream_notifications_enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "theme": {
                        "enum": [
                            "dark",
                            "light"
                        ],
                        "type": "string",
                        "default": "dark"
                    },
                    "timezone_offset": {
                        "type": "integer",
                        "default": 0
                    },
                    "view_nsfw_guilds": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "afk_timeout",
                    "allow_accessibility_detection",
                    "animate_emoji",
                    "animate_stickers",
                    "contact_sync_enabled",
                    "convert_emoticons",
                    "custom_status",
                    "default_guilds_restricted",
                    "detect_platform_accounts",
                    "developer_mode",
                    "disable_games_tab",
                    "enable_tts_command",
                    "explicit_content_filter",
                    "friend_discovery_flags",
                    "friend_source_flags",
                    "gateway_connected",
                    "gif_auto_play",
                    "guild_folders",
                    "guild_positions",
                    "index",
                    "inline_attachment_media",
                    "inline_embed_media",
                    "locale",
                    "message_display_compact",
                    "native_phone_integration_enabled",
                    "render_embeds",
                    "render_reactions",
                    "restricted_guilds",
                    "show_current_game",
                    "status",
                    "stream_notifications_enabled",
                    "theme",
                    "timezone_offset",
                    "view_nsfw_guilds"
                ]
            },
            "CustomStatus": {
                "type": "object",
                "properties": {
                    "emoji_id": {
                        "type": "string"
                    },
                    "emoji_name": {
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "integer"
                    },
                    "text": {
                        "type": "string"
                    }
                }
            },
            "FriendSourceFlags": {
                "type": "object",
                "properties": {
                    "all": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "all"
                ]
            },
            "GuildFolder": {
                "type": "object",
                "properties": {
                    "color": {
                        "type": "integer"
                    },
                    "guild_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "color",
                    "guild_ids",
                    "id",
                    "name"
                ]
            },
            "SecurityKey": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "key_id": {
                        "type": "string"
                    },
                    "public_key": {
                        "type": "string"
                    },
                    "counter": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "counter",
                    "id",
                    "key_id",
                    "name",
                    "public_key",
                    "user",
                    "user_id"
                ]
            },
            "ChannelPermissionOverwrite": {
                "type": "object",
                "properties": {
                    "allow": {
                        "type": "string"
                    },
                    "deny": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ChannelPermissionOverwriteType"
                    }
                },
                "required": [
                    "allow",
                    "deny",
                    "id",
                    "type"
                ]
            },
            "ChannelPermissionOverwriteType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2
                ]
            },
            "Invite": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "temporary": {
                        "type": "boolean"
                    },
                    "uses": {
                        "type": "integer"
                    },
                    "max_uses": {
                        "type": "integer"
                    },
                    "max_age": {
                        "type": "integer"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "expires_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "inviter_id": {
                        "type": "string"
                    },
                    "inviter": {
                        "$ref": "#/components/schemas/User"
                    },
                    "target_user_id": {
                        "type": "string"
                    },
                    "target_user": {
                        "type": "string"
                    },
                    "target_user_type": {
                        "type": "integer"
                    },
                    "vanity_url": {
                        "type": "boolean"
                    },
                    "flags": {
                        "type": "integer"
                    }
                },
                "required": [
                    "channel",
                    "channel_id",
                    "code",
                    "created_at",
                    "flags",
                    "guild",
                    "guild_id",
                    "inviter",
                    "max_age",
                    "max_uses",
                    "target_user_id",
                    "temporary",
                    "uses"
                ]
            },
            "Message": {
                "type": "object",
                "properties": {
                    "channel_id": {
                        "type": "string"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "author_id": {
                        "type": "string"
                    },
                    "author": {
                        "$ref": "#/components/schemas/User"
                    },
                    "member_id": {
                        "type": "string"
                    },
                    "member": {
                        "$ref": "#/components/schemas/Member"
                    },
                    "webhook_id": {
                        "type": "string"
                    },
                    "webhook": {
                        "$ref": "#/components/schemas/Webhook"
                    },
                    "application_id": {
                        "type": "string"
                    },
                    "application": {
                        "$ref": "#/components/schemas/Application"
                    },
                    "content": {
                        "type": "string"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "edited_timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "tts": {
                        "type": "boolean"
                    },
                    "mention_everyone": {
                        "type": "boolean"
                    },
                    "mentions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    },
                    "mention_roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "mention_channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Channel"
                        }
                    },
                    "sticker_items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sticker"
                        }
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "embeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Embed"
                        }
                    },
                    "reactions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Reaction"
                        }
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "pinned_at": {
                        "anyOf": [
                            {
                                "type": "string",
                                "format": "date-time"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "pinned": {
                        "type": "boolean"
                    },
                    "type": {
                        "$ref": "#/components/schemas/MessageType"
                    },
                    "activity": {
                        "type": "object",
                        "properties": {
                            "type": {
                                "type": "integer"
                            },
                            "party_id": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "party_id",
                            "type"
                        ]
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "message_reference": {
                        "type": "object",
                        "properties": {
                            "message_id": {
                                "type": "string"
                            },
                            "channel_id": {
                                "type": "string"
                            },
                            "guild_id": {
                                "type": "string"
                            },
                            "type": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message_id"
                        ]
                    },
                    "referenced_message": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Message"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "interaction": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/InteractionType"
                            },
                            "name": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "id",
                            "name",
                            "type"
                        ]
                    },
                    "interaction_metadata": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/InteractionType"
                            },
                            "user_id": {
                                "type": "string"
                            },
                            "authorizing_integration_owners": {
                                "type": "object",
                                "properties": {},
                                "additionalProperties": true
                            },
                            "name": {
                                "type": "string"
                            },
                            "command_type": {
                                "$ref": "#/components/schemas/ApplicationCommandType"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "authorizing_integration_owners",
                            "command_type",
                            "id",
                            "name",
                            "type",
                            "user_id"
                        ]
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActionRowComponent"
                        }
                    },
                    "poll": {
                        "$ref": "#/components/schemas/Poll"
                    },
                    "username": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "embeds",
                    "flags",
                    "id",
                    "mention_channels",
                    "mention_roles",
                    "mentions",
                    "pinned",
                    "reactions",
                    "timestamp",
                    "type"
                ]
            },
            "Member": {
                "type": "object",
                "properties": {
                    "index": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "nick": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "joined_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "premium_since": {
                        "type": "integer"
                    },
                    "deaf": {
                        "type": "boolean"
                    },
                    "mute": {
                        "type": "boolean"
                    },
                    "pending": {
                        "type": "boolean"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/UserGuildSettings"
                    },
                    "last_message_id": {
                        "type": "string"
                    },
                    "joined_by": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "theme_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "communication_disabled_until": {
                        "type": "string",
                        "format": "date-time"
                    }
                },
                "required": [
                    "banner",
                    "bio",
                    "communication_disabled_until",
                    "deaf",
                    "guild",
                    "guild_id",
                    "id",
                    "index",
                    "joined_at",
                    "joined_by",
                    "mute",
                    "pending",
                    "roles",
                    "settings",
                    "user"
                ]
            },
            "Role": {
                "type": "object",
                "properties": {
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "color": {
                        "type": "integer"
                    },
                    "hoist": {
                        "type": "boolean"
                    },
                    "managed": {
                        "type": "boolean"
                    },
                    "mentionable": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "unicode_emoji": {
                        "type": "string"
                    },
                    "tags": {
                        "type": "object",
                        "properties": {
                            "bot_id": {
                                "type": "string"
                            },
                            "integration_id": {
                                "type": "string"
                            },
                            "premium_subscriber": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "colors": {
                        "$ref": "#/components/schemas/RoleColors"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "color",
                    "colors",
                    "flags",
                    "guild",
                    "guild_id",
                    "hoist",
                    "id",
                    "managed",
                    "mentionable",
                    "name",
                    "permissions",
                    "position"
                ]
            },
            "RoleColors": {
                "type": "object",
                "properties": {
                    "primary_color": {
                        "type": "integer"
                    },
                    "secondary_color": {
                        "type": "integer"
                    },
                    "tertiary_color": {
                        "type": "integer"
                    }
                },
                "required": [
                    "primary_color"
                ]
            },
            "UserGuildSettings": {
                "type": "object",
                "properties": {
                    "channel_overrides": {
                        "anyOf": [
                            {
                                "type": "object",
                                "additionalProperties": {
                                    "$ref": "#/components/schemas/ChannelOverride"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "message_notifications": {
                        "type": "integer"
                    },
                    "mobile_push": {
                        "type": "boolean"
                    },
                    "mute_config": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MuteConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "muted": {
                        "type": "boolean"
                    },
                    "suppress_everyone": {
                        "type": "boolean"
                    },
                    "suppress_roles": {
                        "type": "boolean"
                    },
                    "version": {
                        "type": "integer"
                    },
                    "guild_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "mute_scheduled_events": {
                        "type": "boolean"
                    },
                    "hide_muted_channels": {
                        "type": "boolean"
                    },
                    "notify_highlights": {
                        "type": "integer",
                        "const": 0
                    }
                },
                "required": [
                    "channel_overrides",
                    "flags",
                    "guild_id",
                    "hide_muted_channels",
                    "message_notifications",
                    "mobile_push",
                    "mute_config",
                    "mute_scheduled_events",
                    "muted",
                    "notify_highlights",
                    "suppress_everyone",
                    "suppress_roles",
                    "version"
                ]
            },
            "ChannelOverride": {
                "type": "object",
                "properties": {
                    "message_notifications": {
                        "type": "integer"
                    },
                    "mute_config": {
                        "$ref": "#/components/schemas/MuteConfig"
                    },
                    "muted": {
                        "type": "boolean"
                    },
                    "channel_id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "channel_id",
                    "message_notifications",
                    "mute_config",
                    "muted"
                ]
            },
            "MuteConfig": {
                "type": "object",
                "properties": {
                    "end_time": {
                        "type": "integer"
                    },
                    "selected_time_window": {
                        "type": "integer"
                    }
                },
                "required": [
                    "end_time",
                    "selected_time_window"
                ]
            },
            "Webhook": {
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/WebhookType"
                    },
                    "name": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "application_id": {
                        "type": "string"
                    },
                    "application": {
                        "$ref": "#/components/schemas/Application"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "source_guild_id": {
                        "type": "string"
                    },
                    "source_guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "source_channel_id": {
                        "type": "string"
                    },
                    "source_channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "url": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "application",
                    "application_id",
                    "avatar",
                    "channel",
                    "channel_id",
                    "id",
                    "name",
                    "source_channel",
                    "source_channel_id",
                    "type",
                    "url",
                    "user",
                    "user_id"
                ]
            },
            "WebhookType": {
                "type": "number",
                "enum": [
                    1,
                    2,
                    3
                ]
            },
            "Application": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "summary": {
                        "type": "string",
                        "default": ""
                    },
                    "type": {
                        "type": "object",
                        "properties": {},
                        "additionalProperties": true
                    },
                    "hook": {
                        "type": "boolean",
                        "default": true
                    },
                    "bot_public": {
                        "type": "boolean",
                        "default": true
                    },
                    "bot_require_code_grant": {
                        "type": "boolean",
                        "default": false
                    },
                    "verify_key": {
                        "type": "string"
                    },
                    "owner": {
                        "$ref": "#/components/schemas/User"
                    },
                    "flags": {
                        "type": "integer",
                        "default": 0
                    },
                    "redirect_uris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "default": []
                    },
                    "rpc_application_state": {
                        "type": "integer",
                        "default": 0
                    },
                    "store_application_state": {
                        "type": "integer",
                        "default": 1
                    },
                    "verification_state": {
                        "type": "integer",
                        "default": 1
                    },
                    "interactions_endpoint_url": {
                        "type": "string"
                    },
                    "integration_public": {
                        "type": "boolean",
                        "default": true
                    },
                    "integration_require_code_grant": {
                        "type": "boolean",
                        "default": false
                    },
                    "discoverability_state": {
                        "type": "integer",
                        "default": 1
                    },
                    "discovery_eligibility_flags": {
                        "type": "integer",
                        "default": 2240
                    },
                    "bot": {
                        "$ref": "#/components/schemas/User"
                    },
                    "tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "cover_image": {
                        "type": "string"
                    },
                    "install_params": {
                        "type": "object",
                        "properties": {
                            "scopes": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "permissions": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "permissions",
                            "scopes"
                        ]
                    },
                    "terms_of_service_url": {
                        "type": "string"
                    },
                    "privacy_policy_url": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "custom_install_url": {
                        "type": "string"
                    },
                    "team": {
                        "$ref": "#/components/schemas/Team"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "discoverability_state",
                    "discovery_eligibility_flags",
                    "flags",
                    "hook",
                    "id",
                    "integration_public",
                    "integration_require_code_grant",
                    "name",
                    "owner",
                    "redirect_uris",
                    "rpc_application_state",
                    "store_application_state",
                    "summary",
                    "verification_state",
                    "verify_key"
                ]
            },
            "Team": {
                "type": "object",
                "properties": {
                    "icon": {
                        "type": "string"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TeamMember"
                        }
                    },
                    "name": {
                        "type": "string"
                    },
                    "owner_user_id": {
                        "type": "string"
                    },
                    "owner_user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "members",
                    "name",
                    "owner_user",
                    "owner_user_id"
                ]
            },
            "TeamMember": {
                "type": "object",
                "properties": {
                    "membership_state": {
                        "$ref": "#/components/schemas/TeamMemberState"
                    },
                    "permissions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "role": {
                        "$ref": "#/components/schemas/TeamMemberRole"
                    },
                    "team_id": {
                        "type": "string"
                    },
                    "team": {
                        "$ref": "#/components/schemas/Team"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "membership_state",
                    "permissions",
                    "role",
                    "team",
                    "team_id",
                    "user",
                    "user_id"
                ]
            },
            "TeamMemberState": {
                "type": "number",
                "enum": [
                    1,
                    2
                ]
            },
            "TeamMemberRole": {
                "type": "string",
                "enum": [
                    "admin",
                    "developer",
                    "read_only"
                ]
            },
            "Sticker": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "available": {
                        "type": "boolean"
                    },
                    "tags": {
                        "type": "string"
                    },
                    "pack_id": {
                        "type": "string"
                    },
                    "pack": {
                        "$ref": "#/components/schemas/StickerPack"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "type": {
                        "$ref": "#/components/schemas/StickerType"
                    },
                    "format_type": {
                        "$ref": "#/components/schemas/StickerFormatType"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "format_type",
                    "id",
                    "name",
                    "pack",
                    "type"
                ]
            },
            "StickerPack": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "banner_asset_id": {
                        "type": "string"
                    },
                    "stickers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sticker"
                        }
                    },
                    "cover_sticker_id": {
                        "type": "string"
                    },
                    "cover_sticker": {
                        "$ref": "#/components/schemas/Sticker"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "stickers"
                ]
            },
            "StickerType": {
                "type": "number",
                "enum": [
                    1,
                    2
                ]
            },
            "StickerFormatType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2,
                    3
                ]
            },
            "Attachment": {
                "type": "object",
                "properties": {
                    "filename": {
                        "type": "string"
                    },
                    "size": {
                        "type": "integer"
                    },
                    "url": {
                        "type": "string"
                    },
                    "proxy_url": {
                        "type": "string"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "width": {
                        "type": "integer"
                    },
                    "content_type": {
                        "type": "string"
                    },
                    "message_id": {
                        "type": "string"
                    },
                    "message": {
                        "$ref": "#/components/schemas/Message"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "filename",
                    "id",
                    "message",
                    "message_id",
                    "proxy_url",
                    "size",
                    "url"
                ]
            },
            "Reaction": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer"
                    },
                    "emoji": {
                        "$ref": "#/components/schemas/PartialEmoji"
                    },
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "count",
                    "emoji",
                    "user_ids"
                ]
            },
            "MessageType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9,
                    10,
                    11,
                    12,
                    13,
                    14,
                    15,
                    16,
                    19,
                    20,
                    41,
                    42,
                    43,
                    50,
                    63,
                    255
                ]
            },
            "InteractionType": {
                "type": "number",
                "enum": [
                    0,
                    1,
                    2
                ]
            },
            "Poll": {
                "type": "object",
                "properties": {
                    "question": {
                        "$ref": "#/components/schemas/PollMedia"
                    },
                    "answers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PollAnswer"
                        }
                    },
                    "expiry": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "allow_multiselect": {
                        "type": "boolean"
                    },
                    "results": {
                        "$ref": "#/components/schemas/PollResult"
                    }
                },
                "required": [
                    "allow_multiselect",
                    "answers",
                    "expiry",
                    "question"
                ]
            },
            "PollResult": {
                "type": "object",
                "properties": {
                    "is_finalized": {
                        "type": "boolean"
                    },
                    "answer_counts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PollAnswerCount"
                        }
                    }
                },
                "required": [
                    "answer_counts",
                    "is_finalized"
                ]
            },
            "PollAnswerCount": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "me_voted": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "count",
                    "id",
                    "me_voted"
                ]
            },
            "VoiceState": {
                "type": "object",
                "properties": {
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "member": {
                        "$ref": "#/components/schemas/Member"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "deaf": {
                        "type": "boolean"
                    },
                    "mute": {
                        "type": "boolean"
                    },
                    "self_deaf": {
                        "type": "boolean"
                    },
                    "self_mute": {
                        "type": "boolean"
                    },
                    "self_stream": {
                        "type": "boolean"
                    },
                    "self_video": {
                        "type": "boolean"
                    },
                    "suppress": {
                        "type": "boolean"
                    },
                    "request_to_speak_timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "channel_id",
                    "deaf",
                    "guild_id",
                    "id",
                    "member",
                    "mute",
                    "self_deaf",
                    "self_mute",
                    "self_video",
                    "session_id",
                    "suppress",
                    "token",
                    "user",
                    "user_id"
                ]
            },
            "ReadState": {
                "type": "object",
                "properties": {
                    "channel_id": {
                        "type": "string"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/Channel"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "last_message_id": {
                        "type": "string"
                    },
                    "public_ack": {
                        "type": "string"
                    },
                    "notifications_cursor": {
                        "type": "string"
                    },
                    "last_pin_timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "mention_count": {
                        "type": "integer"
                    },
                    "manual": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "channel",
                    "channel_id",
                    "id",
                    "last_message_id",
                    "manual",
                    "mention_count",
                    "notifications_cursor",
                    "public_ack",
                    "user",
                    "user_id"
                ]
            },
            "Ban": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "executor_id": {
                        "type": "string"
                    },
                    "executor": {
                        "$ref": "#/components/schemas/User"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "executor",
                    "executor_id",
                    "guild",
                    "guild_id",
                    "id",
                    "ip",
                    "user",
                    "user_id"
                ]
            },
            "Template": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "usage_count": {
                        "type": "integer"
                    },
                    "creator_id": {
                        "type": "string"
                    },
                    "creator": {
                        "$ref": "#/components/schemas/User"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "source_guild_id": {
                        "type": "string"
                    },
                    "source_guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "serialized_source_guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "created_at",
                    "creator",
                    "creator_id",
                    "id",
                    "name",
                    "serialized_source_guild",
                    "source_guild",
                    "source_guild_id",
                    "updated_at"
                ]
            },
            "Emoji": {
                "type": "object",
                "properties": {
                    "animated": {
                        "type": "boolean"
                    },
                    "available": {
                        "type": "boolean"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "managed": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "require_colons": {
                        "type": "boolean"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "groups": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "animated",
                    "available",
                    "groups",
                    "guild",
                    "guild_id",
                    "id",
                    "managed",
                    "name",
                    "require_colons",
                    "roles",
                    "user",
                    "user_id"
                ]
            },
            "GuildWelcomeScreen": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "welcome_channels": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "description": {
                                    "type": "string"
                                },
                                "emoji_id": {
                                    "type": "string"
                                },
                                "emoji_name": {
                                    "type": "string"
                                },
                                "channel_id": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "channel_id",
                                "description"
                            ]
                        }
                    }
                },
                "required": [
                    "description",
                    "enabled",
                    "welcome_channels"
                ]
            },
            "DiscoverableGuildsResponse": {
                "type": "object",
                "properties": {
                    "total": {
                        "type": "integer"
                    },
                    "guilds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Guild"
                        }
                    },
                    "offset": {
                        "type": "integer"
                    },
                    "limit": {
                        "type": "integer"
                    }
                },
                "required": [
                    "guilds",
                    "limit",
                    "offset",
                    "total"
                ]
            },
            "PartialMessage": {
                "description": "https://docs.discord.food/resources/message#partial-message-structure",
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/MessageType"
                    },
                    "content": {
                        "type": "string"
                    },
                    "author": {
                        "$ref": "#/components/schemas/PartialUser"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "application_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "author",
                    "channel_id",
                    "content",
                    "id",
                    "type"
                ]
            },
            "PartialUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "discriminator": {
                        "type": "string"
                    },
                    "global_name": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "avatar_decoration_data": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AvatarDecorationData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "collectibles": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Collectibles"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "display_name_styles": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/DisplayNameStyle"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "primary_guild": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/PrimaryGuild"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "bot": {
                        "type": "boolean"
                    },
                    "system": {
                        "type": "boolean"
                    },
                    "banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "accent_color": {
                        "type": "integer",
                        "nullable": true
                    },
                    "public_flags": {
                        "type": "integer"
                    }
                },
                "required": [
                    "avatar",
                    "discriminator",
                    "id",
                    "username"
                ]
            },
            "AvatarDecorationData": {
                "type": "object",
                "properties": {
                    "asset": {
                        "type": "string"
                    },
                    "sku_id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "asset",
                    "expires_at",
                    "sku_id"
                ]
            },
            "Collectibles": {
                "type": "object",
                "properties": {
                    "nameplate": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/NameplateData"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "nameplate"
                ]
            },
            "NameplateData": {
                "type": "object",
                "properties": {
                    "asset": {
                        "type": "string"
                    },
                    "sku_id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "label": {
                        "type": "string"
                    },
                    "palette": {
                        "type": "string"
                    },
                    "expires_at": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "asset",
                    "expires_at",
                    "label",
                    "palette",
                    "sku_id"
                ]
            },
            "DisplayNameStyle": {
                "type": "object",
                "properties": {
                    "font_id": {
                        "type": "integer"
                    },
                    "effect_id": {
                        "type": "integer"
                    },
                    "colors": {
                        "type": "integer"
                    }
                },
                "required": [
                    "colors",
                    "effect_id",
                    "font_id"
                ]
            },
            "PrimaryGuild": {
                "type": "object",
                "properties": {
                    "identity_enabled": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "identity_guild_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "tag": {
                        "type": "string",
                        "nullable": true
                    },
                    "badge": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "badge",
                    "identity_enabled",
                    "identity_guild_id",
                    "tag"
                ]
            },
            "DmMessagesResponseSchema": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/PartialMessage"
                }
            },
            "HubGuild": {
                "type": "object",
                "properties": {
                    "icon": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "icon",
                    "id",
                    "name"
                ]
            },
            "EmailDomainLookupResponse": {
                "type": "object",
                "properties": {
                    "guilds_info": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HubGuild"
                        }
                    },
                    "has_matching_guild": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "guilds_info",
                    "has_matching_guild"
                ]
            },
            "EmailDomainLookupVerifyCodeResponse": {
                "type": "object",
                "properties": {
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "joined": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "guild",
                    "joined"
                ]
            },
            "EmojiGuild": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "emojis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Emoji"
                        }
                    },
                    "premium_tier": {
                        "type": "integer"
                    },
                    "premium_subscription_count": {
                        "type": "integer"
                    },
                    "approximate_member_count": {
                        "type": "integer"
                    },
                    "approximate_presence_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "emojis",
                    "features",
                    "id",
                    "name",
                    "premium_tier"
                ]
            },
            "EmojiApplication": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "EmojiSourceResponse": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            "APPLICATION",
                            "GUILD"
                        ],
                        "type": "string"
                    },
                    "guild": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EmojiGuild"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "application": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/EmojiApplication"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "type"
                ]
            },
            "GatewayBotResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    },
                    "shards": {
                        "type": "integer"
                    },
                    "session_start_limit": {
                        "type": "object",
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "remaining": {
                                "type": "integer"
                            },
                            "reset_after": {
                                "type": "integer"
                            },
                            "max_concurrency": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "max_concurrency",
                            "remaining",
                            "reset_after",
                            "total"
                        ]
                    }
                },
                "required": [
                    "session_start_limit",
                    "shards",
                    "url"
                ]
            },
            "GatewayResponse": {
                "type": "object",
                "properties": {
                    "url": {
                        "type": "string"
                    }
                },
                "required": [
                    "url"
                ]
            },
            "GenerateRegistrationTokensResponse": {
                "type": "object",
                "properties": {
                    "tokens": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "tokens"
                ]
            },
            "GuildBansResponse": {
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string",
                        "nullable": true
                    },
                    "user": {
                        "type": "object",
                        "properties": {
                            "username": {
                                "type": "string"
                            },
                            "discriminator": {
                                "type": "string"
                            },
                            "id": {
                                "type": "string"
                            },
                            "avatar": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "public_flags": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "avatar",
                            "discriminator",
                            "id",
                            "public_flags",
                            "username"
                        ]
                    }
                },
                "required": [
                    "reason",
                    "user"
                ]
            },
            "GuildCreateResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primary_category_id": {
                        "type": "string"
                    },
                    "large": {
                        "type": "boolean"
                    },
                    "max_members": {
                        "type": "integer"
                    },
                    "max_presences": {
                        "type": "integer"
                    },
                    "max_video_channel_users": {
                        "type": "integer"
                    },
                    "member_count": {
                        "type": "integer"
                    },
                    "presence_count": {
                        "type": "integer"
                    },
                    "template_id": {
                        "type": "string"
                    },
                    "mfa_level": {
                        "type": "integer"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "premium_subscription_count": {
                        "type": "integer"
                    },
                    "premium_tier": {
                        "type": "integer"
                    },
                    "welcome_screen": {
                        "$ref": "#/components/schemas/GuildWelcomeScreen"
                    },
                    "widget_channel_id": {
                        "type": "string"
                    },
                    "widget_enabled": {
                        "type": "boolean"
                    },
                    "nsfw_level": {
                        "type": "integer"
                    },
                    "nsfw": {
                        "type": "boolean"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "system_channel_id": {
                        "type": "string"
                    },
                    "rules_channel_id": {
                        "type": "string"
                    },
                    "guild_template_code": {
                        "type": "string"
                    },
                    "staff_only": {
                        "type": "boolean"
                    },
                    "splash": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verification_level": {
                        "type": "integer"
                    },
                    "default_message_notifications": {
                        "type": "integer"
                    },
                    "system_channel_flags": {
                        "type": "integer"
                    },
                    "explicit_content_filter": {
                        "type": "integer"
                    },
                    "public_updates_channel_id": {
                        "type": "string"
                    },
                    "afk_timeout": {
                        "type": "integer"
                    },
                    "afk_channel_id": {
                        "type": "string"
                    },
                    "preferred_locale": {
                        "type": "string"
                    },
                    "premium_progress_bar_enabled": {
                        "type": "boolean"
                    },
                    "discovery_splash": {
                        "type": "string"
                    },
                    "safety_alerts_channel_id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "name",
                    "nsfw",
                    "welcome_screen",
                    "widget_enabled"
                ]
            },
            "GuildDiscoveryRequirementsResponse": {
                "type": "object",
                "properties": {
                    "guild_id": {
                        "type": "string"
                    },
                    "safe_environment": {
                        "type": "boolean"
                    },
                    "healthy": {
                        "type": "boolean"
                    },
                    "health_score_pending": {
                        "type": "boolean"
                    },
                    "size": {
                        "type": "boolean"
                    },
                    "nsfw_properties": {},
                    "protected": {
                        "type": "boolean"
                    },
                    "sufficient": {
                        "type": "boolean"
                    },
                    "sufficient_without_grace_period": {
                        "type": "boolean"
                    },
                    "valid_rules_channel": {
                        "type": "boolean"
                    },
                    "retention_healthy": {
                        "type": "boolean"
                    },
                    "engagement_healthy": {
                        "type": "boolean"
                    },
                    "age": {
                        "type": "boolean"
                    },
                    "minimum_age": {
                        "type": "integer"
                    },
                    "health_score": {
                        "type": "object",
                        "properties": {
                            "avg_nonnew_participators": {
                                "type": "integer"
                            },
                            "avg_nonnew_communicators": {
                                "type": "integer"
                            },
                            "num_intentful_joiners": {
                                "type": "integer"
                            },
                            "perc_ret_w1_intentful": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "avg_nonnew_communicators",
                            "avg_nonnew_participators",
                            "num_intentful_joiners",
                            "perc_ret_w1_intentful"
                        ]
                    },
                    "minimum_size": {
                        "type": "integer"
                    }
                },
                "required": [
                    "age",
                    "engagement_healthy",
                    "guild_id",
                    "health_score",
                    "health_score_pending",
                    "healthy",
                    "minimum_age",
                    "minimum_size",
                    "nsfw_properties",
                    "protected",
                    "retention_healthy",
                    "safe_environment",
                    "size",
                    "sufficient",
                    "sufficient_without_grace_period",
                    "valid_rules_channel"
                ]
            },
            "GuildMessagesSearchMessage": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/MessageType"
                    },
                    "content": {
                        "type": "string"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "author": {
                        "$ref": "#/components/schemas/PublicUser"
                    },
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Attachment"
                        }
                    },
                    "embeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Embed"
                        }
                    },
                    "mentions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PublicUser"
                        }
                    },
                    "mention_roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "pinned": {
                        "type": "boolean"
                    },
                    "mention_everyone": {
                        "type": "boolean"
                    },
                    "tts": {
                        "type": "boolean"
                    },
                    "timestamp": {
                        "type": "string"
                    },
                    "edited_timestamp": {
                        "type": "string",
                        "nullable": true
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "components": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ActionRowComponent"
                        }
                    },
                    "poll": {
                        "$ref": "#/components/schemas/Poll"
                    },
                    "hit": {
                        "type": "boolean",
                        "const": true
                    }
                },
                "required": [
                    "attachments",
                    "author",
                    "channel_id",
                    "components",
                    "edited_timestamp",
                    "embeds",
                    "flags",
                    "hit",
                    "id",
                    "mention_roles",
                    "mentions",
                    "pinned",
                    "poll",
                    "timestamp",
                    "tts",
                    "type"
                ]
            },
            "PublicUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "premium_since": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "discriminator": {
                        "type": "string"
                    },
                    "public_flags": {
                        "type": "integer"
                    },
                    "accent_color": {
                        "type": "integer"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "bot": {
                        "type": "boolean"
                    },
                    "premium_type": {
                        "type": "integer"
                    },
                    "theme_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "badge_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "bio",
                    "bot",
                    "discriminator",
                    "id",
                    "premium_since",
                    "premium_type",
                    "public_flags",
                    "username"
                ]
            },
            "GuildMessagesSearchResponse": {
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildMessagesSearchMessage"
                        }
                    },
                    "total_results": {
                        "type": "integer"
                    }
                },
                "required": [
                    "messages",
                    "total_results"
                ]
            },
            "GuildPruneResponse": {
                "type": "object",
                "properties": {
                    "pruned": {
                        "type": "integer"
                    }
                },
                "required": [
                    "pruned"
                ]
            },
            "GuildPurgeResponse": {
                "type": "object",
                "properties": {
                    "purged": {
                        "type": "integer"
                    }
                },
                "required": [
                    "purged"
                ]
            },
            "GuildRecommendationsResponse": {
                "type": "object",
                "properties": {
                    "recommended_guilds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Guild"
                        }
                    },
                    "load_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "load_id",
                    "recommended_guilds"
                ]
            },
            "GuildVanityUrl": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "uses": {
                        "type": "integer"
                    }
                },
                "required": [
                    "code",
                    "uses"
                ]
            },
            "GuildVanityUrlNoInvite": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "null"
                    }
                },
                "required": [
                    "code"
                ]
            },
            "GuildVanityUrlResponse": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/GuildVanityUrl"
                    },
                    {
                        "$ref": "#/components/schemas/GuildVanityUrlNoInvite"
                    },
                    {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildVanityUrl"
                        }
                    }
                ]
            },
            "GuildVanityUrlCreateResponse": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "code"
                ]
            },
            "GuildWidgetJsonResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "instant_invite": {
                        "type": "string"
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "name": {
                                    "type": "string"
                                },
                                "position": {
                                    "type": "integer"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "id",
                                "name",
                                "position"
                            ]
                        }
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "username": {
                                    "type": "string"
                                },
                                "discriminator": {
                                    "type": "string"
                                },
                                "avatar": {
                                    "type": [
                                        "null",
                                        "string"
                                    ]
                                },
                                "status": {
                                    "$ref": "#/components/schemas/ClientStatus"
                                },
                                "avatar_url": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "avatar",
                                "avatar_url",
                                "discriminator",
                                "id",
                                "status",
                                "username"
                            ]
                        }
                    },
                    "presence_count": {
                        "type": "integer"
                    }
                },
                "required": [
                    "channels",
                    "id",
                    "instant_invite",
                    "members",
                    "name",
                    "presence_count"
                ]
            },
            "GuildWidgetSettingsResponse": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "channel_id": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/Snowflake"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "channel_id",
                    "enabled"
                ]
            },
            "HubDirectoryEntry": {
                "type": "object",
                "properties": {
                    "author_id": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "directory_channel_id": {
                        "type": "string"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/Guild"
                    },
                    "primary_category_id": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "author_id",
                    "created_at",
                    "description",
                    "directory_channel_id",
                    "guild",
                    "primary_category_id",
                    "type"
                ]
            },
            "HubDirectoryEntriesResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/HubDirectoryEntry"
                }
            },
            "HubWaitlistSignupResponse": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "email_domain": {
                        "type": "string"
                    },
                    "school": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "email_domain",
                    "school",
                    "user_id"
                ]
            },
            "InstanceDomainsResponse": {
                "type": "object",
                "properties": {
                    "cdn": {
                        "type": "string"
                    },
                    "gateway": {
                        "type": "string"
                    },
                    "defaultApiVersion": {
                        "type": "string"
                    },
                    "apiEndpoint": {
                        "type": "string"
                    }
                },
                "required": [
                    "apiEndpoint",
                    "cdn",
                    "defaultApiVersion",
                    "gateway"
                ]
            },
            "InstancePingResponse": {
                "type": "object",
                "properties": {
                    "ping": {
                        "type": "string",
                        "const": "pong!"
                    },
                    "instance": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "description": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "image": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "correspondenceEmail": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "correspondenceUserID": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "frontPage": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            },
                            "tosPage": {
                                "type": [
                                    "null",
                                    "string"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "correspondenceEmail",
                            "correspondenceUserID",
                            "description",
                            "frontPage",
                            "id",
                            "image",
                            "name",
                            "tosPage"
                        ]
                    }
                },
                "required": [
                    "instance",
                    "ping"
                ]
            },
            "InstanceStatsResponse": {
                "type": "object",
                "properties": {
                    "counts": {
                        "type": "object",
                        "properties": {
                            "user": {
                                "type": "integer"
                            },
                            "guild": {
                                "type": "integer"
                            },
                            "message": {
                                "type": "integer"
                            },
                            "members": {
                                "type": "integer"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "guild",
                            "members",
                            "message",
                            "user"
                        ]
                    }
                },
                "required": [
                    "counts"
                ]
            },
            "LocationMetadataResponse": {
                "type": "object",
                "properties": {
                    "consent_required": {
                        "type": "boolean"
                    },
                    "country_code": {
                        "type": "string"
                    },
                    "promotional_email_opt_in": {
                        "type": "object",
                        "properties": {
                            "required": {
                                "type": "boolean",
                                "const": true
                            },
                            "pre_checked": {
                                "type": "boolean",
                                "const": false
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "pre_checked",
                            "required"
                        ]
                    }
                },
                "required": [
                    "consent_required",
                    "country_code",
                    "promotional_email_opt_in"
                ]
            },
            "MemberJoinGuildResponse": {
                "type": "object",
                "properties": {
                    "guild": {
                        "$ref": "#/components/schemas/GuildCreateResponse"
                    },
                    "emojis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Emoji"
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "stickers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sticker"
                        }
                    }
                },
                "required": [
                    "emojis",
                    "guild",
                    "roles",
                    "stickers"
                ]
            },
            "OAuthAuthorizeResponse": {
                "type": "object",
                "properties": {
                    "location": {
                        "type": "string"
                    }
                },
                "required": [
                    "location"
                ]
            },
            "PreloadMessagesResponseSchema": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Message"
                }
            },
            "RefreshedUrl": {
                "type": "object",
                "properties": {
                    "original": {
                        "type": "string"
                    },
                    "refreshed": {
                        "type": "string"
                    }
                },
                "required": [
                    "original",
                    "refreshed"
                ]
            },
            "RefreshUrlsResponse": {
                "type": "object",
                "properties": {
                    "refreshed_urls": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/RefreshedUrl"
                        }
                    }
                },
                "required": [
                    "refreshed_urls"
                ]
            },
            "SettingsProtoResponse": {
                "type": "object",
                "properties": {
                    "settings": {
                        "type": "string"
                    }
                },
                "required": [
                    "settings"
                ]
            },
            "SettingsProtoUpdateResponse": {
                "type": "object",
                "properties": {
                    "out_of_date": {
                        "type": "boolean"
                    },
                    "settings": {
                        "type": "string"
                    }
                },
                "required": [
                    "settings"
                ]
            },
            "JsonValue": {
                "description": "Represents any possible JSON value:\n- number\n- string\n- boolean\n- null\n- object (with any JSON value as property)\n- array (with any JSON value as element)",
                "anyOf": [
                    {
                        "description": "Represents a JSON object.",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/JsonValue"
                        }
                    },
                    {
                        "type": "object",
                        "additionalProperties": false,
                        "patternProperties": {
                            "^[0-9]+$": {
                                "$ref": "#/components/schemas/JsonValue"
                            }
                        },
                        "properties": {
                            "length": {
                                "type": "integer"
                            },
                            "__@unscopables@689": {
                                "type": "object",
                                "additionalProperties": false,
                                "patternProperties": {
                                    "^[0-9]+$": {
                                        "type": "boolean"
                                    }
                                },
                                "properties": {
                                    "length": {
                                        "type": "boolean"
                                    },
                                    "toString": {
                                        "type": "boolean"
                                    },
                                    "toLocaleString": {
                                        "type": "boolean"
                                    },
                                    "pop": {
                                        "type": "boolean"
                                    },
                                    "push": {
                                        "type": "boolean"
                                    },
                                    "concat": {
                                        "type": "boolean"
                                    },
                                    "join": {
                                        "type": "boolean"
                                    },
                                    "reverse": {
                                        "type": "boolean"
                                    },
                                    "shift": {
                                        "type": "boolean"
                                    },
                                    "slice": {
                                        "type": "boolean"
                                    },
                                    "sort": {
                                        "type": "boolean"
                                    },
                                    "splice": {
                                        "type": "boolean"
                                    },
                                    "unshift": {
                                        "type": "boolean"
                                    },
                                    "indexOf": {
                                        "type": "boolean"
                                    },
                                    "lastIndexOf": {
                                        "type": "boolean"
                                    },
                                    "every": {
                                        "type": "boolean"
                                    },
                                    "some": {
                                        "type": "boolean"
                                    },
                                    "forEach": {
                                        "type": "boolean"
                                    },
                                    "map": {
                                        "type": "boolean"
                                    },
                                    "filter": {
                                        "type": "boolean"
                                    },
                                    "reduce": {
                                        "type": "boolean"
                                    },
                                    "reduceRight": {
                                        "type": "boolean"
                                    },
                                    "find": {
                                        "type": "boolean"
                                    },
                                    "findIndex": {
                                        "type": "boolean"
                                    },
                                    "fill": {
                                        "type": "boolean"
                                    },
                                    "copyWithin": {
                                        "type": "boolean"
                                    },
                                    "entries": {
                                        "type": "boolean"
                                    },
                                    "keys": {
                                        "type": "boolean"
                                    },
                                    "values": {
                                        "type": "boolean"
                                    },
                                    "includes": {
                                        "type": "boolean"
                                    },
                                    "flatMap": {
                                        "type": "boolean"
                                    },
                                    "flat": {
                                        "type": "boolean"
                                    },
                                    "at": {
                                        "type": "boolean"
                                    },
                                    "findLast": {
                                        "type": "boolean"
                                    },
                                    "findLastIndex": {
                                        "type": "boolean"
                                    },
                                    "toReversed": {
                                        "type": "boolean"
                                    },
                                    "toSorted": {
                                        "type": "boolean"
                                    },
                                    "toSpliced": {
                                        "type": "boolean"
                                    },
                                    "with": {
                                        "type": "boolean"
                                    },
                                    "containsAll": {
                                        "type": "boolean"
                                    },
                                    "partition": {
                                        "type": "boolean"
                                    },
                                    "single": {
                                        "type": "boolean"
                                    },
                                    "forEachAsync": {
                                        "type": "boolean"
                                    },
                                    "remove": {
                                        "type": "boolean"
                                    },
                                    "first": {
                                        "type": "boolean"
                                    },
                                    "last": {
                                        "type": "boolean"
                                    },
                                    "distinct": {
                                        "type": "boolean"
                                    },
                                    "distinctBy": {
                                        "type": "boolean"
                                    },
                                    "intersect": {
                                        "type": "boolean"
                                    },
                                    "except": {
                                        "type": "boolean"
                                    },
                                    "__@iterator@687": {
                                        "type": "boolean"
                                    },
                                    "__@unscopables@689": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        },
                        "required": [
                            "__@unscopables@689",
                            "length"
                        ]
                    },
                    {
                        "type": [
                            "null",
                            "string",
                            "integer",
                            "boolean"
                        ]
                    }
                ]
            },
            "SettingsProtoJsonResponse": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/JsonValue"
                    }
                },
                "required": [
                    "settings"
                ]
            },
            "SettingsProtoUpdateJsonResponse": {
                "type": "object",
                "properties": {
                    "out_of_date": {
                        "type": "boolean"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/JsonValue"
                    }
                },
                "required": [
                    "settings"
                ]
            },
            "TeamListResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Team"
                }
            },
            "TenorGifResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "src": {
                        "type": "string"
                    },
                    "gif_src": {
                        "type": "string"
                    },
                    "width": {
                        "type": "integer"
                    },
                    "height": {
                        "type": "integer"
                    },
                    "preview": {
                        "type": "string"
                    }
                },
                "required": [
                    "gif_src",
                    "height",
                    "id",
                    "preview",
                    "src",
                    "title",
                    "url",
                    "width"
                ]
            },
            "TenorTrendingResponse": {
                "type": "object",
                "properties": {
                    "categories": {
                        "type": "object",
                        "properties": {
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "searchterm": {
                                            "type": "string"
                                        },
                                        "path": {
                                            "type": "string"
                                        },
                                        "image": {
                                            "type": "string"
                                        },
                                        "name": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "image",
                                        "name",
                                        "path",
                                        "searchterm"
                                    ]
                                }
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "tags"
                        ]
                    },
                    "gifs": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TenorGifResponse"
                        }
                    }
                },
                "required": [
                    "categories",
                    "gifs"
                ]
            },
            "TenorGifsResponse": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/TenorGifResponse"
                }
            },
            "TokenResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/UserSettings"
                    }
                },
                "required": [
                    "settings",
                    "token"
                ]
            },
            "TokenOnlyResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "BackupCode": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "code": {
                        "type": "string"
                    },
                    "consumed": {
                        "type": "boolean"
                    },
                    "expired": {
                        "type": "boolean"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "consumed",
                    "expired",
                    "id",
                    "user"
                ]
            },
            "TokenWithBackupCodesResponse": {
                "type": "object",
                "properties": {
                    "token": {
                        "type": "string"
                    },
                    "backup_codes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/BackupCode"
                        }
                    }
                },
                "required": [
                    "backup_codes",
                    "token"
                ]
            },
            "APIGuild": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "reload": {
                        "description": "Reloads entity data from the database.",
                        "type": "object",
                        "additionalProperties": false
                    },
                    "id": {
                        "type": "string"
                    },
                    "remove": {
                        "description": "Removes current entity from the database.",
                        "type": "object",
                        "additionalProperties": false
                    },
                    "icon": {
                        "type": "string"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "nsfw": {
                        "type": "boolean"
                    },
                    "invites": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Invite"
                        }
                    },
                    "voice_states": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/VoiceState"
                        }
                    },
                    "webhooks": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Webhook"
                        }
                    },
                    "toJSON": {
                        "type": "object",
                        "additionalProperties": false
                    },
                    "_do_validate": {
                        "type": "object",
                        "additionalProperties": false
                    },
                    "assign": {
                        "type": "object",
                        "additionalProperties": false
                    },
                    "hasId": {
                        "description": "Checks if entity has an id.\nIf entity composite compose ids, it will check them all.",
                        "type": "object",
                        "additionalProperties": false
                    },
                    "save": {
                        "description": "Saves current entity in the database.\nIf entity does not exist in the database then inserts, otherwise updates.",
                        "type": "object",
                        "additionalProperties": false
                    },
                    "softRemove": {
                        "description": "Records the delete date of current entity.",
                        "type": "object",
                        "additionalProperties": false
                    },
                    "recover": {
                        "description": "Recovers a given entity in the database.",
                        "type": "object",
                        "additionalProperties": false
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Role"
                        }
                    },
                    "banner": {
                        "type": "string"
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Channel"
                        }
                    },
                    "system_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "rules_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "splash": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verification_level": {
                        "type": "integer"
                    },
                    "default_message_notifications": {
                        "type": "integer"
                    },
                    "system_channel_flags": {
                        "type": "integer"
                    },
                    "explicit_content_filter": {
                        "type": "integer"
                    },
                    "public_updates_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "afk_timeout": {
                        "type": "integer"
                    },
                    "afk_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "preferred_locale": {
                        "type": "string"
                    },
                    "premium_progress_bar_enabled": {
                        "type": "boolean"
                    },
                    "discovery_splash": {
                        "type": "string"
                    },
                    "bans": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Ban"
                        }
                    },
                    "primary_category_id": {
                        "type": "string"
                    },
                    "large": {
                        "type": "boolean"
                    },
                    "max_members": {
                        "type": "integer"
                    },
                    "max_presences": {
                        "type": "integer"
                    },
                    "max_video_channel_users": {
                        "type": "integer"
                    },
                    "member_count": {
                        "type": "integer"
                    },
                    "presence_count": {
                        "type": "integer"
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Member"
                        }
                    },
                    "template_id": {
                        "type": "string"
                    },
                    "emojis": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Emoji"
                        }
                    },
                    "stickers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Sticker"
                        }
                    },
                    "mfa_level": {
                        "type": "integer"
                    },
                    "premium_subscription_count": {
                        "type": "integer"
                    },
                    "premium_tier": {
                        "type": "integer"
                    },
                    "unavailable": {
                        "type": "boolean"
                    },
                    "welcome_screen": {
                        "$ref": "#/components/schemas/GuildWelcomeScreen",
                        "description": "DEPRECATED: Look at the new Guild onboarding screens."
                    },
                    "widget_channel_id": {
                        "type": "string"
                    },
                    "widget_enabled": {
                        "type": "boolean"
                    },
                    "nsfw_level": {
                        "type": "integer"
                    },
                    "permissions": {
                        "type": "integer"
                    },
                    "channel_ordering": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "_do_validate",
                    "assign",
                    "bans",
                    "channel_ordering",
                    "channels",
                    "emojis",
                    "features",
                    "hasId",
                    "id",
                    "invites",
                    "members",
                    "name",
                    "nsfw",
                    "premium_progress_bar_enabled",
                    "public_updates_channel_id",
                    "recover",
                    "reload",
                    "remove",
                    "roles",
                    "save",
                    "softRemove",
                    "stickers",
                    "toJSON",
                    "unavailable",
                    "voice_states",
                    "webhooks",
                    "welcome_screen",
                    "widget_enabled"
                ]
            },
            "APIPublicUser": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "premium_since": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "discriminator": {
                        "type": "string"
                    },
                    "public_flags": {
                        "type": "integer"
                    },
                    "accent_color": {
                        "type": "integer"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "bot": {
                        "type": "boolean"
                    },
                    "premium_type": {
                        "type": "integer"
                    },
                    "theme_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "badge_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "bio",
                    "bot",
                    "discriminator",
                    "id",
                    "premium_since",
                    "premium_type",
                    "public_flags",
                    "username"
                ]
            },
            "UserSettingsSchema": {
                "type": "object",
                "properties": {
                    "afk_timeout": {
                        "type": "integer"
                    },
                    "allow_accessibility_detection": {
                        "type": "boolean"
                    },
                    "animate_emoji": {
                        "type": "boolean"
                    },
                    "animate_stickers": {
                        "type": "integer"
                    },
                    "contact_sync_enabled": {
                        "type": "boolean"
                    },
                    "convert_emoticons": {
                        "type": "boolean"
                    },
                    "custom_status": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/CustomStatus"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "default_guilds_restricted": {
                        "type": "boolean"
                    },
                    "detect_platform_accounts": {
                        "type": "boolean"
                    },
                    "developer_mode": {
                        "type": "boolean"
                    },
                    "disable_games_tab": {
                        "type": "boolean"
                    },
                    "enable_tts_command": {
                        "type": "boolean"
                    },
                    "explicit_content_filter": {
                        "type": "integer"
                    },
                    "friend_discovery_flags": {
                        "type": "integer"
                    },
                    "friend_source_flags": {
                        "$ref": "#/components/schemas/FriendSourceFlags"
                    },
                    "gateway_connected": {
                        "type": "boolean"
                    },
                    "gif_auto_play": {
                        "type": "boolean"
                    },
                    "guild_folders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GuildFolder"
                        }
                    },
                    "guild_positions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "inline_attachment_media": {
                        "type": "boolean"
                    },
                    "inline_embed_media": {
                        "type": "boolean"
                    },
                    "locale": {
                        "type": "string"
                    },
                    "message_display_compact": {
                        "type": "boolean"
                    },
                    "native_phone_integration_enabled": {
                        "type": "boolean"
                    },
                    "render_embeds": {
                        "type": "boolean"
                    },
                    "render_reactions": {
                        "type": "boolean"
                    },
                    "restricted_guilds": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "show_current_game": {
                        "type": "boolean"
                    },
                    "status": {
                        "enum": [
                            "dnd",
                            "idle",
                            "invisible",
                            "offline",
                            "online"
                        ],
                        "type": "string"
                    },
                    "stream_notifications_enabled": {
                        "type": "boolean"
                    },
                    "theme": {
                        "enum": [
                            "dark",
                            "light"
                        ],
                        "type": "string"
                    },
                    "timezone_offset": {
                        "type": "integer"
                    },
                    "view_nsfw_guilds": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "afk_timeout",
                    "allow_accessibility_detection",
                    "animate_emoji",
                    "animate_stickers",
                    "contact_sync_enabled",
                    "convert_emoticons",
                    "custom_status",
                    "default_guilds_restricted",
                    "detect_platform_accounts",
                    "developer_mode",
                    "disable_games_tab",
                    "enable_tts_command",
                    "explicit_content_filter",
                    "friend_discovery_flags",
                    "friend_source_flags",
                    "gateway_connected",
                    "gif_auto_play",
                    "guild_folders",
                    "guild_positions",
                    "inline_attachment_media",
                    "inline_embed_media",
                    "locale",
                    "message_display_compact",
                    "native_phone_integration_enabled",
                    "render_embeds",
                    "render_reactions",
                    "restricted_guilds",
                    "show_current_game",
                    "status",
                    "stream_notifications_enabled",
                    "theme",
                    "timezone_offset",
                    "view_nsfw_guilds"
                ]
            },
            "APIPrivateUser": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "verified": {
                        "type": "boolean"
                    },
                    "premium_since": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "discriminator": {
                        "type": "string"
                    },
                    "public_flags": {
                        "type": "integer"
                    },
                    "accent_color": {
                        "type": "integer"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "bot": {
                        "type": "boolean"
                    },
                    "premium_type": {
                        "type": "integer"
                    },
                    "theme_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "badge_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mfa_enabled": {
                        "type": "boolean"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "nsfw_allowed": {
                        "type": "boolean"
                    },
                    "premium": {
                        "type": "boolean"
                    },
                    "purchased_flags": {
                        "type": "integer"
                    },
                    "premium_usage_flags": {
                        "type": "integer"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/UserSettingsSchema"
                    }
                },
                "required": [
                    "bio",
                    "bot",
                    "disabled",
                    "discriminator",
                    "flags",
                    "id",
                    "mfa_enabled",
                    "nsfw_allowed",
                    "premium",
                    "premium_since",
                    "premium_type",
                    "premium_usage_flags",
                    "public_flags",
                    "purchased_flags",
                    "username",
                    "verified"
                ]
            },
            "APIGuildArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/APIGuild"
                }
            },
            "DmChannelDTO": {
                "type": "object",
                "properties": {
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "id": {
                        "type": "string"
                    },
                    "last_message_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "origin_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MinimalPublicUserDTO"
                        }
                    },
                    "type": {
                        "type": "integer"
                    }
                },
                "required": [
                    "icon",
                    "id",
                    "last_message_id",
                    "name",
                    "origin_channel_id",
                    "recipients",
                    "type"
                ]
            },
            "MinimalPublicUserDTO": {
                "type": "object",
                "properties": {
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "discriminator": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "public_flags": {
                        "type": "integer"
                    },
                    "username": {
                        "type": "string"
                    },
                    "badge_ids": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    }
                },
                "required": [
                    "discriminator",
                    "id",
                    "public_flags",
                    "username"
                ]
            },
            "APIDMChannelArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/DmChannelDTO"
                }
            },
            "APIBackupCodeArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/BackupCode"
                }
            },
            "UserUpdateResponse": {
                "type": "object",
                "properties": {
                    "newToken": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "id": {
                        "description": "A Twitter-like snowflake, except the epoch is 2015-01-01T00:00:00.000Z\n```\nIf we have a snowflake '266241948824764416' we can represent it as binary:\n\n64                                          22     17     12          0\n 000000111011000111100001101001000101000000  00001  00000  000000000000\n      number of ms since Discord epoch       worker  pid    increment\n```",
                        "format": "snowflake",
                        "type": "string"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "verified": {
                        "type": "boolean"
                    },
                    "premium_since": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "discriminator": {
                        "type": "string"
                    },
                    "public_flags": {
                        "type": "integer"
                    },
                    "accent_color": {
                        "type": "integer"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "bot": {
                        "type": "boolean"
                    },
                    "premium_type": {
                        "type": "integer"
                    },
                    "theme_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "badge_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "mfa_enabled": {
                        "type": "boolean"
                    },
                    "phone": {
                        "type": "string"
                    },
                    "nsfw_allowed": {
                        "type": "boolean"
                    },
                    "premium": {
                        "type": "boolean"
                    },
                    "purchased_flags": {
                        "type": "integer"
                    },
                    "premium_usage_flags": {
                        "type": "integer"
                    },
                    "disabled": {
                        "type": "boolean"
                    },
                    "settings": {
                        "$ref": "#/components/schemas/UserSettingsSchema"
                    }
                },
                "required": [
                    "bio",
                    "bot",
                    "disabled",
                    "discriminator",
                    "flags",
                    "id",
                    "mfa_enabled",
                    "nsfw_allowed",
                    "premium",
                    "premium_since",
                    "premium_type",
                    "premium_usage_flags",
                    "public_flags",
                    "purchased_flags",
                    "username",
                    "verified"
                ]
            },
            "ApplicationDetectableResponse": {
                "type": "array",
                "items": {}
            },
            "ApplicationEntitlementsResponse": {
                "type": "array",
                "items": {}
            },
            "ApplicationSkusResponse": {
                "type": "array",
                "items": {}
            },
            "APIApplicationArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Application"
                }
            },
            "APIBansArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/GuildBansResponse"
                }
            },
            "APIInviteArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Invite"
                }
            },
            "APIMessageArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Message"
                }
            },
            "APIWebhookArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Webhook"
                }
            },
            "Categories": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer"
                    },
                    "name": {
                        "type": "string"
                    },
                    "localizations": {
                        "type": "string"
                    },
                    "is_primary": {
                        "type": "boolean"
                    },
                    "icon": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "is_primary",
                    "localizations",
                    "name"
                ]
            },
            "APIDiscoveryCategoryArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Categories"
                }
            },
            "APIGeneralConfiguration": {
                "type": "object",
                "properties": {
                    "instanceName": {
                        "type": "string",
                        "default": "Spacebar Instance"
                    },
                    "instanceDescription": {
                        "type": "string",
                        "default": "This is a Spacebar instance made in the pre-release days",
                        "nullable": true
                    },
                    "frontPage": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "tosPage": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "correspondenceEmail": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "correspondenceUserID": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "image": {
                        "type": "string",
                        "default": null,
                        "nullable": true
                    },
                    "instanceId": {
                        "type": "string"
                    },
                    "autoCreateBotUsers": {
                        "type": "boolean",
                        "default": false
                    }
                },
                "required": [
                    "autoCreateBotUsers",
                    "correspondenceEmail",
                    "correspondenceUserID",
                    "frontPage",
                    "image",
                    "instanceDescription",
                    "instanceId",
                    "instanceName",
                    "tosPage"
                ]
            },
            "APIChannelArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Channel"
                }
            },
            "APIEmojiArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Emoji"
                }
            },
            "APIMemberArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Member"
                }
            },
            "APIPublicMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "mute": {
                        "type": "boolean"
                    },
                    "deaf": {
                        "type": "boolean"
                    },
                    "nick": {
                        "type": "string"
                    },
                    "joined_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "pending": {
                        "type": "boolean"
                    },
                    "premium_since": {
                        "type": "integer"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/PublicUser"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "deaf",
                    "guild_id",
                    "id",
                    "joined_at",
                    "mute",
                    "pending",
                    "roles",
                    "user"
                ]
            },
            "APIGuildWithJoinedAt": {
                "type": "object",
                "properties": {
                    "joined_at": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "primary_category_id": {
                        "type": "string"
                    },
                    "large": {
                        "type": "boolean"
                    },
                    "max_members": {
                        "type": "integer"
                    },
                    "max_presences": {
                        "type": "integer"
                    },
                    "max_video_channel_users": {
                        "type": "integer"
                    },
                    "member_count": {
                        "type": "integer"
                    },
                    "presence_count": {
                        "type": "integer"
                    },
                    "template_id": {
                        "type": "string"
                    },
                    "mfa_level": {
                        "type": "integer"
                    },
                    "owner_id": {
                        "type": "string"
                    },
                    "premium_subscription_count": {
                        "type": "integer"
                    },
                    "premium_tier": {
                        "type": "integer"
                    },
                    "welcome_screen": {
                        "$ref": "#/components/schemas/GuildWelcomeScreen"
                    },
                    "widget_channel_id": {
                        "type": "string"
                    },
                    "widget_enabled": {
                        "type": "boolean"
                    },
                    "nsfw_level": {
                        "type": "integer"
                    },
                    "nsfw": {
                        "type": "boolean"
                    },
                    "parent": {
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "system_channel_id": {
                        "type": "string"
                    },
                    "rules_channel_id": {
                        "type": "string"
                    },
                    "guild_template_code": {
                        "type": "string"
                    },
                    "staff_only": {
                        "type": "boolean"
                    },
                    "splash": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verification_level": {
                        "type": "integer"
                    },
                    "default_message_notifications": {
                        "type": "integer"
                    },
                    "system_channel_flags": {
                        "type": "integer"
                    },
                    "explicit_content_filter": {
                        "type": "integer"
                    },
                    "public_updates_channel_id": {
                        "type": "string"
                    },
                    "afk_timeout": {
                        "type": "integer"
                    },
                    "afk_channel_id": {
                        "type": "string"
                    },
                    "preferred_locale": {
                        "type": "string"
                    },
                    "premium_progress_bar_enabled": {
                        "type": "boolean"
                    },
                    "discovery_splash": {
                        "type": "string"
                    },
                    "safety_alerts_channel_id": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "id",
                    "joined_at",
                    "large",
                    "max_members",
                    "max_presences",
                    "max_video_channel_users",
                    "member_count",
                    "mfa_level",
                    "name",
                    "nsfw",
                    "nsfw_level",
                    "owner_id",
                    "parent",
                    "premium_subscription_count",
                    "premium_tier",
                    "presence_count",
                    "primary_category_id",
                    "template_id",
                    "welcome_screen",
                    "widget_channel_id",
                    "widget_enabled"
                ]
            },
            "APIRoleArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Role"
                }
            },
            "APIStickerArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Sticker"
                }
            },
            "APITemplateArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Template"
                }
            },
            "GuildVoiceRegion": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "custom": {
                        "type": "boolean"
                    },
                    "deprecated": {
                        "type": "boolean"
                    },
                    "optimal": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "custom",
                    "deprecated",
                    "id",
                    "name",
                    "optimal"
                ]
            },
            "APIGuildVoiceRegion": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/GuildVoiceRegion"
                }
            },
            "UserLimits": {
                "type": "object",
                "properties": {
                    "maxGuilds": {
                        "type": "integer",
                        "default": 1048576
                    },
                    "maxUsername": {
                        "type": "integer",
                        "default": 32
                    },
                    "maxFriends": {
                        "type": "integer",
                        "default": 5000
                    },
                    "maxBio": {
                        "type": "integer",
                        "default": 190
                    }
                },
                "required": [
                    "maxBio",
                    "maxFriends",
                    "maxGuilds",
                    "maxUsername"
                ]
            },
            "GuildLimits": {
                "type": "object",
                "properties": {
                    "maxRoles": {
                        "type": "integer",
                        "default": 1000
                    },
                    "maxEmojis": {
                        "type": "integer",
                        "default": 2000
                    },
                    "maxStickers": {
                        "type": "integer",
                        "default": 500
                    },
                    "maxMembers": {
                        "type": "integer",
                        "default": 25000000
                    },
                    "maxChannels": {
                        "type": "integer",
                        "default": 65535
                    },
                    "maxBulkBanUsers": {
                        "type": "integer",
                        "default": 200
                    },
                    "maxChannelsInCategory": {
                        "type": "integer",
                        "default": 65535
                    }
                },
                "required": [
                    "maxBulkBanUsers",
                    "maxChannels",
                    "maxChannelsInCategory",
                    "maxEmojis",
                    "maxMembers",
                    "maxRoles",
                    "maxStickers"
                ]
            },
            "MessageLimits": {
                "type": "object",
                "properties": {
                    "maxCharacters": {
                        "type": "integer",
                        "default": 1048576
                    },
                    "maxTTSCharacters": {
                        "type": "integer",
                        "default": 160
                    },
                    "maxReactions": {
                        "type": "integer",
                        "default": 2048
                    },
                    "maxAttachmentSize": {
                        "type": "integer",
                        "default": 1073741824
                    },
                    "maxBulkDelete": {
                        "type": "integer",
                        "default": 1000
                    },
                    "maxEmbedDownloadSize": {
                        "type": "integer",
                        "default": 5242880
                    },
                    "maxPreloadCount": {
                        "type": "integer",
                        "default": 100
                    }
                },
                "required": [
                    "maxAttachmentSize",
                    "maxBulkDelete",
                    "maxCharacters",
                    "maxEmbedDownloadSize",
                    "maxPreloadCount",
                    "maxReactions",
                    "maxTTSCharacters"
                ]
            },
            "ChannelLimits": {
                "type": "object",
                "properties": {
                    "maxPins": {
                        "type": "integer",
                        "default": 500
                    },
                    "maxTopic": {
                        "type": "integer",
                        "default": 1024
                    },
                    "maxWebhooks": {
                        "type": "integer",
                        "default": 100
                    }
                },
                "required": [
                    "maxPins",
                    "maxTopic",
                    "maxWebhooks"
                ]
            },
            "RateLimits": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean",
                        "default": false
                    },
                    "ip": {
                        "$ref": "#/components/schemas/RateLimitOptions"
                    },
                    "global": {
                        "$ref": "#/components/schemas/RateLimitOptions"
                    },
                    "error": {
                        "$ref": "#/components/schemas/RateLimitOptions"
                    },
                    "routes": {
                        "$ref": "#/components/schemas/RouteRateLimit"
                    }
                },
                "required": [
                    "enabled",
                    "error",
                    "global",
                    "ip",
                    "routes"
                ]
            },
            "RateLimitOptions": {
                "type": "object",
                "properties": {
                    "bot": {
                        "type": "integer"
                    },
                    "count": {
                        "type": "integer"
                    },
                    "window": {
                        "type": "integer"
                    },
                    "onyIp": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "count",
                    "window"
                ]
            },
            "RouteRateLimit": {
                "type": "object",
                "properties": {
                    "guild": {
                        "$ref": "#/components/schemas/RateLimitOptions"
                    },
                    "webhook": {
                        "$ref": "#/components/schemas/RateLimitOptions"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/RateLimitOptions"
                    },
                    "auth": {
                        "$ref": "#/components/schemas/AuthRateLimit"
                    }
                },
                "required": [
                    "auth",
                    "channel",
                    "guild",
                    "webhook"
                ]
            },
            "AuthRateLimit": {
                "type": "object",
                "properties": {
                    "login": {
                        "$ref": "#/components/schemas/RateLimitOptions"
                    },
                    "register": {
                        "$ref": "#/components/schemas/RateLimitOptions"
                    }
                },
                "required": [
                    "login",
                    "register"
                ]
            },
            "GlobalRateLimits": {
                "type": "object",
                "properties": {
                    "register": {
                        "$ref": "#/components/schemas/GlobalRateLimit"
                    },
                    "sendMessage": {
                        "$ref": "#/components/schemas/GlobalRateLimit"
                    }
                },
                "required": [
                    "register",
                    "sendMessage"
                ]
            },
            "GlobalRateLimit": {
                "type": "object",
                "properties": {
                    "limit": {
                        "type": "integer",
                        "default": 100
                    },
                    "window": {
                        "type": "integer",
                        "default": 3600000
                    },
                    "enabled": {
                        "type": "boolean",
                        "default": true
                    }
                },
                "required": [
                    "enabled",
                    "limit",
                    "window"
                ]
            },
            "APILimitsConfiguration": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/UserLimits"
                    },
                    "guild": {
                        "$ref": "#/components/schemas/GuildLimits"
                    },
                    "message": {
                        "$ref": "#/components/schemas/MessageLimits"
                    },
                    "channel": {
                        "$ref": "#/components/schemas/ChannelLimits"
                    },
                    "rate": {
                        "$ref": "#/components/schemas/RateLimits"
                    },
                    "absoluteRate": {
                        "$ref": "#/components/schemas/GlobalRateLimits"
                    }
                },
                "required": [
                    "absoluteRate",
                    "channel",
                    "guild",
                    "message",
                    "rate",
                    "user"
                ]
            },
            "APIStickerPackArray": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/StickerPack"
                }
            },
            "APIConnectionsConfiguration": {
                "type": "object"
            },
            "UpdatesResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "pub_date": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "notes": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name",
                    "notes",
                    "pub_date",
                    "url"
                ]
            },
            "UploadAttachmentResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "upload_url": {
                        "type": "string"
                    },
                    "upload_filename": {
                        "type": "string"
                    },
                    "original_content_type": {
                        "type": "string"
                    }
                },
                "required": [
                    "upload_filename",
                    "upload_url"
                ]
            },
            "UploadAttachmentResponseSchema": {
                "type": "object",
                "properties": {
                    "attachments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UploadAttachmentResponse"
                        }
                    }
                },
                "required": [
                    "attachments"
                ]
            },
            "UserNoteResponse": {
                "type": "object",
                "properties": {
                    "note": {
                        "type": "string"
                    },
                    "note_user_id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "note",
                    "note_user_id",
                    "user_id"
                ]
            },
            "PublicConnectedAccount": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "verified": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "name",
                    "type"
                ]
            },
            "UserProfile": {
                "type": "object",
                "properties": {
                    "accent_color": {
                        "type": "integer"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "theme_colors": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "pronouns": {
                        "type": "string"
                    }
                },
                "required": [
                    "bio"
                ]
            },
            "PublicMember": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "mute": {
                        "type": "boolean"
                    },
                    "deaf": {
                        "type": "boolean"
                    },
                    "nick": {
                        "type": "string"
                    },
                    "joined_at": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "pending": {
                        "type": "boolean"
                    },
                    "premium_since": {
                        "type": "integer"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "user": {
                        "$ref": "#/components/schemas/PublicUser"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "deaf",
                    "guild_id",
                    "id",
                    "joined_at",
                    "mute",
                    "pending",
                    "roles",
                    "user"
                ]
            },
            "PublicMemberProfile": {
                "type": "object",
                "properties": {
                    "guild_id": {
                        "type": "string"
                    },
                    "banner": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "accent_color": {
                        "type": "null"
                    }
                },
                "required": [
                    "accent_color",
                    "banner",
                    "bio",
                    "guild_id"
                ]
            },
            "Badge": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "link": {
                        "type": "string"
                    }
                },
                "required": [
                    "description",
                    "icon",
                    "id"
                ]
            },
            "UserProfileResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/PublicUser"
                    },
                    "connected_accounts": {
                        "$ref": "#/components/schemas/PublicConnectedAccount"
                    },
                    "premium_guild_since": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "premium_since": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "mutual_guilds": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "nick": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "id"
                            ]
                        }
                    },
                    "premium_type": {
                        "type": "integer"
                    },
                    "profile_themes_experiment_bucket": {
                        "type": "integer"
                    },
                    "user_profile": {
                        "$ref": "#/components/schemas/UserProfile"
                    },
                    "guild_member": {
                        "$ref": "#/components/schemas/PublicMember"
                    },
                    "guild_member_profile": {
                        "$ref": "#/components/schemas/PublicMemberProfile"
                    },
                    "badges": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Badge"
                        }
                    }
                },
                "required": [
                    "badges",
                    "connected_accounts",
                    "mutual_guilds",
                    "premium_type",
                    "profile_themes_experiment_bucket",
                    "user",
                    "user_profile"
                ]
            },
            "UserRelationsResponse": {
                "type": "array",
                "items": {
                    "additionalProperties": false,
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "username": {
                            "type": "string"
                        },
                        "discriminator": {
                            "type": "string"
                        },
                        "avatar": {
                            "type": "string"
                        },
                        "public_flags": {
                            "type": "integer"
                        }
                    },
                    "required": [
                        "discriminator",
                        "id",
                        "public_flags",
                        "username"
                    ]
                }
            },
            "UserRelationshipsResponse": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/RelationshipType"
                    },
                    "nickname": {
                        "type": "null"
                    },
                    "user": {
                        "$ref": "#/components/schemas/PublicUser"
                    }
                },
                "required": [
                    "id",
                    "nickname",
                    "type",
                    "user"
                ]
            },
            "WebAuthnCreateResponse": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "WebhookCreateResponse": {
                "type": "object",
                "properties": {
                    "user": {
                        "$ref": "#/components/schemas/User"
                    },
                    "hook": {
                        "$ref": "#/components/schemas/Webhook"
                    }
                },
                "required": [
                    "hook",
                    "user"
                ]
            },
            "AckBulkSchema": {
                "type": "object",
                "properties": {
                    "read_states": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "channel_id": {
                                    "type": "string"
                                },
                                "message_id": {
                                    "type": "string"
                                },
                                "read_state_type": {
                                    "type": "integer"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "channel_id",
                                "message_id",
                                "read_state_type"
                            ]
                        }
                    }
                },
                "required": [
                    "read_states"
                ]
            },
            "ApplicationAuthorizeSchema": {
                "type": "object",
                "properties": {
                    "authorize": {
                        "type": "boolean"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "captcha_key": {
                        "type": "string"
                    },
                    "code": {
                        "minLength": 6,
                        "maxLength": 6,
                        "type": "string"
                    }
                },
                "required": [
                    "authorize",
                    "guild_id",
                    "permissions"
                ]
            },
            "AutomodMentionSpamRuleSchema": {
                "type": "object",
                "properties": {
                    "mention_total_limit": {
                        "type": "integer"
                    },
                    "mention_raid_protection_enabled": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "mention_raid_protection_enabled",
                    "mention_total_limit"
                ]
            },
            "AutomodSuspectedSpamRuleSchema": {
                "type": "object"
            },
            "AutomodCommonlyFlaggedWordsRuleSchema": {
                "type": "object",
                "properties": {
                    "allow_list": {
                        "type": "array",
                        "items": [
                            {
                                "type": "string"
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "presets": {
                        "type": "array",
                        "items": [
                            {
                                "type": "integer"
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    }
                },
                "required": [
                    "allow_list",
                    "presets"
                ]
            },
            "AutomodCustomWordsRuleSchema": {
                "type": "object",
                "properties": {
                    "allow_list": {
                        "type": "array",
                        "items": [
                            {
                                "type": "string"
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "keyword_filter": {
                        "type": "array",
                        "items": [
                            {
                                "type": "string"
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "regex_patterns": {
                        "type": "array",
                        "items": [
                            {
                                "type": "string"
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    }
                },
                "required": [
                    "allow_list",
                    "keyword_filter",
                    "regex_patterns"
                ]
            },
            "AutomodRuleSchema": {
                "type": "object",
                "properties": {
                    "creator_id": {
                        "type": "string"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "event_type": {
                        "type": "integer"
                    },
                    "exempt_channels": {
                        "type": "array",
                        "items": [
                            {
                                "type": "string"
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "exempt_roles": {
                        "type": "array",
                        "items": [
                            {
                                "type": "string"
                            }
                        ],
                        "minItems": 1,
                        "maxItems": 1
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "trigger_type": {
                        "type": "integer"
                    },
                    "trigger_metadata": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/AutomodMentionSpamRuleSchema"
                            },
                            {
                                "$ref": "#/components/schemas/AutomodSuspectedSpamRuleSchema"
                            },
                            {
                                "$ref": "#/components/schemas/AutomodCommonlyFlaggedWordsRuleSchema"
                            },
                            {
                                "$ref": "#/components/schemas/AutomodCustomWordsRuleSchema"
                            }
                        ]
                    }
                },
                "required": [
                    "creator_id",
                    "enabled",
                    "event_type",
                    "exempt_channels",
                    "exempt_roles",
                    "guild_id",
                    "name",
                    "position",
                    "trigger_metadata",
                    "trigger_type"
                ]
            },
            "BackupCodesChallengeSchema": {
                "type": "object",
                "properties": {
                    "password": {
                        "minLength": 1,
                        "maxLength": 72,
                        "type": "string"
                    }
                },
                "required": [
                    "password"
                ]
            },
            "BanCreateSchema": {
                "type": "object",
                "properties": {
                    "delete_message_seconds": {
                        "type": "string"
                    },
                    "delete_message_days": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                }
            },
            "BanModeratorSchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "executor_id": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "executor_id",
                    "guild_id",
                    "id",
                    "user_id"
                ]
            },
            "BanRegistrySchema": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "executor_id": {
                        "type": "string"
                    },
                    "ip": {
                        "type": "string"
                    },
                    "reason": {
                        "type": "string"
                    }
                },
                "required": [
                    "executor_id",
                    "guild_id",
                    "id",
                    "user_id"
                ]
            },
            "BotModifySchema": {
                "type": "object",
                "properties": {
                    "avatar": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                }
            },
            "BulkBanSchema": {
                "type": "object",
                "properties": {
                    "user_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "delete_message_seconds": {
                        "type": "integer"
                    }
                },
                "required": [
                    "user_ids"
                ]
            },
            "BulkDeleteSchema": {
                "type": "object",
                "properties": {
                    "messages": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "messages"
                ]
            },
            "ChannelModifySchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "type": "string"
                    },
                    "type": {
                        "enum": [
                            0,
                            1,
                            10,
                            11,
                            12,
                            13,
                            14,
                            15,
                            2,
                            255,
                            3,
                            33,
                            34,
                            35,
                            4,
                            5,
                            6,
                            64,
                            7,
                            8,
                            9
                        ],
                        "type": "number"
                    },
                    "topic": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "bitrate": {
                        "type": "integer"
                    },
                    "user_limit": {
                        "type": "integer"
                    },
                    "rate_limit_per_user": {
                        "type": "integer"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "permission_overwrites": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "type": {
                                    "$ref": "#/components/schemas/ChannelPermissionOverwriteType"
                                },
                                "allow": {
                                    "type": "string"
                                },
                                "deny": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "allow",
                                "deny",
                                "id",
                                "type"
                            ]
                        }
                    },
                    "parent_id": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "nsfw": {
                        "type": "boolean"
                    },
                    "rtc_region": {
                        "type": "string"
                    },
                    "default_auto_archive_duration": {
                        "type": "integer"
                    },
                    "default_reaction_emoji": {
                        "type": "string",
                        "nullable": true
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "default_thread_rate_limit_per_user": {
                        "type": "integer"
                    },
                    "video_quality_mode": {
                        "type": "integer"
                    }
                }
            },
            "ChannelPermissionOverwriteSchema": {
                "type": "object",
                "properties": {
                    "allow": {
                        "type": "string"
                    },
                    "deny": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "type": {
                        "$ref": "#/components/schemas/ChannelPermissionOverwriteType"
                    }
                },
                "required": [
                    "allow",
                    "deny",
                    "id",
                    "type"
                ]
            },
            "ChannelReorderSchema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "position": {
                            "type": "integer"
                        },
                        "lock_permissions": {
                            "type": "boolean"
                        },
                        "parent_id": {
                            "type": [
                                "null",
                                "string"
                            ]
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "id"
                    ]
                }
            },
            "CodesVerificationSchema": {
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "regenerate": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "key",
                    "nonce"
                ]
            },
            "ConnectedAccountSchema": {
                "type": "object",
                "properties": {
                    "external_id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "token_data": {
                        "$ref": "#/components/schemas/ConnectedAccountTokenData"
                    },
                    "friend_sync": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string"
                    },
                    "revoked": {
                        "type": "boolean"
                    },
                    "show_activity": {
                        "type": "integer"
                    },
                    "type": {
                        "type": "string"
                    },
                    "verified": {
                        "type": "boolean"
                    },
                    "visibility": {
                        "type": "integer"
                    },
                    "integrations": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "metadata_": {},
                    "metadata_visibility": {
                        "type": "integer"
                    },
                    "two_way_link": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "external_id",
                    "name",
                    "type",
                    "user_id"
                ]
            },
            "ConnectionCallbackSchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "state": {
                        "type": "string"
                    },
                    "insecure": {
                        "type": "boolean"
                    },
                    "friend_sync": {
                        "type": "boolean"
                    },
                    "openid_params": {}
                },
                "required": [
                    "friend_sync",
                    "insecure",
                    "state"
                ]
            },
            "ConnectionUpdateSchema": {
                "type": "object",
                "properties": {
                    "visibility": {
                        "type": "boolean"
                    },
                    "show_activity": {
                        "type": "boolean"
                    },
                    "metadata_visibility": {
                        "type": "boolean"
                    }
                }
            },
            "DmChannelCreateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "recipients": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "recipients"
                ]
            },
            "EmailDomainLookupSchema": {
                "type": "object",
                "properties": {
                    "allow_multiple_guilds": {
                        "type": "boolean"
                    },
                    "email": {
                        "type": "string"
                    },
                    "use_verification_code": {
                        "type": "boolean"
                    },
                    "guild_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "allow_multiple_guilds",
                    "email",
                    "use_verification_code"
                ]
            },
            "EmailDomainLookupVerifyCodeSchema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "guild_id": {
                        "type": "string"
                    },
                    "code": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "email",
                    "guild_id"
                ]
            },
            "EmojiCreateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "image": {
                        "type": "string"
                    },
                    "require_colons": {
                        "type": "boolean",
                        "nullable": true
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "image"
                ]
            },
            "EmojiModifySchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "ForgotPasswordSchema": {
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string"
                    },
                    "captcha_key": {
                        "type": "string"
                    }
                },
                "required": [
                    "login"
                ]
            },
            "AllowedMentions": {
                "type": "object",
                "properties": {
                    "parse": {
                        "type": "array",
                        "items": {
                            "enum": [
                                "everyone",
                                "roles",
                                "users"
                            ],
                            "type": "string"
                        }
                    },
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "users": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "replied_user": {
                        "type": "boolean"
                    }
                }
            },
            "GreetRequestSchema": {
                "type": "object",
                "properties": {
                    "sticker_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "allowed_mentions": {
                        "$ref": "#/components/schemas/AllowedMentions"
                    },
                    "message_reference": {
                        "type": "object",
                        "properties": {
                            "message_id": {
                                "type": "string"
                            },
                            "channel_id": {
                                "type": "string"
                            },
                            "guild_id": {
                                "type": "string"
                            },
                            "fail_if_not_exists": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message_id"
                        ]
                    }
                },
                "required": [
                    "sticker_ids"
                ]
            },
            "GuildCreateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 100,
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "channels": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ChannelModifySchema"
                        }
                    },
                    "system_channel_id": {
                        "type": "string"
                    },
                    "rules_channel_id": {
                        "type": "string"
                    },
                    "guild_template_code": {
                        "type": "string"
                    },
                    "staff_only": {
                        "type": "boolean"
                    }
                }
            },
            "GuildSubscriptionSchema": {
                "type": "object",
                "properties": {
                    "channels": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "array",
                                "items": {
                                    "type": "integer"
                                }
                            }
                        }
                    },
                    "members": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "activities": {
                        "type": "boolean"
                    },
                    "threads": {
                        "type": "boolean"
                    },
                    "typing": {
                        "const": true,
                        "type": "boolean"
                    },
                    "member_updates": {
                        "type": "boolean"
                    },
                    "thread_member_lists": {
                        "type": "array",
                        "items": {}
                    }
                }
            },
            "GuildSubscriptionsBulkSchema": {
                "type": "object",
                "properties": {
                    "subscriptions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GuildSubscriptionSchema"
                        }
                    }
                },
                "required": [
                    "subscriptions"
                ]
            },
            "GuildTemplateCreateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "name"
                ]
            },
            "GuildUpdateSchema": {
                "type": "object",
                "properties": {
                    "banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "splash": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "verification_level": {
                        "type": "integer"
                    },
                    "default_message_notifications": {
                        "type": "integer"
                    },
                    "system_channel_flags": {
                        "type": "integer"
                    },
                    "explicit_content_filter": {
                        "type": "integer"
                    },
                    "public_updates_channel_id": {
                        "type": "string"
                    },
                    "afk_timeout": {
                        "type": "integer"
                    },
                    "afk_channel_id": {
                        "type": "string"
                    },
                    "preferred_locale": {
                        "type": "string"
                    },
                    "premium_progress_bar_enabled": {
                        "type": "boolean"
                    },
                    "discovery_splash": {
                        "type": "string"
                    },
                    "safety_alerts_channel_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "maxLength": 100,
                        "type": "string"
                    },
                    "region": {
                        "type": "string"
                    },
                    "icon": {
                        "type": "string",
                        "nullable": true
                    },
                    "system_channel_id": {
                        "type": "string"
                    },
                    "rules_channel_id": {
                        "type": "string"
                    },
                    "guild_template_code": {
                        "type": "string"
                    },
                    "staff_only": {
                        "type": "boolean"
                    }
                }
            },
            "GuildUpdateWelcomeScreenSchema": {
                "type": "object",
                "properties": {
                    "welcome_channels": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "channel_id": {
                                    "type": "string"
                                },
                                "description": {
                                    "type": "string"
                                },
                                "emoji_id": {
                                    "type": "string"
                                },
                                "emoji_name": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "channel_id",
                                "description"
                            ]
                        }
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "HubWaitlistSignupSchema": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string"
                    },
                    "school": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "school"
                ]
            },
            "InviteCreateSchema": {
                "type": "object",
                "properties": {
                    "target_user_id": {
                        "type": "string"
                    },
                    "target_type": {
                        "type": "string"
                    },
                    "validate": {
                        "type": "string"
                    },
                    "max_age": {
                        "type": "integer"
                    },
                    "max_uses": {
                        "type": "integer"
                    },
                    "temporary": {
                        "type": "boolean"
                    },
                    "unique": {
                        "type": "boolean"
                    },
                    "target_user": {
                        "type": "string"
                    },
                    "target_user_type": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    }
                }
            },
            "MFAResponse": {
                "type": "object",
                "properties": {
                    "ticket": {
                        "type": "string"
                    },
                    "mfa": {
                        "type": "boolean",
                        "const": true
                    },
                    "sms": {
                        "type": "boolean",
                        "const": false
                    },
                    "token": {
                        "type": "null"
                    }
                },
                "required": [
                    "mfa",
                    "sms",
                    "ticket",
                    "token"
                ]
            },
            "WebAuthnResponse": {
                "type": "object",
                "properties": {
                    "webauthn": {
                        "type": "string"
                    },
                    "ticket": {
                        "type": "string"
                    },
                    "mfa": {
                        "type": "boolean",
                        "const": true
                    },
                    "sms": {
                        "type": "boolean",
                        "const": false
                    },
                    "token": {
                        "type": "null"
                    }
                },
                "required": [
                    "mfa",
                    "sms",
                    "ticket",
                    "token",
                    "webauthn"
                ]
            },
            "LoginResponse": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/TokenResponse"
                    },
                    {
                        "$ref": "#/components/schemas/MFAResponse"
                    },
                    {
                        "$ref": "#/components/schemas/WebAuthnResponse"
                    }
                ]
            },
            "LoginSchema": {
                "type": "object",
                "properties": {
                    "login": {
                        "type": "string"
                    },
                    "password": {
                        "minLength": 1,
                        "maxLength": 72,
                        "type": "string"
                    },
                    "undelete": {
                        "type": "boolean"
                    },
                    "captcha_key": {
                        "type": "string"
                    },
                    "login_source": {
                        "type": "string"
                    },
                    "gift_code_sku_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "login",
                    "password"
                ]
            },
            "MemberChangeProfileSchema": {
                "type": "object",
                "properties": {
                    "banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "nick": {
                        "type": "string"
                    },
                    "bio": {
                        "type": "string"
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "theme_colors": {
                        "items": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "type": "array",
                        "minItems": 2,
                        "maxItems": 2
                    }
                }
            },
            "MemberChangeSchema": {
                "type": "object",
                "properties": {
                    "roles": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nick": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string"
                    }
                }
            },
            "MemberNickChangeSchema": {
                "type": "object",
                "properties": {
                    "nick": {
                        "type": "string"
                    }
                },
                "required": [
                    "nick"
                ]
            },
            "MessageAcknowledgeSchema": {
                "type": "object",
                "properties": {
                    "manual": {
                        "type": "boolean"
                    },
                    "mention_count": {
                        "type": "integer"
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "last_viewed": {
                        "type": "integer"
                    },
                    "token": {
                        "type": "string"
                    }
                }
            },
            "MessageEditSchema": {
                "type": "object",
                "properties": {
                    "embed": {
                        "$ref": "#/components/schemas/Embed"
                    },
                    "file": {
                        "type": "object",
                        "properties": {
                            "filename": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "filename"
                        ]
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "content": {
                        "type": "string"
                    },
                    "mobile_network_type": {
                        "type": "string"
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "tts": {
                        "type": "boolean"
                    },
                    "embeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Embed"
                        }
                    },
                    "allowed_mentions": {
                        "type": "object",
                        "properties": {
                            "parse": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "users": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "replied_user": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    },
                    "message_reference": {
                        "type": "object",
                        "properties": {
                            "message_id": {
                                "type": "string"
                            },
                            "channel_id": {
                                "type": "string"
                            },
                            "guild_id": {
                                "type": "string"
                            },
                            "fail_if_not_exists": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message_id"
                        ]
                    },
                    "payload_json": {
                        "type": "string"
                    },
                    "attachments": {
                        "description": "TODO: we should create an interface for attachments\nTODO: OpenWAAO<-->attachment-style metadata conversion",
                        "type": "array",
                        "items": {
                            "anyOf": [
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "filename": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "filename",
                                        "id"
                                    ]
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string"
                                        },
                                        "filename": {
                                            "type": "string"
                                        },
                                        "uploaded_filename": {
                                            "type": "string"
                                        },
                                        "original_content_type": {
                                            "type": "string"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "filename",
                                        "uploaded_filename"
                                    ]
                                }
                            ]
                        }
                    },
                    "sticker_ids": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "components": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/ActionRowComponent"
                                }
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "poll": {
                        "$ref": "#/components/schemas/PollCreationSchema"
                    },
                    "enforce_nonce": {
                        "type": "boolean"
                    },
                    "applied_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "thread_name": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string"
                    }
                }
            },
            "MfaCodesSchema": {
                "type": "object",
                "properties": {
                    "password": {
                        "minLength": 1,
                        "maxLength": 72,
                        "type": "string"
                    },
                    "regenerate": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "password"
                ]
            },
            "ModifyGuildStickerSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "minLength": 2,
                        "maxLength": 30,
                        "type": "string"
                    },
                    "description": {
                        "maxLength": 100,
                        "type": "string"
                    },
                    "tags": {
                        "maxLength": 200,
                        "type": "string"
                    }
                },
                "required": [
                    "name",
                    "tags"
                ]
            },
            "PasswordResetSchema": {
                "type": "object",
                "properties": {
                    "password": {
                        "minLength": 1,
                        "maxLength": 72,
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "password",
                    "token"
                ]
            },
            "PreloadMessagesRequestSchema": {
                "type": "object",
                "properties": {
                    "channels": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "channels"
                ]
            },
            "PruneSchema": {
                "type": "object",
                "properties": {
                    "days": {
                        "type": "integer"
                    }
                },
                "required": [
                    "days"
                ]
            },
            "PurgeSchema": {
                "type": "object",
                "properties": {
                    "before": {
                        "type": "string"
                    },
                    "after": {
                        "type": "string"
                    }
                },
                "required": [
                    "after",
                    "before"
                ]
            },
            "RefreshUrlsRequestSchema": {
                "type": "object",
                "properties": {
                    "attachment_urls": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "attachment_urls"
                ]
            },
            "RegisterSchema": {
                "type": "object",
                "properties": {
                    "username": {
                        "minLength": 2,
                        "type": "string"
                    },
                    "password": {
                        "minLength": 1,
                        "maxLength": 72,
                        "type": "string"
                    },
                    "consent": {
                        "type": "boolean"
                    },
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "fingerprint": {
                        "type": "string"
                    },
                    "invite": {
                        "type": "string"
                    },
                    "date_of_birth": {
                        "type": "string"
                    },
                    "gift_code_sku_id": {
                        "type": "string"
                    },
                    "captcha_key": {
                        "type": "string"
                    },
                    "promotional_email_opt_in": {
                        "type": "boolean"
                    },
                    "unique_username_registration": {
                        "type": "boolean"
                    },
                    "global_name": {
                        "type": "string"
                    }
                },
                "required": [
                    "consent",
                    "username"
                ]
            },
            "RelationshipPostSchema": {
                "type": "object",
                "properties": {
                    "discriminator": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    }
                },
                "required": [
                    "discriminator",
                    "username"
                ]
            },
            "RelationshipPutSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "number"
                    }
                }
            },
            "RequestGuildMembersSchema": {
                "type": "object",
                "properties": {
                    "guild_id": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": [
                                    {
                                        "type": "string"
                                    }
                                ],
                                "minItems": 1,
                                "maxItems": 1
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "query": {
                        "type": "string"
                    },
                    "limit": {
                        "type": "integer"
                    },
                    "presences": {
                        "type": "boolean"
                    },
                    "user_ids": {
                        "anyOf": [
                            {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "nonce": {
                        "type": "string"
                    }
                },
                "required": [
                    "guild_id"
                ]
            },
            "RoleModifySchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "permissions": {
                        "type": "string"
                    },
                    "color": {
                        "type": "integer"
                    },
                    "hoist": {
                        "type": "boolean"
                    },
                    "mentionable": {
                        "type": "boolean"
                    },
                    "position": {
                        "type": "integer"
                    },
                    "icon": {
                        "type": "string"
                    },
                    "unicode_emoji": {
                        "type": "string"
                    },
                    "colors": {
                        "type": "object",
                        "properties": {
                            "primary_color": {
                                "type": "integer"
                            },
                            "secondary_color": {
                                "type": [
                                    "null",
                                    "integer"
                                ]
                            },
                            "tertiary_color": {
                                "type": [
                                    "null",
                                    "integer"
                                ]
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "primary_color",
                            "secondary_color"
                        ]
                    }
                }
            },
            "RolePositionUpdateSchema": {
                "type": "array",
                "items": {
                    "type": "object",
                    "properties": {
                        "id": {
                            "type": "string"
                        },
                        "position": {
                            "type": "integer"
                        }
                    },
                    "additionalProperties": false,
                    "required": [
                        "id",
                        "position"
                    ]
                }
            },
            "SelectProtocolSchema": {
                "type": "object",
                "properties": {
                    "protocol": {
                        "enum": [
                            "udp",
                            "webrtc"
                        ],
                        "type": "string"
                    },
                    "data": {
                        "anyOf": [
                            {
                                "type": "object",
                                "properties": {
                                    "address": {
                                        "type": "string"
                                    },
                                    "port": {
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "type": "string"
                                    }
                                },
                                "additionalProperties": false,
                                "required": [
                                    "address",
                                    "mode",
                                    "port"
                                ]
                            },
                            {
                                "type": "string"
                            }
                        ]
                    },
                    "sdp": {
                        "type": "string"
                    },
                    "codecs": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "name": {
                                    "enum": [
                                        "H264",
                                        "VP8",
                                        "VP9",
                                        "opus"
                                    ],
                                    "type": "string"
                                },
                                "type": {
                                    "enum": [
                                        "audio",
                                        "video"
                                    ],
                                    "type": "string"
                                },
                                "priority": {
                                    "type": "integer"
                                },
                                "payload_type": {
                                    "type": "integer"
                                },
                                "rtx_payload_type": {
                                    "type": "integer"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "name",
                                "payload_type",
                                "priority",
                                "type"
                            ]
                        }
                    },
                    "rtc_connection_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "data",
                    "protocol"
                ]
            },
            "SettingsProtoUpdateSchema": {
                "type": "object",
                "properties": {
                    "settings": {
                        "type": "string"
                    },
                    "required_data_version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "settings"
                ]
            },
            "SettingsProtoUpdateJsonSchema": {
                "type": "object",
                "properties": {
                    "settings": {
                        "$ref": "#/components/schemas/JsonValue"
                    },
                    "required_data_version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "settings"
                ]
            },
            "TeamCreateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TemplateCreateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TemplateModifySchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "TotpDisableSchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "minLength": 6,
                        "maxLength": 6,
                        "type": "string"
                    }
                },
                "required": [
                    "code"
                ]
            },
            "TotpEnableSchema": {
                "type": "object",
                "properties": {
                    "password": {
                        "minLength": 1,
                        "maxLength": 72,
                        "type": "string"
                    },
                    "code": {
                        "minLength": 6,
                        "maxLength": 6,
                        "type": "string"
                    },
                    "secret": {
                        "type": "string"
                    }
                },
                "required": [
                    "password"
                ]
            },
            "TotpSchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "ticket": {
                        "type": "string"
                    },
                    "gift_code_sku_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "login_source": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "required": [
                    "code",
                    "ticket"
                ]
            },
            "UserDeleteSchema": {
                "type": "object",
                "properties": {
                    "user_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "user_id"
                ]
            },
            "UserGuildSettingsSchema": {
                "type": "object",
                "properties": {
                    "channel_overrides": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/ChannelOverride"
                        }
                    },
                    "version": {
                        "type": "integer"
                    },
                    "message_notifications": {
                        "type": "integer"
                    },
                    "mobile_push": {
                        "type": "boolean"
                    },
                    "mute_config": {
                        "anyOf": [
                            {
                                "$ref": "#/components/schemas/MuteConfig"
                            },
                            {
                                "type": "null"
                            }
                        ]
                    },
                    "muted": {
                        "type": "boolean"
                    },
                    "suppress_everyone": {
                        "type": "boolean"
                    },
                    "suppress_roles": {
                        "type": "boolean"
                    },
                    "guild_id": {
                        "type": "string",
                        "nullable": true
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "mute_scheduled_events": {
                        "type": "boolean"
                    },
                    "hide_muted_channels": {
                        "type": "boolean"
                    },
                    "notify_highlights": {
                        "const": 0,
                        "type": "number"
                    }
                }
            },
            "UserModifySchema": {
                "type": "object",
                "properties": {
                    "username": {
                        "minLength": 2,
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string",
                        "nullable": true
                    },
                    "bio": {
                        "type": "string"
                    },
                    "accent_color": {
                        "type": "integer"
                    },
                    "banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "minLength": 1,
                        "maxLength": 72,
                        "type": "string"
                    },
                    "new_password": {
                        "minLength": 1,
                        "maxLength": 72,
                        "type": "string"
                    },
                    "code": {
                        "minLength": 6,
                        "maxLength": 6,
                        "type": "string"
                    },
                    "email": {
                        "format": "email",
                        "type": "string"
                    },
                    "discriminator": {
                        "minLength": 4,
                        "maxLength": 4,
                        "type": "string"
                    }
                }
            },
            "UserNoteUpdateSchema": {
                "type": "object",
                "properties": {
                    "note": {
                        "type": "string"
                    }
                },
                "required": [
                    "note"
                ]
            },
            "UserProfileModifySchema": {
                "type": "object",
                "properties": {
                    "bio": {
                        "type": "string"
                    },
                    "accent_color": {
                        "type": "integer",
                        "nullable": true
                    },
                    "banner": {
                        "type": "string",
                        "nullable": true
                    },
                    "pronouns": {
                        "type": "string"
                    },
                    "theme_colors": {
                        "items": [
                            {
                                "type": "integer"
                            },
                            {
                                "type": "integer"
                            }
                        ],
                        "type": "array",
                        "minItems": 2,
                        "maxItems": 2
                    }
                }
            },
            "VanityUrlSchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "minLength": 1,
                        "maxLength": 20,
                        "type": "string"
                    }
                }
            },
            "VerifyEmailSchema": {
                "type": "object",
                "properties": {
                    "captcha_key": {
                        "type": "string",
                        "nullable": true
                    },
                    "token": {
                        "type": "string"
                    }
                },
                "required": [
                    "token"
                ]
            },
            "VoiceStateUpdateSchema": {
                "type": "object",
                "properties": {
                    "guild_id": {
                        "type": "string"
                    },
                    "channel_id": {
                        "type": "string"
                    },
                    "self_mute": {
                        "type": "boolean"
                    },
                    "self_deaf": {
                        "type": "boolean"
                    },
                    "self_video": {
                        "type": "boolean"
                    },
                    "preferred_region": {
                        "type": "string"
                    },
                    "request_to_speak_timestamp": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "suppress": {
                        "type": "boolean"
                    },
                    "flags": {
                        "type": "integer"
                    }
                },
                "required": [
                    "self_deaf",
                    "self_mute"
                ]
            },
            "GenerateWebAuthnCredentialsSchema": {
                "type": "object",
                "properties": {
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "password"
                ]
            },
            "CreateWebAuthnCredentialSchema": {
                "type": "object",
                "properties": {
                    "credential": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ticket": {
                        "type": "string"
                    }
                },
                "required": [
                    "credential",
                    "name",
                    "ticket"
                ]
            },
            "WebAuthnPostSchema": {
                "anyOf": [
                    {
                        "$ref": "#/components/schemas/GenerateWebAuthnCredentialsSchema"
                    },
                    {
                        "$ref": "#/components/schemas/CreateWebAuthnCredentialSchema"
                    }
                ]
            },
            "WebAuthnTotpSchema": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string"
                    },
                    "ticket": {
                        "type": "string"
                    }
                },
                "required": [
                    "code",
                    "ticket"
                ]
            },
            "WebhookCreateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 80,
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    }
                },
                "required": [
                    "name"
                ]
            },
            "WebhookExecuteSchema": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "username": {
                        "type": "string"
                    },
                    "avatar_url": {
                        "type": "string"
                    },
                    "tts": {
                        "type": "boolean"
                    },
                    "embeds": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Embed"
                        }
                    },
                    "allowed_mentions": {
                        "type": "object",
                        "properties": {
                            "parse": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "roles": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "users": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "replied_user": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false
                    },
                    "components": {
                        "type": "array",
                        "items": {}
                    },
                    "file": {
                        "type": "object",
                        "properties": {
                            "filename": {
                                "type": "string"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "filename"
                        ]
                    },
                    "payload_json": {
                        "type": "string"
                    },
                    "attachments": {
                        "description": "TODO: we should create an interface for attachments\nTODO: OpenWAAO<-->attachment-style metadata conversion",
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "id": {
                                    "type": "string"
                                },
                                "filename": {
                                    "type": "string"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "filename",
                                "id"
                            ]
                        }
                    },
                    "flags": {
                        "type": "integer"
                    },
                    "thread_name": {
                        "type": "string"
                    },
                    "applied_tags": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "message_reference": {
                        "type": "object",
                        "properties": {
                            "message_id": {
                                "type": "string"
                            },
                            "channel_id": {
                                "type": "string"
                            },
                            "guild_id": {
                                "type": "string"
                            },
                            "fail_if_not_exists": {
                                "type": "boolean"
                            }
                        },
                        "additionalProperties": false,
                        "required": [
                            "message_id"
                        ]
                    },
                    "sticker_ids": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "nonce": {
                        "type": "string"
                    },
                    "enforce_nonce": {
                        "type": "boolean"
                    },
                    "poll": {
                        "$ref": "#/components/schemas/PollCreationSchema"
                    }
                }
            },
            "WebhookUpdateSchema": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "avatar": {
                        "type": "string"
                    },
                    "channel_id": {
                        "type": "string"
                    }
                }
            },
            "WidgetModifySchema": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "channel_id": {
                        "type": "string"
                    }
                },
                "required": [
                    "channel_id",
                    "enabled"
                ]
            },
            "VoiceIdentifySchema": {
                "type": "object",
                "properties": {
                    "server_id": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "session_id": {
                        "type": "string"
                    },
                    "token": {
                        "type": "string"
                    },
                    "video": {
                        "type": "boolean"
                    },
                    "streams": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "enum": [
                                        "audio",
                                        "screen",
                                        "video"
                                    ],
                                    "type": "string"
                                },
                                "rid": {
                                    "type": "string"
                                },
                                "quality": {
                                    "type": "integer"
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "quality",
                                "rid",
                                "type"
                            ]
                        }
                    },
                    "max_secure_frames_version": {
                        "type": "integer"
                    }
                },
                "required": [
                    "server_id",
                    "session_id",
                    "token",
                    "user_id"
                ]
            },
            "VoiceVideoSchema": {
                "type": "object",
                "properties": {
                    "audio_ssrc": {
                        "type": "integer"
                    },
                    "video_ssrc": {
                        "type": "integer"
                    },
                    "rtx_ssrc": {
                        "type": "integer"
                    },
                    "user_id": {
                        "type": "string"
                    },
                    "streams": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "properties": {
                                "type": {
                                    "enum": [
                                        "audio",
                                        "screen",
                                        "video"
                                    ],
                                    "type": "string"
                                },
                                "rid": {
                                    "type": "string"
                                },
                                "ssrc": {
                                    "type": "integer"
                                },
                                "active": {
                                    "type": "boolean"
                                },
                                "quality": {
                                    "type": "integer"
                                },
                                "rtx_ssrc": {
                                    "type": "integer"
                                },
                                "max_bitrate": {
                                    "type": "integer"
                                },
                                "max_framerate": {
                                    "type": "integer"
                                },
                                "max_resolution": {
                                    "type": "object",
                                    "properties": {
                                        "type": {
                                            "type": "string"
                                        },
                                        "width": {
                                            "type": "integer"
                                        },
                                        "height": {
                                            "type": "integer"
                                        }
                                    },
                                    "additionalProperties": false,
                                    "required": [
                                        "height",
                                        "type",
                                        "width"
                                    ]
                                }
                            },
                            "additionalProperties": false,
                            "required": [
                                "active",
                                "max_bitrate",
                                "max_framerate",
                                "max_resolution",
                                "quality",
                                "rid",
                                "rtx_ssrc",
                                "ssrc",
                                "type"
                            ]
                        }
                    }
                },
                "required": [
                    "audio_ssrc",
                    "video_ssrc"
                ]
            },
            "ApplicationCommandCreateSchema": {
                "type": "object",
                "properties": {
                    "type": {
                        "enum": [
                            1,
                            2,
                            3,
                            4
                        ],
                        "type": "number"
                    },
                    "name": {
                        "type": "string"
                    },
                    "name_localizations": {
                        "$ref": "#/components/schemas/Record<string,string>"
                    },
                    "description": {
                        "type": "string"
                    },
                    "description_localizations": {
                        "$ref": "#/components/schemas/Record<string,string>"
                    },
                    "options": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationCommandOption"
                        }
                    },
                    "default_member_permissions": {
                        "type": "string"
                    },
                    "dm_permission": {
                        "type": "boolean"
                    },
                    "nsfw": {
                        "type": "boolean"
                    },
                    "integration_types": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ApplicationIntegrationType"
                        }
                    },
                    "contexts": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/InteractionContextType"
                        }
                    },
                    "handler": {
                        "enum": [
                            1,
                            2,
                            3
                        ],
                        "type": "number"
                    }
                },
                "required": [
                    "name"
                ]
            }
        }
    },
    "tags": [
        {
            "name": "-"
        },
        {
            "name": "applications"
        },
        {
            "name": "attachments"
        },
        {
            "name": "auth"
        },
        {
            "name": "beaker"
        },
        {
            "name": "channels"
        },
        {
            "name": "collectibles-categories"
        },
        {
            "name": "collectibles-shop"
        },
        {
            "name": "connections"
        },
        {
            "name": "discoverable-guilds"
        },
        {
            "name": "discovery"
        },
        {
            "name": "download"
        },
        {
            "name": "emojis"
        },
        {
            "name": "experiments"
        },
        {
            "name": "gateway"
        },
        {
            "name": "gifs"
        },
        {
            "name": "guild-recommendations"
        },
        {
            "name": "guilds"
        },
        {
            "name": "hub-waitlist"
        },
        {
            "name": "interactions"
        },
        {
            "name": "invites"
        },
        {
            "name": "oauth2"
        },
        {
            "name": "outbound-promotions"
        },
        {
            "name": "partners"
        },
        {
            "name": "ping"
        },
        {
            "name": "policies"
        },
        {
            "name": "read-states"
        },
        {
            "name": "reporting"
        },
        {
            "name": "safety-hub"
        },
        {
            "name": "scheduled-maintenances"
        },
        {
            "name": "science"
        },
        {
            "name": "stage-instances"
        },
        {
            "name": "sticker-packs"
        },
        {
            "name": "stickers"
        },
        {
            "name": "stop"
        },
        {
            "name": "store"
        },
        {
            "name": "teams"
        },
        {
            "name": "track"
        },
        {
            "name": "updates"
        },
        {
            "name": "users"
        },
        {
            "name": "voice"
        },
        {
            "name": "webhooks"
        }
    ],
    "paths": {
        "/webhooks/{webhook_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a webhook object for the given id. Requires the MANAGE_WEBHOOKS permission or to be the owner of the webhook.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIWebhook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "webhook_id"
                    }
                ],
                "tags": [
                    "webhooks"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "webhook_id"
                    }
                ],
                "tags": [
                    "webhooks"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "webhook_id"
                    }
                ],
                "tags": [
                    "webhooks"
                ]
            }
        },
        "/webhooks/{webhook_id}/{token}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a webhook object for the given id and token.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIWebhook"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "webhook_id"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "token"
                    }
                ],
                "tags": [
                    "webhooks"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookExecuteSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "webhook_id"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "token"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "waits for server confirmation of message send before response, and returns the created message body"
                    },
                    {
                        "name": "thread_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Send a message to the specified thread within a webhook's channel."
                    }
                ],
                "tags": [
                    "webhooks"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "webhook_id"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "token"
                    }
                ],
                "tags": [
                    "webhooks"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "webhook_id"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "token"
                    }
                ],
                "tags": [
                    "webhooks"
                ]
            }
        },
        "/webhooks/{webhook_id}/{token}/github/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookExecuteSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "webhook_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "webhook_id"
                    },
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "token"
                    },
                    {
                        "name": "wait",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "waits for server confirmation of message send before response, and returns the created message body"
                    },
                    {
                        "name": "thread_id",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Send a message to the specified thread within a webhook's channel."
                    }
                ],
                "tags": [
                    "webhooks"
                ]
            }
        },
        "/voice/regions/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIGuildVoiceRegion"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "voice"
                ]
            }
        },
        "/users/@me/settings/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSettings"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSettingsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSettings"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/settings-proto/2/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsProtoResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "atomic",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to try to apply the settings update atomically (default false)"
                    }
                ],
                "tags": [
                    "users"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingsProtoUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsProtoUpdateResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/users/@me/settings-proto/2/json": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsProtoJsonResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingsProtoUpdateJsonSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsProtoUpdateJsonResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "atomic",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to try to apply the settings update atomically (default false)"
                    }
                ],
                "tags": [
                    "users"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/users/@me/settings-proto/1/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsProtoResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "atomic",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to try to apply the settings update atomically (default false)"
                    }
                ],
                "tags": [
                    "users"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingsProtoUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsProtoUpdateResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/users/@me/settings-proto/1/json": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsProtoJsonResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SettingsProtoUpdateJsonSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SettingsProtoUpdateJsonResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "atomic",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to try to apply the settings update atomically (default false)"
                    }
                ],
                "tags": [
                    "users"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/users/@me/relationships/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRelationshipsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationshipPostSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/relationships/{user_id}": {
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RelationshipPutSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/notes/{user_id}": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserNoteResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserNoteUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/mfa/webauthn/credentials/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebAuthnPostSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebAuthnCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/mfa/webauthn/credentials/{key_id}/": {
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "key_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "key_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/mfa/totp/enable/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TotpEnableSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenWithBackupCodesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/mfa/totp/disable/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TotpDisableSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenOnlyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/mfa/codes/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "This route is replaced with users/@me/mfa/codes-verification in newer clients",
                "deprecated": true,
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MfaCodesSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIBackupCodeArray"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/mfa/codes-verification/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CodesVerificationSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIBackupCodeArray"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/library/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIPrivateUser"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserUpdateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/guilds/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIGuildArray"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/guilds/{guild_id}": {
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/guilds/premium/subscription-slots/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/guilds/{guild_id}/settings/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserGuildSettingsSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/entitlements/gifts": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/email-settings/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/disable/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/devices/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/delete/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/connections/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/connections/{connection_name}/{connection_id}/": {
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "connection_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_name"
                    },
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "connection_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_name"
                    },
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/connections/{connection_name}/{connection_id}/access-token/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "connection_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_name"
                    },
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/collectibles-purchases/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No description available"
                    },
                    "204": {
                        "description": "No description available"
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/collectibles-marketing/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectiblesMarketingResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No description available"
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/channels/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDMChannelArray"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DmChannelCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DmChannelDTO"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/billing/subscriptions/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/billing/payment-sources/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/billing/country-code/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/applications/{application_id}/entitlements/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/affinities/users/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/affinities/guilds/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/@me/activities/statistics/applications/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{user_id}/relationships/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRelationsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{user_id}/profile/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{user_id}/messages/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DmMessagesResponseSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{user_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIPublicUser"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/users/{user_id}/delete/": {
            "post": {
                "x-right-required": "MANAGE_USERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "users"
                ]
            }
        },
        "/updates/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UpdatesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "updates"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/track/": {
            "post": {
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "track"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/teams/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TeamListResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "include_payout_account_status",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Whether to include team payout account status in the response (default false)"
                    }
                ],
                "tags": [
                    "teams"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TeamCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Team"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "teams"
                ]
            }
        },
        "/store/published-listings/skus/{sku_id}": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "sku_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "sku_id"
                    }
                ],
                "tags": [
                    "store"
                ]
            }
        },
        "/store/published-listings/skus/{sku_id}/subscription-plans/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "sku_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "sku_id"
                    }
                ],
                "tags": [
                    "store"
                ]
            }
        },
        "/store/published-listings/applications/{application_id}/subscription-plans/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "store"
                ]
            }
        },
        "/store/published-listings/applications/{application_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "store"
                ]
            }
        },
        "/stop/": {
            "post": {
                "x-right-required": "OPERATOR",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "stop"
                ]
            }
        },
        "/stickers/{sticker_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sticker"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "sticker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "sticker_id"
                    }
                ],
                "tags": [
                    "stickers"
                ]
            }
        },
        "/sticker-packs/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIStickerPackArray"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "sticker-packs"
                ]
            }
        },
        "/stage-instances/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "stage-instances"
                ]
            }
        },
        "/science/": {
            "post": {
                "responses": {
                    "204": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "science"
                ]
            }
        },
        "/scheduled-maintenances/upcoming.json/": {
            "get": {
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "scheduled-maintenances"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/safety-hub/suspended/@me/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountStandingResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "safety-hub"
                ]
            }
        },
        "/safety-hub/@me/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AccountStandingResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "safety-hub"
                ]
            }
        },
        "/reporting/menu/message/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ReportingMenuResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "reporting"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/read-states/ack-bulk/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/AckBulkSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "read-states"
                ]
            }
        },
        "/policies/stats/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceStatsResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "policies"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/policies/instance/limits/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APILimitsConfiguration"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "policies"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/policies/instance/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIGeneralConfiguration"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "policies"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/policies/instance/domains/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstanceDomainsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "policies"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/policies/instance/config/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Object"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "policies"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/ping/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/InstancePingResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "ping"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/partners/{guild_id}/requirements/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "partners"
                ]
            }
        },
        "/outbound-promotions/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "outbound-promotions"
                ]
            }
        },
        "/oauth2/tokens/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "oauth2"
                ]
            }
        },
        "/oauth2/authorize/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "oauth2"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationAuthorizeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OAuthAuthorizeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "client_id",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "oauth2"
                ]
            }
        },
        "/oauth2/applications/@me/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "oauth2"
                ]
            }
        },
        "/invites/{invite_code}": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "invite_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "invite_code"
                    }
                ],
                "tags": [
                    "invites"
                ]
            },
            "post": {
                "x-right-required": "USE_MASS_INVITES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "invite_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "invite_code"
                    }
                ],
                "tags": [
                    "invites"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "invite_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "invite_code"
                    }
                ],
                "tags": [
                    "invites"
                ]
            }
        },
        "/interactions/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "interactions"
                ]
            }
        },
        "/interactions/{interaction_id}/{interaction_token}/callback/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "interaction_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "interaction_id"
                    },
                    {
                        "name": "interaction_token",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "interaction_token"
                    }
                ],
                "tags": [
                    "interactions"
                ]
            }
        },
        "/hub-waitlist/signup": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/HubWaitlistSignupSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HubWaitlistSignupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "hub-waitlist"
                ]
            }
        },
        "/guilds/templates/{template_code}": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "template_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "template_code"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GuildTemplateCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "template_code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "template_code"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/": {
            "post": {
                "x-right-required": "CREATE_GUILDS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GuildCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/automations/email-domain-lookup/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailDomainLookupSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmailDomainLookupResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/automations/email-domain-lookup/verify-code": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmailDomainLookupVerifyCodeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "501": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/widget.png/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/widget.json/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildWidgetJsonResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/widget/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildWidgetSettingsResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WidgetModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WidgetModifySchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/welcome-screen/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildWelcomeScreen"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GuildUpdateWelcomeScreenSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/webhooks/": {
            "get": {
                "x-permission-required": "MANAGE_WEBHOOKS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a list of guild webhook objects. Requires the MANAGE_WEBHOOKS permission.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIWebhookArray"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/voice-states/{user_id}/": {
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VoiceStateUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/vanity-url/": {
            "get": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildVanityUrlResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VanityUrlSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildVanityUrlCreateResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/templates/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APITemplateArray"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "post": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/templates/{code}": {
            "delete": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "code"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "put": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "code"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TemplateModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Template"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "code",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "code"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/stickers/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIStickerArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "post": {
                "x-permission-required": "MANAGE_EMOJIS_AND_STICKERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyGuildStickerSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sticker"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/stickers/{sticker_id}": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sticker"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "sticker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "sticker_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_EMOJIS_AND_STICKERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ModifyGuildStickerSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Sticker"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "sticker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "sticker_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "delete": {
                "x-permission-required": "MANAGE_EMOJIS_AND_STICKERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "sticker_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "sticker_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/roles/member-counts/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/roles/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "post": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RolePositionUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIRoleArray"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/roles/{role_id}/members/": {
            "patch": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "role_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/roles/{role_id}/member-ids/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "role_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/roles/{role_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "role_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "delete": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "role_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RoleModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Role"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "role_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/regions/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIGuildVoiceRegion"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/prune/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildPruneResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "post": {
                "x-right-required": "KICK_BAN_MEMBERS",
                "x-permission-required": "KICK_MEMBERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildPurgeResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/profile/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildProfileResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/profile/{member_id}": {
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberChangeProfileSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Member"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "member_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/premium/subscriptions": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/messages/search/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildMessagesSearchResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/members/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIMemberArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "max number of members to return (1-1000). default 1"
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/members/{member_id}/roles/{role_id}/": {
            "delete": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "member_id"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "role_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "put": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "member_id"
                    },
                    {
                        "name": "role_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "role_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/members/{member_id}/nick/": {
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberNickChangeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIPublicMember"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "member_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/members/{member_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIPublicMember"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "member_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MemberChangeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Member"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "member_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MemberJoinGuildResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "member_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "member_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "member_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/member-verification/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/invites/": {
            "get": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIInviteArray"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/integrations/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIGuildWithJoinedAt"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_GUILD",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GuildUpdateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildCreateResponse"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/emojis/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIEmojiArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "post": {
                "x-permission-required": "MANAGE_EMOJIS_AND_STICKERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmojiCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emoji"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/emojis/{emoji_id}": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emoji"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "emoji_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_EMOJIS_AND_STICKERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EmojiModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Emoji"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "emoji_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "delete": {
                "x-permission-required": "MANAGE_EMOJIS_AND_STICKERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "emoji_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/discovery-requirements/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildDiscoveryRequirementsResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/delete/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "401": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/channels/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIChannelArray"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "post": {
                "x-permission-required": "MANAGE_CHANNELS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_CHANNELS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelReorderSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/bulk-ban/": {
            "post": {
                "x-permission-required": [
                    "BAN_MEMBERS",
                    "MANAGE_GUILD"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkBanSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ban"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/bans/": {
            "get": {
                "x-permission-required": "BAN_MEMBERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIBansArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/bans/search": {
            "get": {
                "x-permission-required": "BAN_MEMBERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIBansArray"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Query to match username(s) and display name(s) against (1-32 characters)"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "number"
                        },
                        "description": "Max number of members to return (1-10, default 10)"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/bans/{user_id}": {
            "get": {
                "x-permission-required": "BAN_MEMBERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildBansResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "put": {
                "x-permission-required": "BAN_MEMBERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BanCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "delete": {
                "x-permission-required": "BAN_MEMBERS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/auto-moderation/rules/": {
            "get": {
                "x-permission-required": [
                    "MANAGE_GUILD"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutomodRuleSchemaWithId[]"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "post": {
                "x-permission-required": [
                    "MANAGE_GUILD"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutomodRuleSchemaWithId"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/auto-moderation/rules/{rule_id}": {
            "patch": {
                "x-permission-required": [
                    "MANAGE_GUILD"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/AutomodRuleSchemaWithId"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "rule_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            },
            "delete": {
                "x-permission-required": [
                    "MANAGE_GUILD"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "rule_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "rule_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/audit-logs/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guilds/{guild_id}/application-command-index/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "guilds"
                ]
            }
        },
        "/guild-recommendations/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GuildRecommendationsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "guild-recommendations"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/gifs/trending/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenorTrendingResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "locale",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Locale"
                    }
                ],
                "tags": [
                    "gifs"
                ]
            }
        },
        "/gifs/trending-gifs/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenorGifsResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "media_format",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Media format"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Locale"
                    }
                ],
                "tags": [
                    "gifs"
                ]
            }
        },
        "/gifs/search/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenorGifsResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "q",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "Search query"
                    },
                    {
                        "name": "media_format",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Media format"
                    },
                    {
                        "name": "locale",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Locale"
                    }
                ],
                "tags": [
                    "gifs"
                ]
            }
        },
        "/gateway/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "gateway"
                ]
            }
        },
        "/gateway/bot/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GatewayBotResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "gateway"
                ]
            }
        },
        "/experiments/": {
            "get": {
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "experiments"
                ]
            }
        },
        "/emojis/{emoji_id}/source/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/EmojiSourceResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "emoji_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji_id"
                    }
                ],
                "tags": [
                    "emojis"
                ]
            }
        },
        "/download/": {
            "get": {
                "responses": {
                    "302": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "download"
                ]
            }
        },
        "/discovery/categories": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIDiscoveryCategoryArray"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "discovery"
                ]
            }
        },
        "/discoverable-guilds/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DiscoverableGuildsResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "discoverable-guilds"
                ]
            }
        },
        "/connections/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIConnectionsConfiguration"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "connections"
                ]
            }
        },
        "/connections/{connection_name}/callback/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionCallbackSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "connection_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_name"
                    }
                ],
                "tags": [
                    "connections"
                ]
            }
        },
        "/connections/{connection_name}/authorize/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "connection_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_name"
                    }
                ],
                "tags": [
                    "connections"
                ]
            }
        },
        "/connections/{connection_name}/{connection_id}/refresh/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "connection_name",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_name"
                    },
                    {
                        "name": "connection_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "connection_id"
                    }
                ],
                "tags": [
                    "connections"
                ]
            }
        },
        "/collectibles-shop/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectiblesShopResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "collectibles-shop"
                ]
            }
        },
        "/collectibles-categories/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CollectiblesCategoriesResponse"
                                }
                            }
                        }
                    },
                    "204": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "collectibles-categories"
                ]
            }
        },
        "/channels/preload-messages/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PreloadMessagesRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PreloadMessagesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/webhooks/": {
            "get": {
                "x-permission-required": "MANAGE_WEBHOOKS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "description": "Returns a list of channel webhook objects. Requires the MANAGE_WEBHOOKS permission.",
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIWebhookArray"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "post": {
                "x-permission-required": "MANAGE_WEBHOOKS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebhookCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/WebhookCreateResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/typing/": {
            "post": {
                "x-permission-required": "SEND_MESSAGES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/recipients/{user_id}": {
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "201": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/purge/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/pins/{message_id}": {
            "put": {
                "x-permission-required": "VIEW_CHANNEL",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "delete": {
                "x-permission-required": "VIEW_CHANNEL",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/pins/": {
            "get": {
                "x-permission-required": [
                    "READ_MESSAGE_HISTORY"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIMessageArray"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/permissions/{overwrite_id}": {
            "put": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelPermissionOverwriteSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    },
                    "501": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "overwrite_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "overwrite_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "delete": {
                "x-permission-required": "MANAGE_ROLES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "overwrite_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "overwrite_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/pins/{message_id}": {
            "put": {
                "x-permission-required": "VIEW_CHANNEL",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "delete": {
                "x-permission-required": "VIEW_CHANNEL",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/pins/": {
            "get": {
                "x-permission-required": [
                    "READ_MESSAGE_HISTORY"
                ],
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIMessageArray"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIMessageArray"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "around",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "before",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "after",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "max number of messages to return (1-100). defaults to 50"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "post": {
                "x-right-required": "SEND_MESSAGES",
                "x-permission-required": "SEND_MESSAGES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/bulk-delete/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkDeleteSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/{message_id}/reactions/": {
            "delete": {
                "x-permission-required": "MANAGE_MESSAGES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/{message_id}/reactions/{emoji}": {
            "delete": {
                "x-permission-required": "MANAGE_MESSAGES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    },
                    {
                        "name": "emoji",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "get": {
                "x-permission-required": "VIEW_CHANNEL",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PublicUser"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    },
                    {
                        "name": "emoji",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/{message_id}/reactions/{emoji}/{user_id}": {
            "put": {
                "x-right-required": "SELF_ADD_REACTIONS",
                "x-permission-required": "READ_MESSAGE_HISTORY",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    },
                    {
                        "name": "emoji",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    },
                    {
                        "name": "emoji",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/{message_id}/reactions/{emoji}/{burst}/{user_id}": {
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    },
                    {
                        "name": "emoji",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "emoji"
                    },
                    {
                        "name": "burst",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "burst"
                    },
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "user_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/{message_id}/": {
            "patch": {
                "x-right-required": "SEND_MESSAGES",
                "x-permission-required": "SEND_MESSAGES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageEditSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "put": {
                "x-right-required": "SEND_BACKDATED_EVENTS",
                "x-permission-required": "SEND_MESSAGES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "get": {
                "x-permission-required": "VIEW_CHANNEL",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "No description available"
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "delete": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/{message_id}/crosspost/": {
            "post": {
                "x-permission-required": "MANAGE_MESSAGES",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/messages/{message_id}/ack/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/MessageAcknowledgeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "No description available"
                    },
                    "403": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    },
                    {
                        "name": "message_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "message_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/invites/": {
            "post": {
                "x-right-required": "CREATE_INVITES",
                "x-permission-required": "CREATE_INSTANT_INVITE",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/InviteCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Invite"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "get": {
                "x-permission-required": "MANAGE_CHANNELS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIInviteArray"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/": {
            "get": {
                "x-permission-required": "VIEW_CHANNEL",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "delete": {
                "x-permission-required": "MANAGE_CHANNELS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            },
            "patch": {
                "x-permission-required": "MANAGE_CHANNELS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChannelModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Channel"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/greet/": {
            "post": {
                "x-permission-required": "MANAGE_CHANNELS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GreetRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Message"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/directory-entries/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HubDirectoryEntriesResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/channels/{channel_id}/attachments/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UploadAttachmentRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UploadAttachmentResponseSchema"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "channel_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "channel_id"
                    }
                ],
                "tags": [
                    "channels"
                ]
            }
        },
        "/beaker/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "beaker"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/auth/verify/view-backup-codes-challenge/": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BackupCodesChallengeSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/BackupCodesChallengeResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/verify/resend/": {
            "post": {
                "x-right-required": "RESEND_VERIFICATION_EMAIL",
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/verify/": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/VerifyEmailSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorOrCaptchaResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/reset/": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PasswordResetSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenOnlyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorOrCaptchaResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/register/": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegisterSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenOnlyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorOrCaptchaResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/mfa/webauthn/": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/WebAuthnTotpSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/auth/mfa/totp/": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TotpSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/auth/logout/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/login/": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorOrCaptchaResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/location-metadata/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LocationMetadataResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/generate-registration-tokens/": {
            "get": {
                "x-right-required": "CREATE_REGISTRATION_TOKENS",
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateRegistrationTokensResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "The number of registration tokens to generate. Defaults to 1."
                    },
                    {
                        "name": "length",
                        "in": "query",
                        "schema": {
                            "type": "number"
                        },
                        "description": "The length of each registration token. Defaults to 255."
                    }
                ],
                "tags": [
                    "auth"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/auth/forgot/": {
            "post": {
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "204": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorOrCaptchaResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "auth"
                ]
            }
        },
        "/attachments/refresh-urls/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RefreshUrlsRequestSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RefreshUrlsResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "attachments"
                ]
            }
        },
        "/applications/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIApplicationArray"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "applications"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/detectable/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationDetectableResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "applications"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/applications/@me/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "applications"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/skus/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationSkusResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/delete": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "No description available"
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/guilds/{guild_id}/commands/permissions/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/guilds/{guild_id}/commands/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCommandCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/guilds/{guild_id}/commands/{command_id}/permissions/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "command_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "command_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "command_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "command_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/guilds/{guild_id}/commands/{command_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "command_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "command_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCommandCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "guild_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "guild_id"
                    },
                    {
                        "name": "command_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "command_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/entitlements/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApplicationEntitlementsResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/commands/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCommandCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "put": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/commands/{command_id}/": {
            "get": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "command_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "command_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ApplicationCommandCreateSchema"
                            }
                        }
                    }
                },
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    },
                    {
                        "name": "command_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "command_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/bot/": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenOnlyResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            },
            "patch": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BotModifySchema"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/applications/{application_id}/bot/reset": {
            "post": {
                "security": [
                    {
                        "bearer": []
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenResponse"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/APIErrorResponse"
                                }
                            }
                        }
                    }
                },
                "parameters": [
                    {
                        "name": "application_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "description": "application_id"
                    }
                ],
                "tags": [
                    "applications"
                ]
            }
        },
        "/-/readyz/": {
            "get": {
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "-"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        },
        "/-/healthz/": {
            "get": {
                "responses": {
                    "default": {
                        "description": "No description available"
                    }
                },
                "tags": [
                    "-"
                ],
                "x-badges": [
                    {
                        "label": "Spacebar-only",
                        "color": "red"
                    }
                ]
            }
        }
    }
}